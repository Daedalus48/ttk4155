
Ping Pong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000092  00800100  00001212  000012a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001212  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800192  00800192  00001338  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001338  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00001394  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000be0  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004e8  00000000  00000000  0000202c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a23  00000000  00000000  00002514  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000214  00000000  00000000  00002f38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006ebe  00000000  00000000  0000314c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006c5  00000000  00000000  0000a00a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  0000a6cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000686  00000000  00000000  0000a797  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4e c0       	rjmp	.+156    	; 0x9e <__ctors_end>
       2:	00 00       	nop
       4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
       6:	00 00       	nop
       8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
       a:	00 00       	nop
       c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
       e:	00 00       	nop
      10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
      12:	00 00       	nop
      14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
      16:	00 00       	nop
      18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
      22:	00 00       	nop
      24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>
      26:	00 00       	nop
      28:	56 c0       	rjmp	.+172    	; 0xd6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	54 c0       	rjmp	.+168    	; 0xd6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	52 c0       	rjmp	.+164    	; 0xd6 <__bad_interrupt>
      32:	00 00       	nop
      34:	50 c0       	rjmp	.+160    	; 0xd6 <__bad_interrupt>
      36:	00 00       	nop
      38:	4e c0       	rjmp	.+156    	; 0xd6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4c c0       	rjmp	.+152    	; 0xd6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	4a c0       	rjmp	.+148    	; 0xd6 <__bad_interrupt>
      42:	00 00       	nop
      44:	48 c0       	rjmp	.+144    	; 0xd6 <__bad_interrupt>
      46:	00 00       	nop
      48:	46 c0       	rjmp	.+140    	; 0xd6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	44 c0       	rjmp	.+136    	; 0xd6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	42 c0       	rjmp	.+132    	; 0xd6 <__bad_interrupt>
      52:	00 00       	nop
      54:	40 c0       	rjmp	.+128    	; 0xd6 <__bad_interrupt>
      56:	00 00       	nop
      58:	3e c0       	rjmp	.+124    	; 0xd6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3c c0       	rjmp	.+120    	; 0xd6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	3a c0       	rjmp	.+116    	; 0xd6 <__bad_interrupt>
      62:	00 00       	nop
      64:	38 c0       	rjmp	.+112    	; 0xd6 <__bad_interrupt>
      66:	00 00       	nop
      68:	36 c0       	rjmp	.+108    	; 0xd6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	34 c0       	rjmp	.+104    	; 0xd6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__ctors_end>:
      9e:	11 24       	eor	r1, r1
      a0:	1f be       	out	0x3f, r1	; 63
      a2:	cf ef       	ldi	r28, 0xFF	; 255
      a4:	d4 e0       	ldi	r29, 0x04	; 4
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
      aa:	11 e0       	ldi	r17, 0x01	; 1
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	b1 e0       	ldi	r27, 0x01	; 1
      b0:	e2 e1       	ldi	r30, 0x12	; 18
      b2:	f2 e1       	ldi	r31, 0x12	; 18
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x10>
      b6:	05 90       	lpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	a2 39       	cpi	r26, 0x92	; 146
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0xc>

000000c0 <__do_clear_bss>:
      c0:	21 e0       	ldi	r18, 0x01	; 1
      c2:	a2 e9       	ldi	r26, 0x92	; 146
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	ac 39       	cpi	r26, 0x9C	; 156
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	e3 d1       	rcall	.+966    	; 0x498 <main>
      d2:	0c 94 07 09 	jmp	0x120e	; 0x120e <_exit>

000000d6 <__bad_interrupt>:
      d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <adc_slider_adjust>:
		return 0;
	}
}

int adc_slider_adjust(int value){
	int ans = value * 200;
      d8:	28 ec       	ldi	r18, 0xC8	; 200
      da:	ac 01       	movw	r20, r24
      dc:	24 9f       	mul	r18, r20
      de:	c0 01       	movw	r24, r0
      e0:	25 9f       	mul	r18, r21
      e2:	90 0d       	add	r25, r0
      e4:	11 24       	eor	r1, r1
	ans = ans/250;
      e6:	6a ef       	ldi	r22, 0xFA	; 250
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	27 d4       	rcall	.+2126   	; 0x93a <__divmodhi4>
      ec:	cb 01       	movw	r24, r22
      ee:	84 56       	subi	r24, 0x64	; 100
      f0:	91 09       	sbc	r25, r1
      f2:	85 36       	cpi	r24, 0x65	; 101
      f4:	91 05       	cpc	r25, r1
      f6:	14 f0       	brlt	.+4      	; 0xfc <adc_slider_adjust+0x24>
      f8:	84 e6       	ldi	r24, 0x64	; 100
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	8c 39       	cpi	r24, 0x9C	; 156
      fe:	5f ef       	ldi	r21, 0xFF	; 255
     100:	95 07       	cpc	r25, r21
     102:	14 f4       	brge	.+4      	; 0x108 <adc_slider_adjust+0x30>
     104:	8c e9       	ldi	r24, 0x9C	; 156
     106:	9f ef       	ldi	r25, 0xFF	; 255
	if (ans<-100){
		ans = -100;
	}else if (ans>100){
		ans = 100;
	}return ans;
}
     108:	08 95       	ret

0000010a <adc_joystick_adjust>:

int adc_joystick_adjust(int value){
	int ans = value * 200;
     10a:	28 ec       	ldi	r18, 0xC8	; 200
     10c:	ac 01       	movw	r20, r24
     10e:	24 9f       	mul	r18, r20
     110:	c0 01       	movw	r24, r0
     112:	25 9f       	mul	r18, r21
     114:	90 0d       	add	r25, r0
     116:	11 24       	eor	r1, r1
	ans = ans/250;
     118:	6a ef       	ldi	r22, 0xFA	; 250
     11a:	70 e0       	ldi	r23, 0x00	; 0
     11c:	0e d4       	rcall	.+2076   	; 0x93a <__divmodhi4>
	ans = ans - 100;
     11e:	cb 01       	movw	r24, r22
     120:	84 56       	subi	r24, 0x64	; 100
     122:	91 09       	sbc	r25, r1
	
	if (ans<-100){
     124:	8c 39       	cpi	r24, 0x9C	; 156
     126:	5f ef       	ldi	r21, 0xFF	; 255
     128:	95 07       	cpc	r25, r21
     12a:	54 f0       	brlt	.+20     	; 0x140 <adc_joystick_adjust+0x36>
		ans = -100;
	}else if (ans>100){
     12c:	85 36       	cpi	r24, 0x65	; 101
     12e:	91 05       	cpc	r25, r1
     130:	54 f4       	brge	.+20     	; 0x146 <adc_joystick_adjust+0x3c>
		ans = 100;
	}else if ((ans<20) && (ans>-20)){
     132:	9c 01       	movw	r18, r24
     134:	2d 5e       	subi	r18, 0xED	; 237
     136:	3f 4f       	sbci	r19, 0xFF	; 255
     138:	27 32       	cpi	r18, 0x27	; 39
     13a:	31 05       	cpc	r19, r1
     13c:	38 f0       	brcs	.+14     	; 0x14c <adc_joystick_adjust+0x42>
     13e:	08 95       	ret
	int ans = value * 200;
	ans = ans/250;
	ans = ans - 100;
	
	if (ans<-100){
		ans = -100;
     140:	8c e9       	ldi	r24, 0x9C	; 156
     142:	9f ef       	ldi	r25, 0xFF	; 255
     144:	08 95       	ret
	}else if (ans>100){
		ans = 100;
     146:	84 e6       	ldi	r24, 0x64	; 100
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	08 95       	ret
	}else if ((ans<20) && (ans>-20)){
		ans = 0;
     14c:	80 e0       	ldi	r24, 0x00	; 0
     14e:	90 e0       	ldi	r25, 0x00	; 0
	}
	return ans;
}
     150:	08 95       	ret

00000152 <adc_get_slider_pos>:

int adc_get_slider_pos(int *left_s, int *right_s){
     152:	ff 92       	push	r15
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	8c 01       	movw	r16, r24
     15e:	eb 01       	movw	r28, r22

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     160:	86 e0       	ldi	r24, 0x06	; 6
     162:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     166:	85 e3       	ldi	r24, 0x35	; 53
     168:	8a 95       	dec	r24
     16a:	f1 f7       	brne	.-4      	; 0x168 <adc_get_slider_pos+0x16>
     16c:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     16e:	e0 e0       	ldi	r30, 0x00	; 0
     170:	f4 e1       	ldi	r31, 0x14	; 20
     172:	80 81       	ld	r24, Z

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     174:	97 e0       	ldi	r25, 0x07	; 7
     176:	90 83       	st	Z, r25
     178:	95 e3       	ldi	r25, 0x35	; 53
     17a:	9a 95       	dec	r25
     17c:	f1 f7       	brne	.-4      	; 0x17a <adc_get_slider_pos+0x28>
     17e:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     180:	f0 90 00 14 	lds	r15, 0x1400
}

int adc_get_slider_pos(int *left_s, int *right_s){
	int left_temp = adc_read(3);
	int right_temp = adc_read(4);
	*left_s = adc_slider_adjust(left_temp);
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	a8 df       	rcall	.-176    	; 0xd8 <adc_slider_adjust>
     188:	f8 01       	movw	r30, r16
     18a:	91 83       	std	Z+1, r25	; 0x01
     18c:	80 83       	st	Z, r24
	*right_s = adc_slider_adjust(right_temp);
     18e:	8f 2d       	mov	r24, r15
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	a2 df       	rcall	.-188    	; 0xd8 <adc_slider_adjust>
     194:	99 83       	std	Y+1, r25	; 0x01
     196:	88 83       	st	Y, r24
	return 0;
}
     198:	80 e0       	ldi	r24, 0x00	; 0
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	df 91       	pop	r29
     19e:	cf 91       	pop	r28
     1a0:	1f 91       	pop	r17
     1a2:	0f 91       	pop	r16
     1a4:	ff 90       	pop	r15
     1a6:	08 95       	ret

000001a8 <adc_get_joystick_pos>:

int adc_get_joystick_pos(int *y, int *x){
     1a8:	ff 92       	push	r15
     1aa:	0f 93       	push	r16
     1ac:	1f 93       	push	r17
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	8c 01       	movw	r16, r24
     1b4:	eb 01       	movw	r28, r22

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     1b6:	85 e0       	ldi	r24, 0x05	; 5
     1b8:	80 93 00 14 	sts	0x1400, r24
     1bc:	85 e3       	ldi	r24, 0x35	; 53
     1be:	8a 95       	dec	r24
     1c0:	f1 f7       	brne	.-4      	; 0x1be <adc_get_joystick_pos+0x16>
     1c2:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     1c4:	e0 e0       	ldi	r30, 0x00	; 0
     1c6:	f4 e1       	ldi	r31, 0x14	; 20
     1c8:	80 81       	ld	r24, Z

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     1ca:	94 e0       	ldi	r25, 0x04	; 4
     1cc:	90 83       	st	Z, r25
     1ce:	95 e3       	ldi	r25, 0x35	; 53
     1d0:	9a 95       	dec	r25
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <adc_get_joystick_pos+0x28>
     1d4:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     1d6:	f0 90 00 14 	lds	r15, 0x1400
}

int adc_get_joystick_pos(int *y, int *x){
	int y_temp = adc_read(2);
	int x_temp = adc_read(1);
	*y = adc_joystick_adjust(y_temp);
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	96 df       	rcall	.-212    	; 0x10a <adc_joystick_adjust>
     1de:	f8 01       	movw	r30, r16
     1e0:	91 83       	std	Z+1, r25	; 0x01
     1e2:	80 83       	st	Z, r24
	*x = adc_joystick_adjust(x_temp);
     1e4:	8f 2d       	mov	r24, r15
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	90 df       	rcall	.-224    	; 0x10a <adc_joystick_adjust>
     1ea:	99 83       	std	Y+1, r25	; 0x01
     1ec:	88 83       	st	Y, r24
	return 0;
}
     1ee:	80 e0       	ldi	r24, 0x00	; 0
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	df 91       	pop	r29
     1f4:	cf 91       	pop	r28
     1f6:	1f 91       	pop	r17
     1f8:	0f 91       	pop	r16
     1fa:	ff 90       	pop	r15
     1fc:	08 95       	ret

000001fe <adc_joystick_angle>:

int adc_joystick_angle(){
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	00 d0       	rcall	.+0      	; 0x204 <adc_joystick_angle+0x6>
     204:	00 d0       	rcall	.+0      	; 0x206 <adc_joystick_angle+0x8>
     206:	cd b7       	in	r28, 0x3d	; 61
     208:	de b7       	in	r29, 0x3e	; 62
	int x = 0, y = 0;
     20a:	1a 82       	std	Y+2, r1	; 0x02
     20c:	19 82       	std	Y+1, r1	; 0x01
     20e:	1c 82       	std	Y+4, r1	; 0x04
     210:	1b 82       	std	Y+3, r1	; 0x03
	adc_get_joystick_pos(&y, &x);
     212:	be 01       	movw	r22, r28
     214:	6f 5f       	subi	r22, 0xFF	; 255
     216:	7f 4f       	sbci	r23, 0xFF	; 255
     218:	ce 01       	movw	r24, r28
     21a:	03 96       	adiw	r24, 0x03	; 3
     21c:	c5 df       	rcall	.-118    	; 0x1a8 <adc_get_joystick_pos>
	return atan(x/y);
     21e:	89 81       	ldd	r24, Y+1	; 0x01
     220:	9a 81       	ldd	r25, Y+2	; 0x02
     222:	6b 81       	ldd	r22, Y+3	; 0x03
     224:	7c 81       	ldd	r23, Y+4	; 0x04
     226:	89 d3       	rcall	.+1810   	; 0x93a <__divmodhi4>
     228:	88 27       	eor	r24, r24
     22a:	77 fd       	sbrc	r23, 7
     22c:	80 95       	com	r24
     22e:	98 2f       	mov	r25, r24
     230:	9e d1       	rcall	.+828    	; 0x56e <__floatsisf>
     232:	42 d1       	rcall	.+644    	; 0x4b8 <atan>
     234:	69 d1       	rcall	.+722    	; 0x508 <__fixsfsi>
}
     236:	cb 01       	movw	r24, r22
     238:	0f 90       	pop	r0
     23a:	0f 90       	pop	r0
     23c:	0f 90       	pop	r0
     23e:	0f 90       	pop	r0
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	08 95       	ret

00000246 <adc_joystick_direction>:

int adc_joystick_direction(){
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	00 d0       	rcall	.+0      	; 0x24c <adc_joystick_direction+0x6>
     24c:	00 d0       	rcall	.+0      	; 0x24e <adc_joystick_direction+0x8>
     24e:	cd b7       	in	r28, 0x3d	; 61
     250:	de b7       	in	r29, 0x3e	; 62
	int x = 0, y = 0;
     252:	1a 82       	std	Y+2, r1	; 0x02
     254:	19 82       	std	Y+1, r1	; 0x01
     256:	1c 82       	std	Y+4, r1	; 0x04
     258:	1b 82       	std	Y+3, r1	; 0x03
	int ans = NEUTRAL;
	adc_get_joystick_pos(&y, &x);
     25a:	be 01       	movw	r22, r28
     25c:	6f 5f       	subi	r22, 0xFF	; 255
     25e:	7f 4f       	sbci	r23, 0xFF	; 255
     260:	ce 01       	movw	r24, r28
     262:	03 96       	adiw	r24, 0x03	; 3
     264:	a1 df       	rcall	.-190    	; 0x1a8 <adc_get_joystick_pos>
	if (abs(x)<abs(y)){
     266:	29 81       	ldd	r18, Y+1	; 0x01
     268:	3a 81       	ldd	r19, Y+2	; 0x02
     26a:	b9 01       	movw	r22, r18
     26c:	33 23       	and	r19, r19
     26e:	24 f4       	brge	.+8      	; 0x278 <adc_joystick_direction+0x32>
     270:	66 27       	eor	r22, r22
     272:	77 27       	eor	r23, r23
     274:	62 1b       	sub	r22, r18
     276:	73 0b       	sbc	r23, r19
     278:	8b 81       	ldd	r24, Y+3	; 0x03
     27a:	9c 81       	ldd	r25, Y+4	; 0x04
     27c:	ac 01       	movw	r20, r24
     27e:	99 23       	and	r25, r25
     280:	24 f4       	brge	.+8      	; 0x28a <adc_joystick_direction+0x44>
     282:	44 27       	eor	r20, r20
     284:	55 27       	eor	r21, r21
     286:	48 1b       	sub	r20, r24
     288:	59 0b       	sbc	r21, r25
     28a:	64 17       	cp	r22, r20
     28c:	75 07       	cpc	r23, r21
     28e:	44 f4       	brge	.+16     	; 0x2a0 <adc_joystick_direction+0x5a>
		if (y<0){
     290:	99 23       	and	r25, r25
     292:	8c f0       	brlt	.+34     	; 0x2b6 <adc_joystick_direction+0x70>
			ans = DOWN;
		}else if(y>0){
     294:	18 16       	cp	r1, r24
     296:	19 06       	cpc	r1, r25
     298:	8c f0       	brlt	.+34     	; 0x2bc <adc_joystick_direction+0x76>
	return atan(x/y);
}

int adc_joystick_direction(){
	int x = 0, y = 0;
	int ans = NEUTRAL;
     29a:	84 e0       	ldi	r24, 0x04	; 4
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	19 c0       	rjmp	.+50     	; 0x2d2 <adc_joystick_direction+0x8c>
		if (y<0){
			ans = DOWN;
		}else if(y>0){
			ans = UP;
		}
	}else if (abs(y)<abs(x)){
     2a0:	46 17       	cp	r20, r22
     2a2:	57 07       	cpc	r21, r23
     2a4:	74 f4       	brge	.+28     	; 0x2c2 <adc_joystick_direction+0x7c>
		if (x<0){
     2a6:	33 23       	and	r19, r19
     2a8:	7c f0       	brlt	.+30     	; 0x2c8 <adc_joystick_direction+0x82>
			ans = LEFT;
		}else if(x>0){
     2aa:	12 16       	cp	r1, r18
     2ac:	13 06       	cpc	r1, r19
     2ae:	7c f0       	brlt	.+30     	; 0x2ce <adc_joystick_direction+0x88>
	return atan(x/y);
}

int adc_joystick_direction(){
	int x = 0, y = 0;
	int ans = NEUTRAL;
     2b0:	84 e0       	ldi	r24, 0x04	; 4
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	0e c0       	rjmp	.+28     	; 0x2d2 <adc_joystick_direction+0x8c>
	adc_get_joystick_pos(&y, &x);
	if (abs(x)<abs(y)){
		if (y<0){
			ans = DOWN;
     2b6:	83 e0       	ldi	r24, 0x03	; 3
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	0b c0       	rjmp	.+22     	; 0x2d2 <adc_joystick_direction+0x8c>
		}else if(y>0){
			ans = UP;
     2bc:	82 e0       	ldi	r24, 0x02	; 2
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	08 c0       	rjmp	.+16     	; 0x2d2 <adc_joystick_direction+0x8c>
	return atan(x/y);
}

int adc_joystick_direction(){
	int x = 0, y = 0;
	int ans = NEUTRAL;
     2c2:	84 e0       	ldi	r24, 0x04	; 4
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	05 c0       	rjmp	.+10     	; 0x2d2 <adc_joystick_direction+0x8c>
		}else if(y>0){
			ans = UP;
		}
	}else if (abs(y)<abs(x)){
		if (x<0){
			ans = LEFT;
     2c8:	80 e0       	ldi	r24, 0x00	; 0
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <adc_joystick_direction+0x8c>
		}else if(x>0){
			ans = RIGHT;
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	90 e0       	ldi	r25, 0x00	; 0
		}
	}return ans;
}
     2d2:	0f 90       	pop	r0
     2d4:	0f 90       	pop	r0
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	df 91       	pop	r29
     2dc:	cf 91       	pop	r28
     2de:	08 95       	ret

000002e0 <adc_joystick_direction_dummy>:

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     2e0:	84 e0       	ldi	r24, 0x04	; 4
     2e2:	80 93 00 14 	sts	0x1400, r24
     2e6:	85 e3       	ldi	r24, 0x35	; 53
     2e8:	8a 95       	dec	r24
     2ea:	f1 f7       	brne	.-4      	; 0x2e8 <adc_joystick_direction_dummy+0x8>
     2ec:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     2ee:	e0 e0       	ldi	r30, 0x00	; 0
     2f0:	f4 e1       	ldi	r31, 0x14	; 20
     2f2:	40 81       	ld	r20, Z
     2f4:	50 e0       	ldi	r21, 0x00	; 0
	}return ans;
}

int adc_joystick_direction_dummy(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
     2f6:	4c 58       	subi	r20, 0x8C	; 140
     2f8:	51 09       	sbc	r21, r1

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     2fa:	85 e0       	ldi	r24, 0x05	; 5
     2fc:	80 83       	st	Z, r24
     2fe:	85 e3       	ldi	r24, 0x35	; 53
     300:	8a 95       	dec	r24
     302:	f1 f7       	brne	.-4      	; 0x300 <adc_joystick_direction_dummy+0x20>
     304:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     306:	20 91 00 14 	lds	r18, 0x1400
     30a:	30 e0       	ldi	r19, 0x00	; 0
}

int adc_joystick_direction_dummy(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
     30c:	2c 58       	subi	r18, 0x8C	; 140
     30e:	31 09       	sbc	r19, r1
	int ans = NEUTRAL;
	if (abs(x)<abs(y)){
     310:	ba 01       	movw	r22, r20
     312:	55 23       	and	r21, r21
     314:	24 f4       	brge	.+8      	; 0x31e <adc_joystick_direction_dummy+0x3e>
     316:	66 27       	eor	r22, r22
     318:	77 27       	eor	r23, r23
     31a:	64 1b       	sub	r22, r20
     31c:	75 0b       	sbc	r23, r21
     31e:	c9 01       	movw	r24, r18
     320:	33 23       	and	r19, r19
     322:	24 f4       	brge	.+8      	; 0x32c <adc_joystick_direction_dummy+0x4c>
     324:	88 27       	eor	r24, r24
     326:	99 27       	eor	r25, r25
     328:	82 1b       	sub	r24, r18
     32a:	93 0b       	sbc	r25, r19
     32c:	68 17       	cp	r22, r24
     32e:	79 07       	cpc	r23, r25
     330:	44 f4       	brge	.+16     	; 0x342 <adc_joystick_direction_dummy+0x62>
		if (y<0){
     332:	33 23       	and	r19, r19
     334:	8c f0       	brlt	.+34     	; 0x358 <adc_joystick_direction_dummy+0x78>
			ans = DOWN;
		}else if(y>0){
     336:	12 16       	cp	r1, r18
     338:	13 06       	cpc	r1, r19
     33a:	8c f0       	brlt	.+34     	; 0x35e <adc_joystick_direction_dummy+0x7e>

int adc_joystick_direction_dummy(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
	int ans = NEUTRAL;
     33c:	84 e0       	ldi	r24, 0x04	; 4
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	19 c0       	rjmp	.+50     	; 0x374 <adc_joystick_direction_dummy+0x94>
		if (y<0){
			ans = DOWN;
		}else if(y>0){
			ans = UP;
		}
	}else if (abs(y)<abs(x)){
     342:	86 17       	cp	r24, r22
     344:	97 07       	cpc	r25, r23
     346:	74 f4       	brge	.+28     	; 0x364 <adc_joystick_direction_dummy+0x84>
		if (x<0){
     348:	55 23       	and	r21, r21
     34a:	7c f0       	brlt	.+30     	; 0x36a <adc_joystick_direction_dummy+0x8a>
			ans = LEFT;
		}else if(x>0){
     34c:	14 16       	cp	r1, r20
     34e:	15 06       	cpc	r1, r21
     350:	7c f0       	brlt	.+30     	; 0x370 <adc_joystick_direction_dummy+0x90>

int adc_joystick_direction_dummy(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
	int ans = NEUTRAL;
     352:	84 e0       	ldi	r24, 0x04	; 4
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	0e c0       	rjmp	.+28     	; 0x374 <adc_joystick_direction_dummy+0x94>
	if (abs(x)<abs(y)){
		if (y<0){
			ans = DOWN;
     358:	83 e0       	ldi	r24, 0x03	; 3
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	0b c0       	rjmp	.+22     	; 0x374 <adc_joystick_direction_dummy+0x94>
		}else if(y>0){
			ans = UP;
     35e:	82 e0       	ldi	r24, 0x02	; 2
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	08 c0       	rjmp	.+16     	; 0x374 <adc_joystick_direction_dummy+0x94>

int adc_joystick_direction_dummy(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
	int ans = NEUTRAL;
     364:	84 e0       	ldi	r24, 0x04	; 4
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	05 c0       	rjmp	.+10     	; 0x374 <adc_joystick_direction_dummy+0x94>
		}else if(y>0){
			ans = UP;
		}
	}else if (abs(y)<abs(x)){
		if (x<0){
			ans = LEFT;
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	02 c0       	rjmp	.+4      	; 0x374 <adc_joystick_direction_dummy+0x94>
		}else if(x>0){
			ans = RIGHT;
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	90 e0       	ldi	r25, 0x00	; 0
		}
	}if (abs(x)<20 && abs(y)<20){
     374:	4d 5e       	subi	r20, 0xED	; 237
     376:	5f 4f       	sbci	r21, 0xFF	; 255
     378:	47 32       	cpi	r20, 0x27	; 39
     37a:	51 05       	cpc	r21, r1
     37c:	38 f4       	brcc	.+14     	; 0x38c <adc_joystick_direction_dummy+0xac>
     37e:	2d 5e       	subi	r18, 0xED	; 237
     380:	3f 4f       	sbci	r19, 0xFF	; 255
     382:	27 32       	cpi	r18, 0x27	; 39
     384:	31 05       	cpc	r19, r1
     386:	10 f4       	brcc	.+4      	; 0x38c <adc_joystick_direction_dummy+0xac>
		ans = NEUTRAL;
     388:	84 e0       	ldi	r24, 0x04	; 4
     38a:	90 e0       	ldi	r25, 0x00	; 0
	}
	return ans;
}
     38c:	08 95       	ret

0000038e <adc_test_function>:

int adc_test_function(){
     38e:	cf 93       	push	r28
     390:	df 93       	push	r29
     392:	cd b7       	in	r28, 0x3d	; 61
     394:	de b7       	in	r29, 0x3e	; 62
     396:	28 97       	sbiw	r28, 0x08	; 8
     398:	0f b6       	in	r0, 0x3f	; 63
     39a:	f8 94       	cli
     39c:	de bf       	out	0x3e, r29	; 62
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	cd bf       	out	0x3d, r28	; 61
	int x = 0, y = 0, left_s = 0, right_s = 0;
     3a2:	1a 82       	std	Y+2, r1	; 0x02
     3a4:	19 82       	std	Y+1, r1	; 0x01
     3a6:	1c 82       	std	Y+4, r1	; 0x04
     3a8:	1b 82       	std	Y+3, r1	; 0x03
     3aa:	1e 82       	std	Y+6, r1	; 0x06
     3ac:	1d 82       	std	Y+5, r1	; 0x05
     3ae:	18 86       	std	Y+8, r1	; 0x08
     3b0:	1f 82       	std	Y+7, r1	; 0x07
	
	adc_get_joystick_pos(&y, &x);
     3b2:	be 01       	movw	r22, r28
     3b4:	6f 5f       	subi	r22, 0xFF	; 255
     3b6:	7f 4f       	sbci	r23, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	03 96       	adiw	r24, 0x03	; 3
     3bc:	f5 de       	rcall	.-534    	; 0x1a8 <adc_get_joystick_pos>
	adc_get_slider_pos(&left_s, &right_s);
     3be:	be 01       	movw	r22, r28
     3c0:	69 5f       	subi	r22, 0xF9	; 249
     3c2:	7f 4f       	sbci	r23, 0xFF	; 255
     3c4:	ce 01       	movw	r24, r28
     3c6:	05 96       	adiw	r24, 0x05	; 5
     3c8:	c4 de       	rcall	.-632    	; 0x152 <adc_get_slider_pos>
	
	printf("x =  %d \r\n", x);
     3ca:	8a 81       	ldd	r24, Y+2	; 0x02
     3cc:	8f 93       	push	r24
     3ce:	89 81       	ldd	r24, Y+1	; 0x01
     3d0:	8f 93       	push	r24
     3d2:	86 e0       	ldi	r24, 0x06	; 6
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	9f 93       	push	r25
     3d8:	8f 93       	push	r24
     3da:	20 d3       	rcall	.+1600   	; 0xa1c <printf>
	printf("y =  %d \r\n", y);
     3dc:	8c 81       	ldd	r24, Y+4	; 0x04
     3de:	8f 93       	push	r24
     3e0:	8b 81       	ldd	r24, Y+3	; 0x03
     3e2:	8f 93       	push	r24
     3e4:	87 e8       	ldi	r24, 0x87	; 135
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	9f 93       	push	r25
     3ea:	8f 93       	push	r24
     3ec:	17 d3       	rcall	.+1582   	; 0xa1c <printf>
	printf("left slider =  %d \r\n", left_s);
     3ee:	8e 81       	ldd	r24, Y+6	; 0x06
     3f0:	8f 93       	push	r24
     3f2:	8d 81       	ldd	r24, Y+5	; 0x05
     3f4:	8f 93       	push	r24
     3f6:	81 e1       	ldi	r24, 0x11	; 17
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	9f 93       	push	r25
     3fc:	8f 93       	push	r24
     3fe:	0e d3       	rcall	.+1564   	; 0xa1c <printf>
	printf("right slider =  %d \r\n", right_s);
     400:	88 85       	ldd	r24, Y+8	; 0x08
     402:	8f 93       	push	r24
     404:	8f 81       	ldd	r24, Y+7	; 0x07
     406:	8f 93       	push	r24
     408:	86 e2       	ldi	r24, 0x26	; 38
     40a:	91 e0       	ldi	r25, 0x01	; 1
     40c:	9f 93       	push	r25
     40e:	8f 93       	push	r24
     410:	05 d3       	rcall	.+1546   	; 0xa1c <printf>
	printf("joystick angle =  %d \r\n", adc_joystick_angle());
     412:	f5 de       	rcall	.-534    	; 0x1fe <adc_joystick_angle>
     414:	9f 93       	push	r25
     416:	8f 93       	push	r24
     418:	8c e3       	ldi	r24, 0x3C	; 60
     41a:	91 e0       	ldi	r25, 0x01	; 1
     41c:	9f 93       	push	r25
     41e:	8f 93       	push	r24
     420:	fd d2       	rcall	.+1530   	; 0xa1c <printf>
	printf("joystick direction =  %d \r\n", adc_joystick_direction());
     422:	11 df       	rcall	.-478    	; 0x246 <adc_joystick_direction>
     424:	9f 93       	push	r25
     426:	8f 93       	push	r24
     428:	84 e5       	ldi	r24, 0x54	; 84
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	9f 93       	push	r25
     42e:	8f 93       	push	r24
     430:	f5 d2       	rcall	.+1514   	; 0xa1c <printf>
	printf("joystick direction_dummy =  %d \r\n", adc_joystick_direction_dummy());
     432:	56 df       	rcall	.-340    	; 0x2e0 <adc_joystick_direction_dummy>
     434:	9f 93       	push	r25
     436:	8f 93       	push	r24
     438:	80 e7       	ldi	r24, 0x70	; 112
     43a:	91 e0       	ldi	r25, 0x01	; 1
     43c:	9f 93       	push	r25
     43e:	8f 93       	push	r24
     440:	ed d2       	rcall	.+1498   	; 0xa1c <printf>
	return 0;
     442:	0f b6       	in	r0, 0x3f	; 63
     444:	f8 94       	cli
     446:	de bf       	out	0x3e, r29	; 62
     448:	0f be       	out	0x3f, r0	; 63
     44a:	cd bf       	out	0x3d, r28	; 61
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	28 96       	adiw	r28, 0x08	; 8
     452:	0f b6       	in	r0, 0x3f	; 63
     454:	f8 94       	cli
     456:	de bf       	out	0x3e, r29	; 62
     458:	0f be       	out	0x3f, r0	; 63
     45a:	cd bf       	out	0x3d, r28	; 61
     45c:	df 91       	pop	r29
     45e:	cf 91       	pop	r28
     460:	08 95       	ret

00000462 <USART_Transmit>:

uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char*) BASE_ADDRESS;
	uint8_t ret_val = ext_mem[addr];
	return ret_val;
}
     462:	5d 9b       	sbis	0x0b, 5	; 11
     464:	fe cf       	rjmp	.-4      	; 0x462 <USART_Transmit>
     466:	8c b9       	out	0x0c, r24	; 12
     468:	08 95       	ret

0000046a <USART_Receive>:
     46a:	5f 99       	sbic	0x0b, 7	; 11
     46c:	fe cf       	rjmp	.-4      	; 0x46a <USART_Receive>
     46e:	8c b1       	in	r24, 0x0c	; 12
     470:	08 95       	ret

00000472 <USART_Init>:
     472:	90 bd       	out	0x20, r25	; 32
     474:	89 b9       	out	0x09, r24	; 9
     476:	88 e9       	ldi	r24, 0x98	; 152
     478:	8a b9       	out	0x0a, r24	; 10
     47a:	8e e8       	ldi	r24, 0x8E	; 142
     47c:	80 bd       	out	0x20, r24	; 32
     47e:	65 e3       	ldi	r22, 0x35	; 53
     480:	72 e0       	ldi	r23, 0x02	; 2
     482:	81 e3       	ldi	r24, 0x31	; 49
     484:	92 e0       	ldi	r25, 0x02	; 2
     486:	80 c2       	rjmp	.+1280   	; 0x988 <fdevopen>
     488:	08 95       	ret

0000048a <xmem_init>:
     48a:	85 b7       	in	r24, 0x35	; 53
     48c:	80 68       	ori	r24, 0x80	; 128
     48e:	85 bf       	out	0x35, r24	; 53
     490:	80 b7       	in	r24, 0x30	; 48
     492:	80 62       	ori	r24, 0x20	; 32
     494:	80 bf       	out	0x30, r24	; 48
     496:	08 95       	ret

00000498 <main>:
*/


int main(void){
	
	USART_Init(MYUBRR);
     498:	8f e1       	ldi	r24, 0x1F	; 31
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	ea df       	rcall	.-44     	; 0x472 <USART_Init>
	xmem_init();
     49e:	f5 df       	rcall	.-22     	; 0x48a <xmem_init>
	uint8_t data = 5;
	DDRB &= ~(1<<PB0);
     4a0:	b8 98       	cbi	0x17, 0	; 23
	int left_s = 0, right_s = 0, x = 0, y = 0;
	
	while (1)
	{
		
		adc_test_function();	
     4a2:	75 df       	rcall	.-278    	; 0x38e <adc_test_function>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4a4:	2f ef       	ldi	r18, 0xFF	; 255
     4a6:	8f e7       	ldi	r24, 0x7F	; 127
     4a8:	95 e2       	ldi	r25, 0x25	; 37
     4aa:	21 50       	subi	r18, 0x01	; 1
     4ac:	80 40       	sbci	r24, 0x00	; 0
     4ae:	90 40       	sbci	r25, 0x00	; 0
     4b0:	e1 f7       	brne	.-8      	; 0x4aa <main+0x12>
     4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <main+0x1c>
     4b4:	00 00       	nop
     4b6:	f5 cf       	rjmp	.-22     	; 0x4a2 <main+0xa>

000004b8 <atan>:
     4b8:	df 93       	push	r29
     4ba:	dd 27       	eor	r29, r29
     4bc:	b9 2f       	mov	r27, r25
     4be:	bf 77       	andi	r27, 0x7F	; 127
     4c0:	40 e8       	ldi	r20, 0x80	; 128
     4c2:	5f e3       	ldi	r21, 0x3F	; 63
     4c4:	16 16       	cp	r1, r22
     4c6:	17 06       	cpc	r1, r23
     4c8:	48 07       	cpc	r20, r24
     4ca:	5b 07       	cpc	r21, r27
     4cc:	10 f4       	brcc	.+4      	; 0x4d2 <atan+0x1a>
     4ce:	d9 2f       	mov	r29, r25
     4d0:	e8 d0       	rcall	.+464    	; 0x6a2 <inverse>
     4d2:	9f 93       	push	r25
     4d4:	8f 93       	push	r24
     4d6:	7f 93       	push	r23
     4d8:	6f 93       	push	r22
     4da:	4b d1       	rcall	.+662    	; 0x772 <square>
     4dc:	e0 e7       	ldi	r30, 0x70	; 112
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	81 d0       	rcall	.+258    	; 0x5e4 <__fp_powser>
     4e2:	a5 d0       	rcall	.+330    	; 0x62e <__fp_round>
     4e4:	2f 91       	pop	r18
     4e6:	3f 91       	pop	r19
     4e8:	4f 91       	pop	r20
     4ea:	5f 91       	pop	r21
     4ec:	eb d0       	rcall	.+470    	; 0x6c4 <__mulsf3x>
     4ee:	dd 23       	and	r29, r29
     4f0:	49 f0       	breq	.+18     	; 0x504 <__stack+0x5>
     4f2:	90 58       	subi	r25, 0x80	; 128
     4f4:	a2 ea       	ldi	r26, 0xA2	; 162
     4f6:	2a ed       	ldi	r18, 0xDA	; 218
     4f8:	3f e0       	ldi	r19, 0x0F	; 15
     4fa:	49 ec       	ldi	r20, 0xC9	; 201
     4fc:	5f e3       	ldi	r21, 0x3F	; 63
     4fe:	d0 78       	andi	r29, 0x80	; 128
     500:	5d 27       	eor	r21, r29
     502:	47 d1       	rcall	.+654    	; 0x792 <__addsf3x>
     504:	df 91       	pop	r29
     506:	93 c0       	rjmp	.+294    	; 0x62e <__fp_round>

00000508 <__fixsfsi>:
     508:	04 d0       	rcall	.+8      	; 0x512 <__fixunssfsi>
     50a:	68 94       	set
     50c:	b1 11       	cpse	r27, r1
     50e:	c3 c0       	rjmp	.+390    	; 0x696 <__fp_szero>
     510:	08 95       	ret

00000512 <__fixunssfsi>:
     512:	a6 d0       	rcall	.+332    	; 0x660 <__fp_splitA>
     514:	88 f0       	brcs	.+34     	; 0x538 <__fixunssfsi+0x26>
     516:	9f 57       	subi	r25, 0x7F	; 127
     518:	90 f0       	brcs	.+36     	; 0x53e <__fixunssfsi+0x2c>
     51a:	b9 2f       	mov	r27, r25
     51c:	99 27       	eor	r25, r25
     51e:	b7 51       	subi	r27, 0x17	; 23
     520:	a0 f0       	brcs	.+40     	; 0x54a <__fixunssfsi+0x38>
     522:	d1 f0       	breq	.+52     	; 0x558 <__fixunssfsi+0x46>
     524:	66 0f       	add	r22, r22
     526:	77 1f       	adc	r23, r23
     528:	88 1f       	adc	r24, r24
     52a:	99 1f       	adc	r25, r25
     52c:	1a f0       	brmi	.+6      	; 0x534 <__fixunssfsi+0x22>
     52e:	ba 95       	dec	r27
     530:	c9 f7       	brne	.-14     	; 0x524 <__fixunssfsi+0x12>
     532:	12 c0       	rjmp	.+36     	; 0x558 <__fixunssfsi+0x46>
     534:	b1 30       	cpi	r27, 0x01	; 1
     536:	81 f0       	breq	.+32     	; 0x558 <__fixunssfsi+0x46>
     538:	ad d0       	rcall	.+346    	; 0x694 <__fp_zero>
     53a:	b1 e0       	ldi	r27, 0x01	; 1
     53c:	08 95       	ret
     53e:	aa c0       	rjmp	.+340    	; 0x694 <__fp_zero>
     540:	67 2f       	mov	r22, r23
     542:	78 2f       	mov	r23, r24
     544:	88 27       	eor	r24, r24
     546:	b8 5f       	subi	r27, 0xF8	; 248
     548:	39 f0       	breq	.+14     	; 0x558 <__fixunssfsi+0x46>
     54a:	b9 3f       	cpi	r27, 0xF9	; 249
     54c:	cc f3       	brlt	.-14     	; 0x540 <__fixunssfsi+0x2e>
     54e:	86 95       	lsr	r24
     550:	77 95       	ror	r23
     552:	67 95       	ror	r22
     554:	b3 95       	inc	r27
     556:	d9 f7       	brne	.-10     	; 0x54e <__fixunssfsi+0x3c>
     558:	3e f4       	brtc	.+14     	; 0x568 <__fixunssfsi+0x56>
     55a:	90 95       	com	r25
     55c:	80 95       	com	r24
     55e:	70 95       	com	r23
     560:	61 95       	neg	r22
     562:	7f 4f       	sbci	r23, 0xFF	; 255
     564:	8f 4f       	sbci	r24, 0xFF	; 255
     566:	9f 4f       	sbci	r25, 0xFF	; 255
     568:	08 95       	ret

0000056a <__floatunsisf>:
     56a:	e8 94       	clt
     56c:	09 c0       	rjmp	.+18     	; 0x580 <__floatsisf+0x12>

0000056e <__floatsisf>:
     56e:	97 fb       	bst	r25, 7
     570:	3e f4       	brtc	.+14     	; 0x580 <__floatsisf+0x12>
     572:	90 95       	com	r25
     574:	80 95       	com	r24
     576:	70 95       	com	r23
     578:	61 95       	neg	r22
     57a:	7f 4f       	sbci	r23, 0xFF	; 255
     57c:	8f 4f       	sbci	r24, 0xFF	; 255
     57e:	9f 4f       	sbci	r25, 0xFF	; 255
     580:	99 23       	and	r25, r25
     582:	a9 f0       	breq	.+42     	; 0x5ae <__floatsisf+0x40>
     584:	f9 2f       	mov	r31, r25
     586:	96 e9       	ldi	r25, 0x96	; 150
     588:	bb 27       	eor	r27, r27
     58a:	93 95       	inc	r25
     58c:	f6 95       	lsr	r31
     58e:	87 95       	ror	r24
     590:	77 95       	ror	r23
     592:	67 95       	ror	r22
     594:	b7 95       	ror	r27
     596:	f1 11       	cpse	r31, r1
     598:	f8 cf       	rjmp	.-16     	; 0x58a <__floatsisf+0x1c>
     59a:	fa f4       	brpl	.+62     	; 0x5da <__floatsisf+0x6c>
     59c:	bb 0f       	add	r27, r27
     59e:	11 f4       	brne	.+4      	; 0x5a4 <__floatsisf+0x36>
     5a0:	60 ff       	sbrs	r22, 0
     5a2:	1b c0       	rjmp	.+54     	; 0x5da <__floatsisf+0x6c>
     5a4:	6f 5f       	subi	r22, 0xFF	; 255
     5a6:	7f 4f       	sbci	r23, 0xFF	; 255
     5a8:	8f 4f       	sbci	r24, 0xFF	; 255
     5aa:	9f 4f       	sbci	r25, 0xFF	; 255
     5ac:	16 c0       	rjmp	.+44     	; 0x5da <__floatsisf+0x6c>
     5ae:	88 23       	and	r24, r24
     5b0:	11 f0       	breq	.+4      	; 0x5b6 <__floatsisf+0x48>
     5b2:	96 e9       	ldi	r25, 0x96	; 150
     5b4:	11 c0       	rjmp	.+34     	; 0x5d8 <__floatsisf+0x6a>
     5b6:	77 23       	and	r23, r23
     5b8:	21 f0       	breq	.+8      	; 0x5c2 <__floatsisf+0x54>
     5ba:	9e e8       	ldi	r25, 0x8E	; 142
     5bc:	87 2f       	mov	r24, r23
     5be:	76 2f       	mov	r23, r22
     5c0:	05 c0       	rjmp	.+10     	; 0x5cc <__floatsisf+0x5e>
     5c2:	66 23       	and	r22, r22
     5c4:	71 f0       	breq	.+28     	; 0x5e2 <__floatsisf+0x74>
     5c6:	96 e8       	ldi	r25, 0x86	; 134
     5c8:	86 2f       	mov	r24, r22
     5ca:	70 e0       	ldi	r23, 0x00	; 0
     5cc:	60 e0       	ldi	r22, 0x00	; 0
     5ce:	2a f0       	brmi	.+10     	; 0x5da <__floatsisf+0x6c>
     5d0:	9a 95       	dec	r25
     5d2:	66 0f       	add	r22, r22
     5d4:	77 1f       	adc	r23, r23
     5d6:	88 1f       	adc	r24, r24
     5d8:	da f7       	brpl	.-10     	; 0x5d0 <__floatsisf+0x62>
     5da:	88 0f       	add	r24, r24
     5dc:	96 95       	lsr	r25
     5de:	87 95       	ror	r24
     5e0:	97 f9       	bld	r25, 7
     5e2:	08 95       	ret

000005e4 <__fp_powser>:
     5e4:	df 93       	push	r29
     5e6:	cf 93       	push	r28
     5e8:	1f 93       	push	r17
     5ea:	0f 93       	push	r16
     5ec:	ff 92       	push	r15
     5ee:	ef 92       	push	r14
     5f0:	df 92       	push	r13
     5f2:	7b 01       	movw	r14, r22
     5f4:	8c 01       	movw	r16, r24
     5f6:	68 94       	set
     5f8:	05 c0       	rjmp	.+10     	; 0x604 <__fp_powser+0x20>
     5fa:	da 2e       	mov	r13, r26
     5fc:	ef 01       	movw	r28, r30
     5fe:	62 d0       	rcall	.+196    	; 0x6c4 <__mulsf3x>
     600:	fe 01       	movw	r30, r28
     602:	e8 94       	clt
     604:	a5 91       	lpm	r26, Z+
     606:	25 91       	lpm	r18, Z+
     608:	35 91       	lpm	r19, Z+
     60a:	45 91       	lpm	r20, Z+
     60c:	55 91       	lpm	r21, Z+
     60e:	ae f3       	brts	.-22     	; 0x5fa <__fp_powser+0x16>
     610:	ef 01       	movw	r28, r30
     612:	bf d0       	rcall	.+382    	; 0x792 <__addsf3x>
     614:	fe 01       	movw	r30, r28
     616:	97 01       	movw	r18, r14
     618:	a8 01       	movw	r20, r16
     61a:	da 94       	dec	r13
     61c:	79 f7       	brne	.-34     	; 0x5fc <__fp_powser+0x18>
     61e:	df 90       	pop	r13
     620:	ef 90       	pop	r14
     622:	ff 90       	pop	r15
     624:	0f 91       	pop	r16
     626:	1f 91       	pop	r17
     628:	cf 91       	pop	r28
     62a:	df 91       	pop	r29
     62c:	08 95       	ret

0000062e <__fp_round>:
     62e:	09 2e       	mov	r0, r25
     630:	03 94       	inc	r0
     632:	00 0c       	add	r0, r0
     634:	11 f4       	brne	.+4      	; 0x63a <__fp_round+0xc>
     636:	88 23       	and	r24, r24
     638:	52 f0       	brmi	.+20     	; 0x64e <__fp_round+0x20>
     63a:	bb 0f       	add	r27, r27
     63c:	40 f4       	brcc	.+16     	; 0x64e <__fp_round+0x20>
     63e:	bf 2b       	or	r27, r31
     640:	11 f4       	brne	.+4      	; 0x646 <__fp_round+0x18>
     642:	60 ff       	sbrs	r22, 0
     644:	04 c0       	rjmp	.+8      	; 0x64e <__fp_round+0x20>
     646:	6f 5f       	subi	r22, 0xFF	; 255
     648:	7f 4f       	sbci	r23, 0xFF	; 255
     64a:	8f 4f       	sbci	r24, 0xFF	; 255
     64c:	9f 4f       	sbci	r25, 0xFF	; 255
     64e:	08 95       	ret

00000650 <__fp_split3>:
     650:	57 fd       	sbrc	r21, 7
     652:	90 58       	subi	r25, 0x80	; 128
     654:	44 0f       	add	r20, r20
     656:	55 1f       	adc	r21, r21
     658:	59 f0       	breq	.+22     	; 0x670 <__fp_splitA+0x10>
     65a:	5f 3f       	cpi	r21, 0xFF	; 255
     65c:	71 f0       	breq	.+28     	; 0x67a <__fp_splitA+0x1a>
     65e:	47 95       	ror	r20

00000660 <__fp_splitA>:
     660:	88 0f       	add	r24, r24
     662:	97 fb       	bst	r25, 7
     664:	99 1f       	adc	r25, r25
     666:	61 f0       	breq	.+24     	; 0x680 <__fp_splitA+0x20>
     668:	9f 3f       	cpi	r25, 0xFF	; 255
     66a:	79 f0       	breq	.+30     	; 0x68a <__fp_splitA+0x2a>
     66c:	87 95       	ror	r24
     66e:	08 95       	ret
     670:	12 16       	cp	r1, r18
     672:	13 06       	cpc	r1, r19
     674:	14 06       	cpc	r1, r20
     676:	55 1f       	adc	r21, r21
     678:	f2 cf       	rjmp	.-28     	; 0x65e <__fp_split3+0xe>
     67a:	46 95       	lsr	r20
     67c:	f1 df       	rcall	.-30     	; 0x660 <__fp_splitA>
     67e:	08 c0       	rjmp	.+16     	; 0x690 <__fp_splitA+0x30>
     680:	16 16       	cp	r1, r22
     682:	17 06       	cpc	r1, r23
     684:	18 06       	cpc	r1, r24
     686:	99 1f       	adc	r25, r25
     688:	f1 cf       	rjmp	.-30     	; 0x66c <__fp_splitA+0xc>
     68a:	86 95       	lsr	r24
     68c:	71 05       	cpc	r23, r1
     68e:	61 05       	cpc	r22, r1
     690:	08 94       	sec
     692:	08 95       	ret

00000694 <__fp_zero>:
     694:	e8 94       	clt

00000696 <__fp_szero>:
     696:	bb 27       	eor	r27, r27
     698:	66 27       	eor	r22, r22
     69a:	77 27       	eor	r23, r23
     69c:	cb 01       	movw	r24, r22
     69e:	97 f9       	bld	r25, 7
     6a0:	08 95       	ret

000006a2 <inverse>:
     6a2:	9b 01       	movw	r18, r22
     6a4:	ac 01       	movw	r20, r24
     6a6:	60 e0       	ldi	r22, 0x00	; 0
     6a8:	70 e0       	ldi	r23, 0x00	; 0
     6aa:	80 e8       	ldi	r24, 0x80	; 128
     6ac:	9f e3       	ldi	r25, 0x3F	; 63
     6ae:	c4 c0       	rjmp	.+392    	; 0x838 <__divsf3>
     6b0:	34 d1       	rcall	.+616    	; 0x91a <__fp_pscA>
     6b2:	28 f0       	brcs	.+10     	; 0x6be <inverse+0x1c>
     6b4:	39 d1       	rcall	.+626    	; 0x928 <__fp_pscB>
     6b6:	18 f0       	brcs	.+6      	; 0x6be <inverse+0x1c>
     6b8:	95 23       	and	r25, r21
     6ba:	09 f0       	breq	.+2      	; 0x6be <inverse+0x1c>
     6bc:	25 c1       	rjmp	.+586    	; 0x908 <__fp_inf>
     6be:	2a c1       	rjmp	.+596    	; 0x914 <__fp_nan>
     6c0:	11 24       	eor	r1, r1
     6c2:	e9 cf       	rjmp	.-46     	; 0x696 <__fp_szero>

000006c4 <__mulsf3x>:
     6c4:	c5 df       	rcall	.-118    	; 0x650 <__fp_split3>
     6c6:	a0 f3       	brcs	.-24     	; 0x6b0 <inverse+0xe>

000006c8 <__mulsf3_pse>:
     6c8:	95 9f       	mul	r25, r21
     6ca:	d1 f3       	breq	.-12     	; 0x6c0 <inverse+0x1e>
     6cc:	95 0f       	add	r25, r21
     6ce:	50 e0       	ldi	r21, 0x00	; 0
     6d0:	55 1f       	adc	r21, r21
     6d2:	62 9f       	mul	r22, r18
     6d4:	f0 01       	movw	r30, r0
     6d6:	72 9f       	mul	r23, r18
     6d8:	bb 27       	eor	r27, r27
     6da:	f0 0d       	add	r31, r0
     6dc:	b1 1d       	adc	r27, r1
     6de:	63 9f       	mul	r22, r19
     6e0:	aa 27       	eor	r26, r26
     6e2:	f0 0d       	add	r31, r0
     6e4:	b1 1d       	adc	r27, r1
     6e6:	aa 1f       	adc	r26, r26
     6e8:	64 9f       	mul	r22, r20
     6ea:	66 27       	eor	r22, r22
     6ec:	b0 0d       	add	r27, r0
     6ee:	a1 1d       	adc	r26, r1
     6f0:	66 1f       	adc	r22, r22
     6f2:	82 9f       	mul	r24, r18
     6f4:	22 27       	eor	r18, r18
     6f6:	b0 0d       	add	r27, r0
     6f8:	a1 1d       	adc	r26, r1
     6fa:	62 1f       	adc	r22, r18
     6fc:	73 9f       	mul	r23, r19
     6fe:	b0 0d       	add	r27, r0
     700:	a1 1d       	adc	r26, r1
     702:	62 1f       	adc	r22, r18
     704:	83 9f       	mul	r24, r19
     706:	a0 0d       	add	r26, r0
     708:	61 1d       	adc	r22, r1
     70a:	22 1f       	adc	r18, r18
     70c:	74 9f       	mul	r23, r20
     70e:	33 27       	eor	r19, r19
     710:	a0 0d       	add	r26, r0
     712:	61 1d       	adc	r22, r1
     714:	23 1f       	adc	r18, r19
     716:	84 9f       	mul	r24, r20
     718:	60 0d       	add	r22, r0
     71a:	21 1d       	adc	r18, r1
     71c:	82 2f       	mov	r24, r18
     71e:	76 2f       	mov	r23, r22
     720:	6a 2f       	mov	r22, r26
     722:	11 24       	eor	r1, r1
     724:	9f 57       	subi	r25, 0x7F	; 127
     726:	50 40       	sbci	r21, 0x00	; 0
     728:	8a f0       	brmi	.+34     	; 0x74c <__mulsf3_pse+0x84>
     72a:	e1 f0       	breq	.+56     	; 0x764 <__mulsf3_pse+0x9c>
     72c:	88 23       	and	r24, r24
     72e:	4a f0       	brmi	.+18     	; 0x742 <__mulsf3_pse+0x7a>
     730:	ee 0f       	add	r30, r30
     732:	ff 1f       	adc	r31, r31
     734:	bb 1f       	adc	r27, r27
     736:	66 1f       	adc	r22, r22
     738:	77 1f       	adc	r23, r23
     73a:	88 1f       	adc	r24, r24
     73c:	91 50       	subi	r25, 0x01	; 1
     73e:	50 40       	sbci	r21, 0x00	; 0
     740:	a9 f7       	brne	.-22     	; 0x72c <__mulsf3_pse+0x64>
     742:	9e 3f       	cpi	r25, 0xFE	; 254
     744:	51 05       	cpc	r21, r1
     746:	70 f0       	brcs	.+28     	; 0x764 <__mulsf3_pse+0x9c>
     748:	df c0       	rjmp	.+446    	; 0x908 <__fp_inf>
     74a:	a5 cf       	rjmp	.-182    	; 0x696 <__fp_szero>
     74c:	5f 3f       	cpi	r21, 0xFF	; 255
     74e:	ec f3       	brlt	.-6      	; 0x74a <__mulsf3_pse+0x82>
     750:	98 3e       	cpi	r25, 0xE8	; 232
     752:	dc f3       	brlt	.-10     	; 0x74a <__mulsf3_pse+0x82>
     754:	86 95       	lsr	r24
     756:	77 95       	ror	r23
     758:	67 95       	ror	r22
     75a:	b7 95       	ror	r27
     75c:	f7 95       	ror	r31
     75e:	e7 95       	ror	r30
     760:	9f 5f       	subi	r25, 0xFF	; 255
     762:	c1 f7       	brne	.-16     	; 0x754 <__mulsf3_pse+0x8c>
     764:	fe 2b       	or	r31, r30
     766:	88 0f       	add	r24, r24
     768:	91 1d       	adc	r25, r1
     76a:	96 95       	lsr	r25
     76c:	87 95       	ror	r24
     76e:	97 f9       	bld	r25, 7
     770:	08 95       	ret

00000772 <square>:
     772:	9b 01       	movw	r18, r22
     774:	ac 01       	movw	r20, r24
     776:	df c0       	rjmp	.+446    	; 0x936 <__mulsf3>
     778:	d0 d0       	rcall	.+416    	; 0x91a <__fp_pscA>
     77a:	30 f0       	brcs	.+12     	; 0x788 <square+0x16>
     77c:	d5 d0       	rcall	.+426    	; 0x928 <__fp_pscB>
     77e:	20 f0       	brcs	.+8      	; 0x788 <square+0x16>
     780:	31 f4       	brne	.+12     	; 0x78e <square+0x1c>
     782:	9f 3f       	cpi	r25, 0xFF	; 255
     784:	11 f4       	brne	.+4      	; 0x78a <square+0x18>
     786:	1e f4       	brtc	.+6      	; 0x78e <square+0x1c>
     788:	c5 c0       	rjmp	.+394    	; 0x914 <__fp_nan>
     78a:	0e f4       	brtc	.+2      	; 0x78e <square+0x1c>
     78c:	e0 95       	com	r30
     78e:	e7 fb       	bst	r30, 7
     790:	bb c0       	rjmp	.+374    	; 0x908 <__fp_inf>

00000792 <__addsf3x>:
     792:	e9 2f       	mov	r30, r25
     794:	5d df       	rcall	.-326    	; 0x650 <__fp_split3>
     796:	80 f3       	brcs	.-32     	; 0x778 <square+0x6>
     798:	ba 17       	cp	r27, r26
     79a:	62 07       	cpc	r22, r18
     79c:	73 07       	cpc	r23, r19
     79e:	84 07       	cpc	r24, r20
     7a0:	95 07       	cpc	r25, r21
     7a2:	18 f0       	brcs	.+6      	; 0x7aa <__addsf3x+0x18>
     7a4:	71 f4       	brne	.+28     	; 0x7c2 <__addsf3x+0x30>
     7a6:	9e f5       	brtc	.+102    	; 0x80e <__addsf3x+0x7c>
     7a8:	75 cf       	rjmp	.-278    	; 0x694 <__fp_zero>
     7aa:	0e f4       	brtc	.+2      	; 0x7ae <__addsf3x+0x1c>
     7ac:	e0 95       	com	r30
     7ae:	0b 2e       	mov	r0, r27
     7b0:	ba 2f       	mov	r27, r26
     7b2:	a0 2d       	mov	r26, r0
     7b4:	0b 01       	movw	r0, r22
     7b6:	b9 01       	movw	r22, r18
     7b8:	90 01       	movw	r18, r0
     7ba:	0c 01       	movw	r0, r24
     7bc:	ca 01       	movw	r24, r20
     7be:	a0 01       	movw	r20, r0
     7c0:	11 24       	eor	r1, r1
     7c2:	ff 27       	eor	r31, r31
     7c4:	59 1b       	sub	r21, r25
     7c6:	99 f0       	breq	.+38     	; 0x7ee <__addsf3x+0x5c>
     7c8:	59 3f       	cpi	r21, 0xF9	; 249
     7ca:	50 f4       	brcc	.+20     	; 0x7e0 <__addsf3x+0x4e>
     7cc:	50 3e       	cpi	r21, 0xE0	; 224
     7ce:	68 f1       	brcs	.+90     	; 0x82a <__addsf3x+0x98>
     7d0:	1a 16       	cp	r1, r26
     7d2:	f0 40       	sbci	r31, 0x00	; 0
     7d4:	a2 2f       	mov	r26, r18
     7d6:	23 2f       	mov	r18, r19
     7d8:	34 2f       	mov	r19, r20
     7da:	44 27       	eor	r20, r20
     7dc:	58 5f       	subi	r21, 0xF8	; 248
     7de:	f3 cf       	rjmp	.-26     	; 0x7c6 <__addsf3x+0x34>
     7e0:	46 95       	lsr	r20
     7e2:	37 95       	ror	r19
     7e4:	27 95       	ror	r18
     7e6:	a7 95       	ror	r26
     7e8:	f0 40       	sbci	r31, 0x00	; 0
     7ea:	53 95       	inc	r21
     7ec:	c9 f7       	brne	.-14     	; 0x7e0 <__addsf3x+0x4e>
     7ee:	7e f4       	brtc	.+30     	; 0x80e <__addsf3x+0x7c>
     7f0:	1f 16       	cp	r1, r31
     7f2:	ba 0b       	sbc	r27, r26
     7f4:	62 0b       	sbc	r22, r18
     7f6:	73 0b       	sbc	r23, r19
     7f8:	84 0b       	sbc	r24, r20
     7fa:	ba f0       	brmi	.+46     	; 0x82a <__addsf3x+0x98>
     7fc:	91 50       	subi	r25, 0x01	; 1
     7fe:	a1 f0       	breq	.+40     	; 0x828 <__addsf3x+0x96>
     800:	ff 0f       	add	r31, r31
     802:	bb 1f       	adc	r27, r27
     804:	66 1f       	adc	r22, r22
     806:	77 1f       	adc	r23, r23
     808:	88 1f       	adc	r24, r24
     80a:	c2 f7       	brpl	.-16     	; 0x7fc <__addsf3x+0x6a>
     80c:	0e c0       	rjmp	.+28     	; 0x82a <__addsf3x+0x98>
     80e:	ba 0f       	add	r27, r26
     810:	62 1f       	adc	r22, r18
     812:	73 1f       	adc	r23, r19
     814:	84 1f       	adc	r24, r20
     816:	48 f4       	brcc	.+18     	; 0x82a <__addsf3x+0x98>
     818:	87 95       	ror	r24
     81a:	77 95       	ror	r23
     81c:	67 95       	ror	r22
     81e:	b7 95       	ror	r27
     820:	f7 95       	ror	r31
     822:	9e 3f       	cpi	r25, 0xFE	; 254
     824:	08 f0       	brcs	.+2      	; 0x828 <__addsf3x+0x96>
     826:	b3 cf       	rjmp	.-154    	; 0x78e <square+0x1c>
     828:	93 95       	inc	r25
     82a:	88 0f       	add	r24, r24
     82c:	08 f0       	brcs	.+2      	; 0x830 <__addsf3x+0x9e>
     82e:	99 27       	eor	r25, r25
     830:	ee 0f       	add	r30, r30
     832:	97 95       	ror	r25
     834:	87 95       	ror	r24
     836:	08 95       	ret

00000838 <__divsf3>:
     838:	0c d0       	rcall	.+24     	; 0x852 <__divsf3x>
     83a:	f9 ce       	rjmp	.-526    	; 0x62e <__fp_round>
     83c:	75 d0       	rcall	.+234    	; 0x928 <__fp_pscB>
     83e:	40 f0       	brcs	.+16     	; 0x850 <__divsf3+0x18>
     840:	6c d0       	rcall	.+216    	; 0x91a <__fp_pscA>
     842:	30 f0       	brcs	.+12     	; 0x850 <__divsf3+0x18>
     844:	21 f4       	brne	.+8      	; 0x84e <__divsf3+0x16>
     846:	5f 3f       	cpi	r21, 0xFF	; 255
     848:	19 f0       	breq	.+6      	; 0x850 <__divsf3+0x18>
     84a:	5e c0       	rjmp	.+188    	; 0x908 <__fp_inf>
     84c:	51 11       	cpse	r21, r1
     84e:	23 cf       	rjmp	.-442    	; 0x696 <__fp_szero>
     850:	61 c0       	rjmp	.+194    	; 0x914 <__fp_nan>

00000852 <__divsf3x>:
     852:	fe de       	rcall	.-516    	; 0x650 <__fp_split3>
     854:	98 f3       	brcs	.-26     	; 0x83c <__divsf3+0x4>

00000856 <__divsf3_pse>:
     856:	99 23       	and	r25, r25
     858:	c9 f3       	breq	.-14     	; 0x84c <__divsf3+0x14>
     85a:	55 23       	and	r21, r21
     85c:	b1 f3       	breq	.-20     	; 0x84a <__divsf3+0x12>
     85e:	95 1b       	sub	r25, r21
     860:	55 0b       	sbc	r21, r21
     862:	bb 27       	eor	r27, r27
     864:	aa 27       	eor	r26, r26
     866:	62 17       	cp	r22, r18
     868:	73 07       	cpc	r23, r19
     86a:	84 07       	cpc	r24, r20
     86c:	38 f0       	brcs	.+14     	; 0x87c <__divsf3_pse+0x26>
     86e:	9f 5f       	subi	r25, 0xFF	; 255
     870:	5f 4f       	sbci	r21, 0xFF	; 255
     872:	22 0f       	add	r18, r18
     874:	33 1f       	adc	r19, r19
     876:	44 1f       	adc	r20, r20
     878:	aa 1f       	adc	r26, r26
     87a:	a9 f3       	breq	.-22     	; 0x866 <__divsf3_pse+0x10>
     87c:	33 d0       	rcall	.+102    	; 0x8e4 <__divsf3_pse+0x8e>
     87e:	0e 2e       	mov	r0, r30
     880:	3a f0       	brmi	.+14     	; 0x890 <__divsf3_pse+0x3a>
     882:	e0 e8       	ldi	r30, 0x80	; 128
     884:	30 d0       	rcall	.+96     	; 0x8e6 <__divsf3_pse+0x90>
     886:	91 50       	subi	r25, 0x01	; 1
     888:	50 40       	sbci	r21, 0x00	; 0
     88a:	e6 95       	lsr	r30
     88c:	00 1c       	adc	r0, r0
     88e:	ca f7       	brpl	.-14     	; 0x882 <__divsf3_pse+0x2c>
     890:	29 d0       	rcall	.+82     	; 0x8e4 <__divsf3_pse+0x8e>
     892:	fe 2f       	mov	r31, r30
     894:	27 d0       	rcall	.+78     	; 0x8e4 <__divsf3_pse+0x8e>
     896:	66 0f       	add	r22, r22
     898:	77 1f       	adc	r23, r23
     89a:	88 1f       	adc	r24, r24
     89c:	bb 1f       	adc	r27, r27
     89e:	26 17       	cp	r18, r22
     8a0:	37 07       	cpc	r19, r23
     8a2:	48 07       	cpc	r20, r24
     8a4:	ab 07       	cpc	r26, r27
     8a6:	b0 e8       	ldi	r27, 0x80	; 128
     8a8:	09 f0       	breq	.+2      	; 0x8ac <__divsf3_pse+0x56>
     8aa:	bb 0b       	sbc	r27, r27
     8ac:	80 2d       	mov	r24, r0
     8ae:	bf 01       	movw	r22, r30
     8b0:	ff 27       	eor	r31, r31
     8b2:	93 58       	subi	r25, 0x83	; 131
     8b4:	5f 4f       	sbci	r21, 0xFF	; 255
     8b6:	2a f0       	brmi	.+10     	; 0x8c2 <__divsf3_pse+0x6c>
     8b8:	9e 3f       	cpi	r25, 0xFE	; 254
     8ba:	51 05       	cpc	r21, r1
     8bc:	68 f0       	brcs	.+26     	; 0x8d8 <__divsf3_pse+0x82>
     8be:	24 c0       	rjmp	.+72     	; 0x908 <__fp_inf>
     8c0:	ea ce       	rjmp	.-556    	; 0x696 <__fp_szero>
     8c2:	5f 3f       	cpi	r21, 0xFF	; 255
     8c4:	ec f3       	brlt	.-6      	; 0x8c0 <__divsf3_pse+0x6a>
     8c6:	98 3e       	cpi	r25, 0xE8	; 232
     8c8:	dc f3       	brlt	.-10     	; 0x8c0 <__divsf3_pse+0x6a>
     8ca:	86 95       	lsr	r24
     8cc:	77 95       	ror	r23
     8ce:	67 95       	ror	r22
     8d0:	b7 95       	ror	r27
     8d2:	f7 95       	ror	r31
     8d4:	9f 5f       	subi	r25, 0xFF	; 255
     8d6:	c9 f7       	brne	.-14     	; 0x8ca <__divsf3_pse+0x74>
     8d8:	88 0f       	add	r24, r24
     8da:	91 1d       	adc	r25, r1
     8dc:	96 95       	lsr	r25
     8de:	87 95       	ror	r24
     8e0:	97 f9       	bld	r25, 7
     8e2:	08 95       	ret
     8e4:	e1 e0       	ldi	r30, 0x01	; 1
     8e6:	66 0f       	add	r22, r22
     8e8:	77 1f       	adc	r23, r23
     8ea:	88 1f       	adc	r24, r24
     8ec:	bb 1f       	adc	r27, r27
     8ee:	62 17       	cp	r22, r18
     8f0:	73 07       	cpc	r23, r19
     8f2:	84 07       	cpc	r24, r20
     8f4:	ba 07       	cpc	r27, r26
     8f6:	20 f0       	brcs	.+8      	; 0x900 <__divsf3_pse+0xaa>
     8f8:	62 1b       	sub	r22, r18
     8fa:	73 0b       	sbc	r23, r19
     8fc:	84 0b       	sbc	r24, r20
     8fe:	ba 0b       	sbc	r27, r26
     900:	ee 1f       	adc	r30, r30
     902:	88 f7       	brcc	.-30     	; 0x8e6 <__divsf3_pse+0x90>
     904:	e0 95       	com	r30
     906:	08 95       	ret

00000908 <__fp_inf>:
     908:	97 f9       	bld	r25, 7
     90a:	9f 67       	ori	r25, 0x7F	; 127
     90c:	80 e8       	ldi	r24, 0x80	; 128
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	60 e0       	ldi	r22, 0x00	; 0
     912:	08 95       	ret

00000914 <__fp_nan>:
     914:	9f ef       	ldi	r25, 0xFF	; 255
     916:	80 ec       	ldi	r24, 0xC0	; 192
     918:	08 95       	ret

0000091a <__fp_pscA>:
     91a:	00 24       	eor	r0, r0
     91c:	0a 94       	dec	r0
     91e:	16 16       	cp	r1, r22
     920:	17 06       	cpc	r1, r23
     922:	18 06       	cpc	r1, r24
     924:	09 06       	cpc	r0, r25
     926:	08 95       	ret

00000928 <__fp_pscB>:
     928:	00 24       	eor	r0, r0
     92a:	0a 94       	dec	r0
     92c:	12 16       	cp	r1, r18
     92e:	13 06       	cpc	r1, r19
     930:	14 06       	cpc	r1, r20
     932:	05 06       	cpc	r0, r21
     934:	08 95       	ret

00000936 <__mulsf3>:
     936:	c6 de       	rcall	.-628    	; 0x6c4 <__mulsf3x>
     938:	7a ce       	rjmp	.-780    	; 0x62e <__fp_round>

0000093a <__divmodhi4>:
     93a:	97 fb       	bst	r25, 7
     93c:	07 2e       	mov	r0, r23
     93e:	16 f4       	brtc	.+4      	; 0x944 <__divmodhi4+0xa>
     940:	00 94       	com	r0
     942:	06 d0       	rcall	.+12     	; 0x950 <__divmodhi4_neg1>
     944:	77 fd       	sbrc	r23, 7
     946:	08 d0       	rcall	.+16     	; 0x958 <__divmodhi4_neg2>
     948:	0b d0       	rcall	.+22     	; 0x960 <__udivmodhi4>
     94a:	07 fc       	sbrc	r0, 7
     94c:	05 d0       	rcall	.+10     	; 0x958 <__divmodhi4_neg2>
     94e:	3e f4       	brtc	.+14     	; 0x95e <__divmodhi4_exit>

00000950 <__divmodhi4_neg1>:
     950:	90 95       	com	r25
     952:	81 95       	neg	r24
     954:	9f 4f       	sbci	r25, 0xFF	; 255
     956:	08 95       	ret

00000958 <__divmodhi4_neg2>:
     958:	70 95       	com	r23
     95a:	61 95       	neg	r22
     95c:	7f 4f       	sbci	r23, 0xFF	; 255

0000095e <__divmodhi4_exit>:
     95e:	08 95       	ret

00000960 <__udivmodhi4>:
     960:	aa 1b       	sub	r26, r26
     962:	bb 1b       	sub	r27, r27
     964:	51 e1       	ldi	r21, 0x11	; 17
     966:	07 c0       	rjmp	.+14     	; 0x976 <__udivmodhi4_ep>

00000968 <__udivmodhi4_loop>:
     968:	aa 1f       	adc	r26, r26
     96a:	bb 1f       	adc	r27, r27
     96c:	a6 17       	cp	r26, r22
     96e:	b7 07       	cpc	r27, r23
     970:	10 f0       	brcs	.+4      	; 0x976 <__udivmodhi4_ep>
     972:	a6 1b       	sub	r26, r22
     974:	b7 0b       	sbc	r27, r23

00000976 <__udivmodhi4_ep>:
     976:	88 1f       	adc	r24, r24
     978:	99 1f       	adc	r25, r25
     97a:	5a 95       	dec	r21
     97c:	a9 f7       	brne	.-22     	; 0x968 <__udivmodhi4_loop>
     97e:	80 95       	com	r24
     980:	90 95       	com	r25
     982:	bc 01       	movw	r22, r24
     984:	cd 01       	movw	r24, r26
     986:	08 95       	ret

00000988 <fdevopen>:
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	ec 01       	movw	r28, r24
     992:	8b 01       	movw	r16, r22
     994:	00 97       	sbiw	r24, 0x00	; 0
     996:	31 f4       	brne	.+12     	; 0x9a4 <fdevopen+0x1c>
     998:	61 15       	cp	r22, r1
     99a:	71 05       	cpc	r23, r1
     99c:	19 f4       	brne	.+6      	; 0x9a4 <fdevopen+0x1c>
     99e:	80 e0       	ldi	r24, 0x00	; 0
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	37 c0       	rjmp	.+110    	; 0xa12 <fdevopen+0x8a>
     9a4:	6e e0       	ldi	r22, 0x0E	; 14
     9a6:	70 e0       	ldi	r23, 0x00	; 0
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	0b d2       	rcall	.+1046   	; 0xdc4 <calloc>
     9ae:	fc 01       	movw	r30, r24
     9b0:	00 97       	sbiw	r24, 0x00	; 0
     9b2:	a9 f3       	breq	.-22     	; 0x99e <fdevopen+0x16>
     9b4:	80 e8       	ldi	r24, 0x80	; 128
     9b6:	83 83       	std	Z+3, r24	; 0x03
     9b8:	01 15       	cp	r16, r1
     9ba:	11 05       	cpc	r17, r1
     9bc:	71 f0       	breq	.+28     	; 0x9da <fdevopen+0x52>
     9be:	13 87       	std	Z+11, r17	; 0x0b
     9c0:	02 87       	std	Z+10, r16	; 0x0a
     9c2:	81 e8       	ldi	r24, 0x81	; 129
     9c4:	83 83       	std	Z+3, r24	; 0x03
     9c6:	80 91 92 01 	lds	r24, 0x0192
     9ca:	90 91 93 01 	lds	r25, 0x0193
     9ce:	89 2b       	or	r24, r25
     9d0:	21 f4       	brne	.+8      	; 0x9da <fdevopen+0x52>
     9d2:	f0 93 93 01 	sts	0x0193, r31
     9d6:	e0 93 92 01 	sts	0x0192, r30
     9da:	20 97       	sbiw	r28, 0x00	; 0
     9dc:	c9 f0       	breq	.+50     	; 0xa10 <fdevopen+0x88>
     9de:	d1 87       	std	Z+9, r29	; 0x09
     9e0:	c0 87       	std	Z+8, r28	; 0x08
     9e2:	83 81       	ldd	r24, Z+3	; 0x03
     9e4:	82 60       	ori	r24, 0x02	; 2
     9e6:	83 83       	std	Z+3, r24	; 0x03
     9e8:	80 91 94 01 	lds	r24, 0x0194
     9ec:	90 91 95 01 	lds	r25, 0x0195
     9f0:	89 2b       	or	r24, r25
     9f2:	71 f4       	brne	.+28     	; 0xa10 <fdevopen+0x88>
     9f4:	f0 93 95 01 	sts	0x0195, r31
     9f8:	e0 93 94 01 	sts	0x0194, r30
     9fc:	80 91 96 01 	lds	r24, 0x0196
     a00:	90 91 97 01 	lds	r25, 0x0197
     a04:	89 2b       	or	r24, r25
     a06:	21 f4       	brne	.+8      	; 0xa10 <fdevopen+0x88>
     a08:	f0 93 97 01 	sts	0x0197, r31
     a0c:	e0 93 96 01 	sts	0x0196, r30
     a10:	cf 01       	movw	r24, r30
     a12:	df 91       	pop	r29
     a14:	cf 91       	pop	r28
     a16:	1f 91       	pop	r17
     a18:	0f 91       	pop	r16
     a1a:	08 95       	ret

00000a1c <printf>:
     a1c:	a0 e0       	ldi	r26, 0x00	; 0
     a1e:	b0 e0       	ldi	r27, 0x00	; 0
     a20:	e3 e1       	ldi	r30, 0x13	; 19
     a22:	f5 e0       	ldi	r31, 0x05	; 5
     a24:	cd c3       	rjmp	.+1946   	; 0x11c0 <__prologue_saves__+0x20>
     a26:	fe 01       	movw	r30, r28
     a28:	35 96       	adiw	r30, 0x05	; 5
     a2a:	61 91       	ld	r22, Z+
     a2c:	71 91       	ld	r23, Z+
     a2e:	af 01       	movw	r20, r30
     a30:	80 91 94 01 	lds	r24, 0x0194
     a34:	90 91 95 01 	lds	r25, 0x0195
     a38:	02 d0       	rcall	.+4      	; 0xa3e <vfprintf>
     a3a:	e2 e0       	ldi	r30, 0x02	; 2
     a3c:	dd c3       	rjmp	.+1978   	; 0x11f8 <__epilogue_restores__+0x20>

00000a3e <vfprintf>:
     a3e:	ac e0       	ldi	r26, 0x0C	; 12
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	e4 e2       	ldi	r30, 0x24	; 36
     a44:	f5 e0       	ldi	r31, 0x05	; 5
     a46:	ac c3       	rjmp	.+1880   	; 0x11a0 <__prologue_saves__>
     a48:	7c 01       	movw	r14, r24
     a4a:	6b 01       	movw	r12, r22
     a4c:	8a 01       	movw	r16, r20
     a4e:	fc 01       	movw	r30, r24
     a50:	17 82       	std	Z+7, r1	; 0x07
     a52:	16 82       	std	Z+6, r1	; 0x06
     a54:	83 81       	ldd	r24, Z+3	; 0x03
     a56:	81 ff       	sbrs	r24, 1
     a58:	b0 c1       	rjmp	.+864    	; 0xdba <vfprintf+0x37c>
     a5a:	ce 01       	movw	r24, r28
     a5c:	01 96       	adiw	r24, 0x01	; 1
     a5e:	4c 01       	movw	r8, r24
     a60:	f7 01       	movw	r30, r14
     a62:	93 81       	ldd	r25, Z+3	; 0x03
     a64:	f6 01       	movw	r30, r12
     a66:	93 fd       	sbrc	r25, 3
     a68:	85 91       	lpm	r24, Z+
     a6a:	93 ff       	sbrs	r25, 3
     a6c:	81 91       	ld	r24, Z+
     a6e:	6f 01       	movw	r12, r30
     a70:	88 23       	and	r24, r24
     a72:	09 f4       	brne	.+2      	; 0xa76 <vfprintf+0x38>
     a74:	9e c1       	rjmp	.+828    	; 0xdb2 <vfprintf+0x374>
     a76:	85 32       	cpi	r24, 0x25	; 37
     a78:	39 f4       	brne	.+14     	; 0xa88 <vfprintf+0x4a>
     a7a:	93 fd       	sbrc	r25, 3
     a7c:	85 91       	lpm	r24, Z+
     a7e:	93 ff       	sbrs	r25, 3
     a80:	81 91       	ld	r24, Z+
     a82:	6f 01       	movw	r12, r30
     a84:	85 32       	cpi	r24, 0x25	; 37
     a86:	21 f4       	brne	.+8      	; 0xa90 <vfprintf+0x52>
     a88:	b7 01       	movw	r22, r14
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	f9 d2       	rcall	.+1522   	; 0x1080 <fputc>
     a8e:	e8 cf       	rjmp	.-48     	; 0xa60 <vfprintf+0x22>
     a90:	51 2c       	mov	r5, r1
     a92:	31 2c       	mov	r3, r1
     a94:	20 e0       	ldi	r18, 0x00	; 0
     a96:	20 32       	cpi	r18, 0x20	; 32
     a98:	a0 f4       	brcc	.+40     	; 0xac2 <vfprintf+0x84>
     a9a:	8b 32       	cpi	r24, 0x2B	; 43
     a9c:	69 f0       	breq	.+26     	; 0xab8 <vfprintf+0x7a>
     a9e:	30 f4       	brcc	.+12     	; 0xaac <vfprintf+0x6e>
     aa0:	80 32       	cpi	r24, 0x20	; 32
     aa2:	59 f0       	breq	.+22     	; 0xaba <vfprintf+0x7c>
     aa4:	83 32       	cpi	r24, 0x23	; 35
     aa6:	69 f4       	brne	.+26     	; 0xac2 <vfprintf+0x84>
     aa8:	20 61       	ori	r18, 0x10	; 16
     aaa:	2c c0       	rjmp	.+88     	; 0xb04 <vfprintf+0xc6>
     aac:	8d 32       	cpi	r24, 0x2D	; 45
     aae:	39 f0       	breq	.+14     	; 0xabe <vfprintf+0x80>
     ab0:	80 33       	cpi	r24, 0x30	; 48
     ab2:	39 f4       	brne	.+14     	; 0xac2 <vfprintf+0x84>
     ab4:	21 60       	ori	r18, 0x01	; 1
     ab6:	26 c0       	rjmp	.+76     	; 0xb04 <vfprintf+0xc6>
     ab8:	22 60       	ori	r18, 0x02	; 2
     aba:	24 60       	ori	r18, 0x04	; 4
     abc:	23 c0       	rjmp	.+70     	; 0xb04 <vfprintf+0xc6>
     abe:	28 60       	ori	r18, 0x08	; 8
     ac0:	21 c0       	rjmp	.+66     	; 0xb04 <vfprintf+0xc6>
     ac2:	27 fd       	sbrc	r18, 7
     ac4:	27 c0       	rjmp	.+78     	; 0xb14 <vfprintf+0xd6>
     ac6:	30 ed       	ldi	r19, 0xD0	; 208
     ac8:	38 0f       	add	r19, r24
     aca:	3a 30       	cpi	r19, 0x0A	; 10
     acc:	78 f4       	brcc	.+30     	; 0xaec <vfprintf+0xae>
     ace:	26 ff       	sbrs	r18, 6
     ad0:	06 c0       	rjmp	.+12     	; 0xade <vfprintf+0xa0>
     ad2:	fa e0       	ldi	r31, 0x0A	; 10
     ad4:	5f 9e       	mul	r5, r31
     ad6:	30 0d       	add	r19, r0
     ad8:	11 24       	eor	r1, r1
     ada:	53 2e       	mov	r5, r19
     adc:	13 c0       	rjmp	.+38     	; 0xb04 <vfprintf+0xc6>
     ade:	8a e0       	ldi	r24, 0x0A	; 10
     ae0:	38 9e       	mul	r3, r24
     ae2:	30 0d       	add	r19, r0
     ae4:	11 24       	eor	r1, r1
     ae6:	33 2e       	mov	r3, r19
     ae8:	20 62       	ori	r18, 0x20	; 32
     aea:	0c c0       	rjmp	.+24     	; 0xb04 <vfprintf+0xc6>
     aec:	8e 32       	cpi	r24, 0x2E	; 46
     aee:	21 f4       	brne	.+8      	; 0xaf8 <vfprintf+0xba>
     af0:	26 fd       	sbrc	r18, 6
     af2:	5f c1       	rjmp	.+702    	; 0xdb2 <vfprintf+0x374>
     af4:	20 64       	ori	r18, 0x40	; 64
     af6:	06 c0       	rjmp	.+12     	; 0xb04 <vfprintf+0xc6>
     af8:	8c 36       	cpi	r24, 0x6C	; 108
     afa:	11 f4       	brne	.+4      	; 0xb00 <vfprintf+0xc2>
     afc:	20 68       	ori	r18, 0x80	; 128
     afe:	02 c0       	rjmp	.+4      	; 0xb04 <vfprintf+0xc6>
     b00:	88 36       	cpi	r24, 0x68	; 104
     b02:	41 f4       	brne	.+16     	; 0xb14 <vfprintf+0xd6>
     b04:	f6 01       	movw	r30, r12
     b06:	93 fd       	sbrc	r25, 3
     b08:	85 91       	lpm	r24, Z+
     b0a:	93 ff       	sbrs	r25, 3
     b0c:	81 91       	ld	r24, Z+
     b0e:	6f 01       	movw	r12, r30
     b10:	81 11       	cpse	r24, r1
     b12:	c1 cf       	rjmp	.-126    	; 0xa96 <vfprintf+0x58>
     b14:	98 2f       	mov	r25, r24
     b16:	9f 7d       	andi	r25, 0xDF	; 223
     b18:	95 54       	subi	r25, 0x45	; 69
     b1a:	93 30       	cpi	r25, 0x03	; 3
     b1c:	28 f4       	brcc	.+10     	; 0xb28 <vfprintf+0xea>
     b1e:	0c 5f       	subi	r16, 0xFC	; 252
     b20:	1f 4f       	sbci	r17, 0xFF	; 255
     b22:	ff e3       	ldi	r31, 0x3F	; 63
     b24:	f9 83       	std	Y+1, r31	; 0x01
     b26:	0d c0       	rjmp	.+26     	; 0xb42 <vfprintf+0x104>
     b28:	83 36       	cpi	r24, 0x63	; 99
     b2a:	31 f0       	breq	.+12     	; 0xb38 <vfprintf+0xfa>
     b2c:	83 37       	cpi	r24, 0x73	; 115
     b2e:	71 f0       	breq	.+28     	; 0xb4c <vfprintf+0x10e>
     b30:	83 35       	cpi	r24, 0x53	; 83
     b32:	09 f0       	breq	.+2      	; 0xb36 <vfprintf+0xf8>
     b34:	57 c0       	rjmp	.+174    	; 0xbe4 <vfprintf+0x1a6>
     b36:	21 c0       	rjmp	.+66     	; 0xb7a <vfprintf+0x13c>
     b38:	f8 01       	movw	r30, r16
     b3a:	80 81       	ld	r24, Z
     b3c:	89 83       	std	Y+1, r24	; 0x01
     b3e:	0e 5f       	subi	r16, 0xFE	; 254
     b40:	1f 4f       	sbci	r17, 0xFF	; 255
     b42:	44 24       	eor	r4, r4
     b44:	43 94       	inc	r4
     b46:	51 2c       	mov	r5, r1
     b48:	54 01       	movw	r10, r8
     b4a:	14 c0       	rjmp	.+40     	; 0xb74 <vfprintf+0x136>
     b4c:	38 01       	movw	r6, r16
     b4e:	f2 e0       	ldi	r31, 0x02	; 2
     b50:	6f 0e       	add	r6, r31
     b52:	71 1c       	adc	r7, r1
     b54:	f8 01       	movw	r30, r16
     b56:	a0 80       	ld	r10, Z
     b58:	b1 80       	ldd	r11, Z+1	; 0x01
     b5a:	26 ff       	sbrs	r18, 6
     b5c:	03 c0       	rjmp	.+6      	; 0xb64 <vfprintf+0x126>
     b5e:	65 2d       	mov	r22, r5
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <vfprintf+0x12a>
     b64:	6f ef       	ldi	r22, 0xFF	; 255
     b66:	7f ef       	ldi	r23, 0xFF	; 255
     b68:	c5 01       	movw	r24, r10
     b6a:	2c 87       	std	Y+12, r18	; 0x0c
     b6c:	7e d2       	rcall	.+1276   	; 0x106a <strnlen>
     b6e:	2c 01       	movw	r4, r24
     b70:	83 01       	movw	r16, r6
     b72:	2c 85       	ldd	r18, Y+12	; 0x0c
     b74:	2f 77       	andi	r18, 0x7F	; 127
     b76:	22 2e       	mov	r2, r18
     b78:	16 c0       	rjmp	.+44     	; 0xba6 <vfprintf+0x168>
     b7a:	38 01       	movw	r6, r16
     b7c:	f2 e0       	ldi	r31, 0x02	; 2
     b7e:	6f 0e       	add	r6, r31
     b80:	71 1c       	adc	r7, r1
     b82:	f8 01       	movw	r30, r16
     b84:	a0 80       	ld	r10, Z
     b86:	b1 80       	ldd	r11, Z+1	; 0x01
     b88:	26 ff       	sbrs	r18, 6
     b8a:	03 c0       	rjmp	.+6      	; 0xb92 <vfprintf+0x154>
     b8c:	65 2d       	mov	r22, r5
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <vfprintf+0x158>
     b92:	6f ef       	ldi	r22, 0xFF	; 255
     b94:	7f ef       	ldi	r23, 0xFF	; 255
     b96:	c5 01       	movw	r24, r10
     b98:	2c 87       	std	Y+12, r18	; 0x0c
     b9a:	55 d2       	rcall	.+1194   	; 0x1046 <strnlen_P>
     b9c:	2c 01       	movw	r4, r24
     b9e:	2c 85       	ldd	r18, Y+12	; 0x0c
     ba0:	20 68       	ori	r18, 0x80	; 128
     ba2:	22 2e       	mov	r2, r18
     ba4:	83 01       	movw	r16, r6
     ba6:	23 fc       	sbrc	r2, 3
     ba8:	19 c0       	rjmp	.+50     	; 0xbdc <vfprintf+0x19e>
     baa:	83 2d       	mov	r24, r3
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	48 16       	cp	r4, r24
     bb0:	59 06       	cpc	r5, r25
     bb2:	a0 f4       	brcc	.+40     	; 0xbdc <vfprintf+0x19e>
     bb4:	b7 01       	movw	r22, r14
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	62 d2       	rcall	.+1220   	; 0x1080 <fputc>
     bbc:	3a 94       	dec	r3
     bbe:	f5 cf       	rjmp	.-22     	; 0xbaa <vfprintf+0x16c>
     bc0:	f5 01       	movw	r30, r10
     bc2:	27 fc       	sbrc	r2, 7
     bc4:	85 91       	lpm	r24, Z+
     bc6:	27 fe       	sbrs	r2, 7
     bc8:	81 91       	ld	r24, Z+
     bca:	5f 01       	movw	r10, r30
     bcc:	b7 01       	movw	r22, r14
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	57 d2       	rcall	.+1198   	; 0x1080 <fputc>
     bd2:	31 10       	cpse	r3, r1
     bd4:	3a 94       	dec	r3
     bd6:	f1 e0       	ldi	r31, 0x01	; 1
     bd8:	4f 1a       	sub	r4, r31
     bda:	51 08       	sbc	r5, r1
     bdc:	41 14       	cp	r4, r1
     bde:	51 04       	cpc	r5, r1
     be0:	79 f7       	brne	.-34     	; 0xbc0 <vfprintf+0x182>
     be2:	de c0       	rjmp	.+444    	; 0xda0 <vfprintf+0x362>
     be4:	84 36       	cpi	r24, 0x64	; 100
     be6:	11 f0       	breq	.+4      	; 0xbec <vfprintf+0x1ae>
     be8:	89 36       	cpi	r24, 0x69	; 105
     bea:	31 f5       	brne	.+76     	; 0xc38 <vfprintf+0x1fa>
     bec:	f8 01       	movw	r30, r16
     bee:	27 ff       	sbrs	r18, 7
     bf0:	07 c0       	rjmp	.+14     	; 0xc00 <vfprintf+0x1c2>
     bf2:	60 81       	ld	r22, Z
     bf4:	71 81       	ldd	r23, Z+1	; 0x01
     bf6:	82 81       	ldd	r24, Z+2	; 0x02
     bf8:	93 81       	ldd	r25, Z+3	; 0x03
     bfa:	0c 5f       	subi	r16, 0xFC	; 252
     bfc:	1f 4f       	sbci	r17, 0xFF	; 255
     bfe:	08 c0       	rjmp	.+16     	; 0xc10 <vfprintf+0x1d2>
     c00:	60 81       	ld	r22, Z
     c02:	71 81       	ldd	r23, Z+1	; 0x01
     c04:	88 27       	eor	r24, r24
     c06:	77 fd       	sbrc	r23, 7
     c08:	80 95       	com	r24
     c0a:	98 2f       	mov	r25, r24
     c0c:	0e 5f       	subi	r16, 0xFE	; 254
     c0e:	1f 4f       	sbci	r17, 0xFF	; 255
     c10:	2f 76       	andi	r18, 0x6F	; 111
     c12:	b2 2e       	mov	r11, r18
     c14:	97 ff       	sbrs	r25, 7
     c16:	09 c0       	rjmp	.+18     	; 0xc2a <vfprintf+0x1ec>
     c18:	90 95       	com	r25
     c1a:	80 95       	com	r24
     c1c:	70 95       	com	r23
     c1e:	61 95       	neg	r22
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	8f 4f       	sbci	r24, 0xFF	; 255
     c24:	9f 4f       	sbci	r25, 0xFF	; 255
     c26:	20 68       	ori	r18, 0x80	; 128
     c28:	b2 2e       	mov	r11, r18
     c2a:	2a e0       	ldi	r18, 0x0A	; 10
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	a4 01       	movw	r20, r8
     c30:	59 d2       	rcall	.+1202   	; 0x10e4 <__ultoa_invert>
     c32:	a8 2e       	mov	r10, r24
     c34:	a8 18       	sub	r10, r8
     c36:	43 c0       	rjmp	.+134    	; 0xcbe <vfprintf+0x280>
     c38:	85 37       	cpi	r24, 0x75	; 117
     c3a:	29 f4       	brne	.+10     	; 0xc46 <vfprintf+0x208>
     c3c:	2f 7e       	andi	r18, 0xEF	; 239
     c3e:	b2 2e       	mov	r11, r18
     c40:	2a e0       	ldi	r18, 0x0A	; 10
     c42:	30 e0       	ldi	r19, 0x00	; 0
     c44:	25 c0       	rjmp	.+74     	; 0xc90 <vfprintf+0x252>
     c46:	f2 2f       	mov	r31, r18
     c48:	f9 7f       	andi	r31, 0xF9	; 249
     c4a:	bf 2e       	mov	r11, r31
     c4c:	8f 36       	cpi	r24, 0x6F	; 111
     c4e:	c1 f0       	breq	.+48     	; 0xc80 <vfprintf+0x242>
     c50:	18 f4       	brcc	.+6      	; 0xc58 <vfprintf+0x21a>
     c52:	88 35       	cpi	r24, 0x58	; 88
     c54:	79 f0       	breq	.+30     	; 0xc74 <vfprintf+0x236>
     c56:	ad c0       	rjmp	.+346    	; 0xdb2 <vfprintf+0x374>
     c58:	80 37       	cpi	r24, 0x70	; 112
     c5a:	19 f0       	breq	.+6      	; 0xc62 <vfprintf+0x224>
     c5c:	88 37       	cpi	r24, 0x78	; 120
     c5e:	21 f0       	breq	.+8      	; 0xc68 <vfprintf+0x22a>
     c60:	a8 c0       	rjmp	.+336    	; 0xdb2 <vfprintf+0x374>
     c62:	2f 2f       	mov	r18, r31
     c64:	20 61       	ori	r18, 0x10	; 16
     c66:	b2 2e       	mov	r11, r18
     c68:	b4 fe       	sbrs	r11, 4
     c6a:	0d c0       	rjmp	.+26     	; 0xc86 <vfprintf+0x248>
     c6c:	8b 2d       	mov	r24, r11
     c6e:	84 60       	ori	r24, 0x04	; 4
     c70:	b8 2e       	mov	r11, r24
     c72:	09 c0       	rjmp	.+18     	; 0xc86 <vfprintf+0x248>
     c74:	24 ff       	sbrs	r18, 4
     c76:	0a c0       	rjmp	.+20     	; 0xc8c <vfprintf+0x24e>
     c78:	9f 2f       	mov	r25, r31
     c7a:	96 60       	ori	r25, 0x06	; 6
     c7c:	b9 2e       	mov	r11, r25
     c7e:	06 c0       	rjmp	.+12     	; 0xc8c <vfprintf+0x24e>
     c80:	28 e0       	ldi	r18, 0x08	; 8
     c82:	30 e0       	ldi	r19, 0x00	; 0
     c84:	05 c0       	rjmp	.+10     	; 0xc90 <vfprintf+0x252>
     c86:	20 e1       	ldi	r18, 0x10	; 16
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	02 c0       	rjmp	.+4      	; 0xc90 <vfprintf+0x252>
     c8c:	20 e1       	ldi	r18, 0x10	; 16
     c8e:	32 e0       	ldi	r19, 0x02	; 2
     c90:	f8 01       	movw	r30, r16
     c92:	b7 fe       	sbrs	r11, 7
     c94:	07 c0       	rjmp	.+14     	; 0xca4 <vfprintf+0x266>
     c96:	60 81       	ld	r22, Z
     c98:	71 81       	ldd	r23, Z+1	; 0x01
     c9a:	82 81       	ldd	r24, Z+2	; 0x02
     c9c:	93 81       	ldd	r25, Z+3	; 0x03
     c9e:	0c 5f       	subi	r16, 0xFC	; 252
     ca0:	1f 4f       	sbci	r17, 0xFF	; 255
     ca2:	06 c0       	rjmp	.+12     	; 0xcb0 <vfprintf+0x272>
     ca4:	60 81       	ld	r22, Z
     ca6:	71 81       	ldd	r23, Z+1	; 0x01
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	0e 5f       	subi	r16, 0xFE	; 254
     cae:	1f 4f       	sbci	r17, 0xFF	; 255
     cb0:	a4 01       	movw	r20, r8
     cb2:	18 d2       	rcall	.+1072   	; 0x10e4 <__ultoa_invert>
     cb4:	a8 2e       	mov	r10, r24
     cb6:	a8 18       	sub	r10, r8
     cb8:	fb 2d       	mov	r31, r11
     cba:	ff 77       	andi	r31, 0x7F	; 127
     cbc:	bf 2e       	mov	r11, r31
     cbe:	b6 fe       	sbrs	r11, 6
     cc0:	0b c0       	rjmp	.+22     	; 0xcd8 <vfprintf+0x29a>
     cc2:	2b 2d       	mov	r18, r11
     cc4:	2e 7f       	andi	r18, 0xFE	; 254
     cc6:	a5 14       	cp	r10, r5
     cc8:	50 f4       	brcc	.+20     	; 0xcde <vfprintf+0x2a0>
     cca:	b4 fe       	sbrs	r11, 4
     ccc:	0a c0       	rjmp	.+20     	; 0xce2 <vfprintf+0x2a4>
     cce:	b2 fc       	sbrc	r11, 2
     cd0:	08 c0       	rjmp	.+16     	; 0xce2 <vfprintf+0x2a4>
     cd2:	2b 2d       	mov	r18, r11
     cd4:	2e 7e       	andi	r18, 0xEE	; 238
     cd6:	05 c0       	rjmp	.+10     	; 0xce2 <vfprintf+0x2a4>
     cd8:	7a 2c       	mov	r7, r10
     cda:	2b 2d       	mov	r18, r11
     cdc:	03 c0       	rjmp	.+6      	; 0xce4 <vfprintf+0x2a6>
     cde:	7a 2c       	mov	r7, r10
     ce0:	01 c0       	rjmp	.+2      	; 0xce4 <vfprintf+0x2a6>
     ce2:	75 2c       	mov	r7, r5
     ce4:	24 ff       	sbrs	r18, 4
     ce6:	0d c0       	rjmp	.+26     	; 0xd02 <vfprintf+0x2c4>
     ce8:	fe 01       	movw	r30, r28
     cea:	ea 0d       	add	r30, r10
     cec:	f1 1d       	adc	r31, r1
     cee:	80 81       	ld	r24, Z
     cf0:	80 33       	cpi	r24, 0x30	; 48
     cf2:	11 f4       	brne	.+4      	; 0xcf8 <vfprintf+0x2ba>
     cf4:	29 7e       	andi	r18, 0xE9	; 233
     cf6:	09 c0       	rjmp	.+18     	; 0xd0a <vfprintf+0x2cc>
     cf8:	22 ff       	sbrs	r18, 2
     cfa:	06 c0       	rjmp	.+12     	; 0xd08 <vfprintf+0x2ca>
     cfc:	73 94       	inc	r7
     cfe:	73 94       	inc	r7
     d00:	04 c0       	rjmp	.+8      	; 0xd0a <vfprintf+0x2cc>
     d02:	82 2f       	mov	r24, r18
     d04:	86 78       	andi	r24, 0x86	; 134
     d06:	09 f0       	breq	.+2      	; 0xd0a <vfprintf+0x2cc>
     d08:	73 94       	inc	r7
     d0a:	23 fd       	sbrc	r18, 3
     d0c:	12 c0       	rjmp	.+36     	; 0xd32 <vfprintf+0x2f4>
     d0e:	20 ff       	sbrs	r18, 0
     d10:	06 c0       	rjmp	.+12     	; 0xd1e <vfprintf+0x2e0>
     d12:	5a 2c       	mov	r5, r10
     d14:	73 14       	cp	r7, r3
     d16:	18 f4       	brcc	.+6      	; 0xd1e <vfprintf+0x2e0>
     d18:	53 0c       	add	r5, r3
     d1a:	57 18       	sub	r5, r7
     d1c:	73 2c       	mov	r7, r3
     d1e:	73 14       	cp	r7, r3
     d20:	60 f4       	brcc	.+24     	; 0xd3a <vfprintf+0x2fc>
     d22:	b7 01       	movw	r22, r14
     d24:	80 e2       	ldi	r24, 0x20	; 32
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	2c 87       	std	Y+12, r18	; 0x0c
     d2a:	aa d1       	rcall	.+852    	; 0x1080 <fputc>
     d2c:	73 94       	inc	r7
     d2e:	2c 85       	ldd	r18, Y+12	; 0x0c
     d30:	f6 cf       	rjmp	.-20     	; 0xd1e <vfprintf+0x2e0>
     d32:	73 14       	cp	r7, r3
     d34:	10 f4       	brcc	.+4      	; 0xd3a <vfprintf+0x2fc>
     d36:	37 18       	sub	r3, r7
     d38:	01 c0       	rjmp	.+2      	; 0xd3c <vfprintf+0x2fe>
     d3a:	31 2c       	mov	r3, r1
     d3c:	24 ff       	sbrs	r18, 4
     d3e:	11 c0       	rjmp	.+34     	; 0xd62 <vfprintf+0x324>
     d40:	b7 01       	movw	r22, r14
     d42:	80 e3       	ldi	r24, 0x30	; 48
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	2c 87       	std	Y+12, r18	; 0x0c
     d48:	9b d1       	rcall	.+822    	; 0x1080 <fputc>
     d4a:	2c 85       	ldd	r18, Y+12	; 0x0c
     d4c:	22 ff       	sbrs	r18, 2
     d4e:	16 c0       	rjmp	.+44     	; 0xd7c <vfprintf+0x33e>
     d50:	21 ff       	sbrs	r18, 1
     d52:	03 c0       	rjmp	.+6      	; 0xd5a <vfprintf+0x31c>
     d54:	88 e5       	ldi	r24, 0x58	; 88
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <vfprintf+0x320>
     d5a:	88 e7       	ldi	r24, 0x78	; 120
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	b7 01       	movw	r22, r14
     d60:	0c c0       	rjmp	.+24     	; 0xd7a <vfprintf+0x33c>
     d62:	82 2f       	mov	r24, r18
     d64:	86 78       	andi	r24, 0x86	; 134
     d66:	51 f0       	breq	.+20     	; 0xd7c <vfprintf+0x33e>
     d68:	21 fd       	sbrc	r18, 1
     d6a:	02 c0       	rjmp	.+4      	; 0xd70 <vfprintf+0x332>
     d6c:	80 e2       	ldi	r24, 0x20	; 32
     d6e:	01 c0       	rjmp	.+2      	; 0xd72 <vfprintf+0x334>
     d70:	8b e2       	ldi	r24, 0x2B	; 43
     d72:	27 fd       	sbrc	r18, 7
     d74:	8d e2       	ldi	r24, 0x2D	; 45
     d76:	b7 01       	movw	r22, r14
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	82 d1       	rcall	.+772    	; 0x1080 <fputc>
     d7c:	a5 14       	cp	r10, r5
     d7e:	30 f4       	brcc	.+12     	; 0xd8c <vfprintf+0x34e>
     d80:	b7 01       	movw	r22, r14
     d82:	80 e3       	ldi	r24, 0x30	; 48
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	7c d1       	rcall	.+760    	; 0x1080 <fputc>
     d88:	5a 94       	dec	r5
     d8a:	f8 cf       	rjmp	.-16     	; 0xd7c <vfprintf+0x33e>
     d8c:	aa 94       	dec	r10
     d8e:	f4 01       	movw	r30, r8
     d90:	ea 0d       	add	r30, r10
     d92:	f1 1d       	adc	r31, r1
     d94:	80 81       	ld	r24, Z
     d96:	b7 01       	movw	r22, r14
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	72 d1       	rcall	.+740    	; 0x1080 <fputc>
     d9c:	a1 10       	cpse	r10, r1
     d9e:	f6 cf       	rjmp	.-20     	; 0xd8c <vfprintf+0x34e>
     da0:	33 20       	and	r3, r3
     da2:	09 f4       	brne	.+2      	; 0xda6 <vfprintf+0x368>
     da4:	5d ce       	rjmp	.-838    	; 0xa60 <vfprintf+0x22>
     da6:	b7 01       	movw	r22, r14
     da8:	80 e2       	ldi	r24, 0x20	; 32
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	69 d1       	rcall	.+722    	; 0x1080 <fputc>
     dae:	3a 94       	dec	r3
     db0:	f7 cf       	rjmp	.-18     	; 0xda0 <vfprintf+0x362>
     db2:	f7 01       	movw	r30, r14
     db4:	86 81       	ldd	r24, Z+6	; 0x06
     db6:	97 81       	ldd	r25, Z+7	; 0x07
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <vfprintf+0x380>
     dba:	8f ef       	ldi	r24, 0xFF	; 255
     dbc:	9f ef       	ldi	r25, 0xFF	; 255
     dbe:	2c 96       	adiw	r28, 0x0c	; 12
     dc0:	e2 e1       	ldi	r30, 0x12	; 18
     dc2:	0a c2       	rjmp	.+1044   	; 0x11d8 <__epilogue_restores__>

00000dc4 <calloc>:
     dc4:	0f 93       	push	r16
     dc6:	1f 93       	push	r17
     dc8:	cf 93       	push	r28
     dca:	df 93       	push	r29
     dcc:	86 9f       	mul	r24, r22
     dce:	80 01       	movw	r16, r0
     dd0:	87 9f       	mul	r24, r23
     dd2:	10 0d       	add	r17, r0
     dd4:	96 9f       	mul	r25, r22
     dd6:	10 0d       	add	r17, r0
     dd8:	11 24       	eor	r1, r1
     dda:	c8 01       	movw	r24, r16
     ddc:	0d d0       	rcall	.+26     	; 0xdf8 <malloc>
     dde:	ec 01       	movw	r28, r24
     de0:	00 97       	sbiw	r24, 0x00	; 0
     de2:	21 f0       	breq	.+8      	; 0xdec <calloc+0x28>
     de4:	a8 01       	movw	r20, r16
     de6:	60 e0       	ldi	r22, 0x00	; 0
     de8:	70 e0       	ldi	r23, 0x00	; 0
     dea:	38 d1       	rcall	.+624    	; 0x105c <memset>
     dec:	ce 01       	movw	r24, r28
     dee:	df 91       	pop	r29
     df0:	cf 91       	pop	r28
     df2:	1f 91       	pop	r17
     df4:	0f 91       	pop	r16
     df6:	08 95       	ret

00000df8 <malloc>:
     df8:	cf 93       	push	r28
     dfa:	df 93       	push	r29
     dfc:	82 30       	cpi	r24, 0x02	; 2
     dfe:	91 05       	cpc	r25, r1
     e00:	10 f4       	brcc	.+4      	; 0xe06 <malloc+0xe>
     e02:	82 e0       	ldi	r24, 0x02	; 2
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	e0 91 9a 01 	lds	r30, 0x019A
     e0a:	f0 91 9b 01 	lds	r31, 0x019B
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	a0 e0       	ldi	r26, 0x00	; 0
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	30 97       	sbiw	r30, 0x00	; 0
     e18:	39 f1       	breq	.+78     	; 0xe68 <malloc+0x70>
     e1a:	40 81       	ld	r20, Z
     e1c:	51 81       	ldd	r21, Z+1	; 0x01
     e1e:	48 17       	cp	r20, r24
     e20:	59 07       	cpc	r21, r25
     e22:	b8 f0       	brcs	.+46     	; 0xe52 <malloc+0x5a>
     e24:	48 17       	cp	r20, r24
     e26:	59 07       	cpc	r21, r25
     e28:	71 f4       	brne	.+28     	; 0xe46 <malloc+0x4e>
     e2a:	82 81       	ldd	r24, Z+2	; 0x02
     e2c:	93 81       	ldd	r25, Z+3	; 0x03
     e2e:	10 97       	sbiw	r26, 0x00	; 0
     e30:	29 f0       	breq	.+10     	; 0xe3c <malloc+0x44>
     e32:	13 96       	adiw	r26, 0x03	; 3
     e34:	9c 93       	st	X, r25
     e36:	8e 93       	st	-X, r24
     e38:	12 97       	sbiw	r26, 0x02	; 2
     e3a:	2c c0       	rjmp	.+88     	; 0xe94 <malloc+0x9c>
     e3c:	90 93 9b 01 	sts	0x019B, r25
     e40:	80 93 9a 01 	sts	0x019A, r24
     e44:	27 c0       	rjmp	.+78     	; 0xe94 <malloc+0x9c>
     e46:	21 15       	cp	r18, r1
     e48:	31 05       	cpc	r19, r1
     e4a:	31 f0       	breq	.+12     	; 0xe58 <malloc+0x60>
     e4c:	42 17       	cp	r20, r18
     e4e:	53 07       	cpc	r21, r19
     e50:	18 f0       	brcs	.+6      	; 0xe58 <malloc+0x60>
     e52:	a9 01       	movw	r20, r18
     e54:	db 01       	movw	r26, r22
     e56:	01 c0       	rjmp	.+2      	; 0xe5a <malloc+0x62>
     e58:	ef 01       	movw	r28, r30
     e5a:	9a 01       	movw	r18, r20
     e5c:	bd 01       	movw	r22, r26
     e5e:	df 01       	movw	r26, r30
     e60:	02 80       	ldd	r0, Z+2	; 0x02
     e62:	f3 81       	ldd	r31, Z+3	; 0x03
     e64:	e0 2d       	mov	r30, r0
     e66:	d7 cf       	rjmp	.-82     	; 0xe16 <malloc+0x1e>
     e68:	21 15       	cp	r18, r1
     e6a:	31 05       	cpc	r19, r1
     e6c:	f9 f0       	breq	.+62     	; 0xeac <malloc+0xb4>
     e6e:	28 1b       	sub	r18, r24
     e70:	39 0b       	sbc	r19, r25
     e72:	24 30       	cpi	r18, 0x04	; 4
     e74:	31 05       	cpc	r19, r1
     e76:	80 f4       	brcc	.+32     	; 0xe98 <malloc+0xa0>
     e78:	8a 81       	ldd	r24, Y+2	; 0x02
     e7a:	9b 81       	ldd	r25, Y+3	; 0x03
     e7c:	61 15       	cp	r22, r1
     e7e:	71 05       	cpc	r23, r1
     e80:	21 f0       	breq	.+8      	; 0xe8a <malloc+0x92>
     e82:	fb 01       	movw	r30, r22
     e84:	93 83       	std	Z+3, r25	; 0x03
     e86:	82 83       	std	Z+2, r24	; 0x02
     e88:	04 c0       	rjmp	.+8      	; 0xe92 <malloc+0x9a>
     e8a:	90 93 9b 01 	sts	0x019B, r25
     e8e:	80 93 9a 01 	sts	0x019A, r24
     e92:	fe 01       	movw	r30, r28
     e94:	32 96       	adiw	r30, 0x02	; 2
     e96:	44 c0       	rjmp	.+136    	; 0xf20 <malloc+0x128>
     e98:	fe 01       	movw	r30, r28
     e9a:	e2 0f       	add	r30, r18
     e9c:	f3 1f       	adc	r31, r19
     e9e:	81 93       	st	Z+, r24
     ea0:	91 93       	st	Z+, r25
     ea2:	22 50       	subi	r18, 0x02	; 2
     ea4:	31 09       	sbc	r19, r1
     ea6:	39 83       	std	Y+1, r19	; 0x01
     ea8:	28 83       	st	Y, r18
     eaa:	3a c0       	rjmp	.+116    	; 0xf20 <malloc+0x128>
     eac:	20 91 98 01 	lds	r18, 0x0198
     eb0:	30 91 99 01 	lds	r19, 0x0199
     eb4:	23 2b       	or	r18, r19
     eb6:	41 f4       	brne	.+16     	; 0xec8 <malloc+0xd0>
     eb8:	20 91 02 01 	lds	r18, 0x0102
     ebc:	30 91 03 01 	lds	r19, 0x0103
     ec0:	30 93 99 01 	sts	0x0199, r19
     ec4:	20 93 98 01 	sts	0x0198, r18
     ec8:	20 91 00 01 	lds	r18, 0x0100
     ecc:	30 91 01 01 	lds	r19, 0x0101
     ed0:	21 15       	cp	r18, r1
     ed2:	31 05       	cpc	r19, r1
     ed4:	41 f4       	brne	.+16     	; 0xee6 <malloc+0xee>
     ed6:	2d b7       	in	r18, 0x3d	; 61
     ed8:	3e b7       	in	r19, 0x3e	; 62
     eda:	40 91 04 01 	lds	r20, 0x0104
     ede:	50 91 05 01 	lds	r21, 0x0105
     ee2:	24 1b       	sub	r18, r20
     ee4:	35 0b       	sbc	r19, r21
     ee6:	e0 91 98 01 	lds	r30, 0x0198
     eea:	f0 91 99 01 	lds	r31, 0x0199
     eee:	e2 17       	cp	r30, r18
     ef0:	f3 07       	cpc	r31, r19
     ef2:	a0 f4       	brcc	.+40     	; 0xf1c <malloc+0x124>
     ef4:	2e 1b       	sub	r18, r30
     ef6:	3f 0b       	sbc	r19, r31
     ef8:	28 17       	cp	r18, r24
     efa:	39 07       	cpc	r19, r25
     efc:	78 f0       	brcs	.+30     	; 0xf1c <malloc+0x124>
     efe:	ac 01       	movw	r20, r24
     f00:	4e 5f       	subi	r20, 0xFE	; 254
     f02:	5f 4f       	sbci	r21, 0xFF	; 255
     f04:	24 17       	cp	r18, r20
     f06:	35 07       	cpc	r19, r21
     f08:	48 f0       	brcs	.+18     	; 0xf1c <malloc+0x124>
     f0a:	4e 0f       	add	r20, r30
     f0c:	5f 1f       	adc	r21, r31
     f0e:	50 93 99 01 	sts	0x0199, r21
     f12:	40 93 98 01 	sts	0x0198, r20
     f16:	81 93       	st	Z+, r24
     f18:	91 93       	st	Z+, r25
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <malloc+0x128>
     f1c:	e0 e0       	ldi	r30, 0x00	; 0
     f1e:	f0 e0       	ldi	r31, 0x00	; 0
     f20:	cf 01       	movw	r24, r30
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	08 95       	ret

00000f28 <free>:
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	00 97       	sbiw	r24, 0x00	; 0
     f2e:	09 f4       	brne	.+2      	; 0xf32 <free+0xa>
     f30:	87 c0       	rjmp	.+270    	; 0x1040 <free+0x118>
     f32:	fc 01       	movw	r30, r24
     f34:	32 97       	sbiw	r30, 0x02	; 2
     f36:	13 82       	std	Z+3, r1	; 0x03
     f38:	12 82       	std	Z+2, r1	; 0x02
     f3a:	c0 91 9a 01 	lds	r28, 0x019A
     f3e:	d0 91 9b 01 	lds	r29, 0x019B
     f42:	20 97       	sbiw	r28, 0x00	; 0
     f44:	81 f4       	brne	.+32     	; 0xf66 <free+0x3e>
     f46:	20 81       	ld	r18, Z
     f48:	31 81       	ldd	r19, Z+1	; 0x01
     f4a:	28 0f       	add	r18, r24
     f4c:	39 1f       	adc	r19, r25
     f4e:	80 91 98 01 	lds	r24, 0x0198
     f52:	90 91 99 01 	lds	r25, 0x0199
     f56:	82 17       	cp	r24, r18
     f58:	93 07       	cpc	r25, r19
     f5a:	79 f5       	brne	.+94     	; 0xfba <free+0x92>
     f5c:	f0 93 99 01 	sts	0x0199, r31
     f60:	e0 93 98 01 	sts	0x0198, r30
     f64:	6d c0       	rjmp	.+218    	; 0x1040 <free+0x118>
     f66:	de 01       	movw	r26, r28
     f68:	20 e0       	ldi	r18, 0x00	; 0
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	ae 17       	cp	r26, r30
     f6e:	bf 07       	cpc	r27, r31
     f70:	50 f4       	brcc	.+20     	; 0xf86 <free+0x5e>
     f72:	12 96       	adiw	r26, 0x02	; 2
     f74:	4d 91       	ld	r20, X+
     f76:	5c 91       	ld	r21, X
     f78:	13 97       	sbiw	r26, 0x03	; 3
     f7a:	9d 01       	movw	r18, r26
     f7c:	41 15       	cp	r20, r1
     f7e:	51 05       	cpc	r21, r1
     f80:	09 f1       	breq	.+66     	; 0xfc4 <free+0x9c>
     f82:	da 01       	movw	r26, r20
     f84:	f3 cf       	rjmp	.-26     	; 0xf6c <free+0x44>
     f86:	b3 83       	std	Z+3, r27	; 0x03
     f88:	a2 83       	std	Z+2, r26	; 0x02
     f8a:	40 81       	ld	r20, Z
     f8c:	51 81       	ldd	r21, Z+1	; 0x01
     f8e:	84 0f       	add	r24, r20
     f90:	95 1f       	adc	r25, r21
     f92:	8a 17       	cp	r24, r26
     f94:	9b 07       	cpc	r25, r27
     f96:	71 f4       	brne	.+28     	; 0xfb4 <free+0x8c>
     f98:	8d 91       	ld	r24, X+
     f9a:	9c 91       	ld	r25, X
     f9c:	11 97       	sbiw	r26, 0x01	; 1
     f9e:	84 0f       	add	r24, r20
     fa0:	95 1f       	adc	r25, r21
     fa2:	02 96       	adiw	r24, 0x02	; 2
     fa4:	91 83       	std	Z+1, r25	; 0x01
     fa6:	80 83       	st	Z, r24
     fa8:	12 96       	adiw	r26, 0x02	; 2
     faa:	8d 91       	ld	r24, X+
     fac:	9c 91       	ld	r25, X
     fae:	13 97       	sbiw	r26, 0x03	; 3
     fb0:	93 83       	std	Z+3, r25	; 0x03
     fb2:	82 83       	std	Z+2, r24	; 0x02
     fb4:	21 15       	cp	r18, r1
     fb6:	31 05       	cpc	r19, r1
     fb8:	29 f4       	brne	.+10     	; 0xfc4 <free+0x9c>
     fba:	f0 93 9b 01 	sts	0x019B, r31
     fbe:	e0 93 9a 01 	sts	0x019A, r30
     fc2:	3e c0       	rjmp	.+124    	; 0x1040 <free+0x118>
     fc4:	d9 01       	movw	r26, r18
     fc6:	13 96       	adiw	r26, 0x03	; 3
     fc8:	fc 93       	st	X, r31
     fca:	ee 93       	st	-X, r30
     fcc:	12 97       	sbiw	r26, 0x02	; 2
     fce:	4d 91       	ld	r20, X+
     fd0:	5d 91       	ld	r21, X+
     fd2:	a4 0f       	add	r26, r20
     fd4:	b5 1f       	adc	r27, r21
     fd6:	ea 17       	cp	r30, r26
     fd8:	fb 07       	cpc	r31, r27
     fda:	79 f4       	brne	.+30     	; 0xffa <free+0xd2>
     fdc:	80 81       	ld	r24, Z
     fde:	91 81       	ldd	r25, Z+1	; 0x01
     fe0:	84 0f       	add	r24, r20
     fe2:	95 1f       	adc	r25, r21
     fe4:	02 96       	adiw	r24, 0x02	; 2
     fe6:	d9 01       	movw	r26, r18
     fe8:	11 96       	adiw	r26, 0x01	; 1
     fea:	9c 93       	st	X, r25
     fec:	8e 93       	st	-X, r24
     fee:	82 81       	ldd	r24, Z+2	; 0x02
     ff0:	93 81       	ldd	r25, Z+3	; 0x03
     ff2:	13 96       	adiw	r26, 0x03	; 3
     ff4:	9c 93       	st	X, r25
     ff6:	8e 93       	st	-X, r24
     ff8:	12 97       	sbiw	r26, 0x02	; 2
     ffa:	e0 e0       	ldi	r30, 0x00	; 0
     ffc:	f0 e0       	ldi	r31, 0x00	; 0
     ffe:	8a 81       	ldd	r24, Y+2	; 0x02
    1000:	9b 81       	ldd	r25, Y+3	; 0x03
    1002:	00 97       	sbiw	r24, 0x00	; 0
    1004:	19 f0       	breq	.+6      	; 0x100c <free+0xe4>
    1006:	fe 01       	movw	r30, r28
    1008:	ec 01       	movw	r28, r24
    100a:	f9 cf       	rjmp	.-14     	; 0xffe <free+0xd6>
    100c:	ce 01       	movw	r24, r28
    100e:	02 96       	adiw	r24, 0x02	; 2
    1010:	28 81       	ld	r18, Y
    1012:	39 81       	ldd	r19, Y+1	; 0x01
    1014:	82 0f       	add	r24, r18
    1016:	93 1f       	adc	r25, r19
    1018:	20 91 98 01 	lds	r18, 0x0198
    101c:	30 91 99 01 	lds	r19, 0x0199
    1020:	28 17       	cp	r18, r24
    1022:	39 07       	cpc	r19, r25
    1024:	69 f4       	brne	.+26     	; 0x1040 <free+0x118>
    1026:	30 97       	sbiw	r30, 0x00	; 0
    1028:	29 f4       	brne	.+10     	; 0x1034 <free+0x10c>
    102a:	10 92 9b 01 	sts	0x019B, r1
    102e:	10 92 9a 01 	sts	0x019A, r1
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <free+0x110>
    1034:	13 82       	std	Z+3, r1	; 0x03
    1036:	12 82       	std	Z+2, r1	; 0x02
    1038:	d0 93 99 01 	sts	0x0199, r29
    103c:	c0 93 98 01 	sts	0x0198, r28
    1040:	df 91       	pop	r29
    1042:	cf 91       	pop	r28
    1044:	08 95       	ret

00001046 <strnlen_P>:
    1046:	fc 01       	movw	r30, r24
    1048:	05 90       	lpm	r0, Z+
    104a:	61 50       	subi	r22, 0x01	; 1
    104c:	70 40       	sbci	r23, 0x00	; 0
    104e:	01 10       	cpse	r0, r1
    1050:	d8 f7       	brcc	.-10     	; 0x1048 <strnlen_P+0x2>
    1052:	80 95       	com	r24
    1054:	90 95       	com	r25
    1056:	8e 0f       	add	r24, r30
    1058:	9f 1f       	adc	r25, r31
    105a:	08 95       	ret

0000105c <memset>:
    105c:	dc 01       	movw	r26, r24
    105e:	01 c0       	rjmp	.+2      	; 0x1062 <memset+0x6>
    1060:	6d 93       	st	X+, r22
    1062:	41 50       	subi	r20, 0x01	; 1
    1064:	50 40       	sbci	r21, 0x00	; 0
    1066:	e0 f7       	brcc	.-8      	; 0x1060 <memset+0x4>
    1068:	08 95       	ret

0000106a <strnlen>:
    106a:	fc 01       	movw	r30, r24
    106c:	61 50       	subi	r22, 0x01	; 1
    106e:	70 40       	sbci	r23, 0x00	; 0
    1070:	01 90       	ld	r0, Z+
    1072:	01 10       	cpse	r0, r1
    1074:	d8 f7       	brcc	.-10     	; 0x106c <strnlen+0x2>
    1076:	80 95       	com	r24
    1078:	90 95       	com	r25
    107a:	8e 0f       	add	r24, r30
    107c:	9f 1f       	adc	r25, r31
    107e:	08 95       	ret

00001080 <fputc>:
    1080:	0f 93       	push	r16
    1082:	1f 93       	push	r17
    1084:	cf 93       	push	r28
    1086:	df 93       	push	r29
    1088:	18 2f       	mov	r17, r24
    108a:	09 2f       	mov	r16, r25
    108c:	eb 01       	movw	r28, r22
    108e:	8b 81       	ldd	r24, Y+3	; 0x03
    1090:	81 fd       	sbrc	r24, 1
    1092:	03 c0       	rjmp	.+6      	; 0x109a <fputc+0x1a>
    1094:	8f ef       	ldi	r24, 0xFF	; 255
    1096:	9f ef       	ldi	r25, 0xFF	; 255
    1098:	20 c0       	rjmp	.+64     	; 0x10da <fputc+0x5a>
    109a:	82 ff       	sbrs	r24, 2
    109c:	10 c0       	rjmp	.+32     	; 0x10be <fputc+0x3e>
    109e:	4e 81       	ldd	r20, Y+6	; 0x06
    10a0:	5f 81       	ldd	r21, Y+7	; 0x07
    10a2:	2c 81       	ldd	r18, Y+4	; 0x04
    10a4:	3d 81       	ldd	r19, Y+5	; 0x05
    10a6:	42 17       	cp	r20, r18
    10a8:	53 07       	cpc	r21, r19
    10aa:	7c f4       	brge	.+30     	; 0x10ca <fputc+0x4a>
    10ac:	e8 81       	ld	r30, Y
    10ae:	f9 81       	ldd	r31, Y+1	; 0x01
    10b0:	9f 01       	movw	r18, r30
    10b2:	2f 5f       	subi	r18, 0xFF	; 255
    10b4:	3f 4f       	sbci	r19, 0xFF	; 255
    10b6:	39 83       	std	Y+1, r19	; 0x01
    10b8:	28 83       	st	Y, r18
    10ba:	10 83       	st	Z, r17
    10bc:	06 c0       	rjmp	.+12     	; 0x10ca <fputc+0x4a>
    10be:	e8 85       	ldd	r30, Y+8	; 0x08
    10c0:	f9 85       	ldd	r31, Y+9	; 0x09
    10c2:	81 2f       	mov	r24, r17
    10c4:	09 95       	icall
    10c6:	89 2b       	or	r24, r25
    10c8:	29 f7       	brne	.-54     	; 0x1094 <fputc+0x14>
    10ca:	2e 81       	ldd	r18, Y+6	; 0x06
    10cc:	3f 81       	ldd	r19, Y+7	; 0x07
    10ce:	2f 5f       	subi	r18, 0xFF	; 255
    10d0:	3f 4f       	sbci	r19, 0xFF	; 255
    10d2:	3f 83       	std	Y+7, r19	; 0x07
    10d4:	2e 83       	std	Y+6, r18	; 0x06
    10d6:	81 2f       	mov	r24, r17
    10d8:	90 2f       	mov	r25, r16
    10da:	df 91       	pop	r29
    10dc:	cf 91       	pop	r28
    10de:	1f 91       	pop	r17
    10e0:	0f 91       	pop	r16
    10e2:	08 95       	ret

000010e4 <__ultoa_invert>:
    10e4:	fa 01       	movw	r30, r20
    10e6:	aa 27       	eor	r26, r26
    10e8:	28 30       	cpi	r18, 0x08	; 8
    10ea:	51 f1       	breq	.+84     	; 0x1140 <__ultoa_invert+0x5c>
    10ec:	20 31       	cpi	r18, 0x10	; 16
    10ee:	81 f1       	breq	.+96     	; 0x1150 <__ultoa_invert+0x6c>
    10f0:	e8 94       	clt
    10f2:	6f 93       	push	r22
    10f4:	6e 7f       	andi	r22, 0xFE	; 254
    10f6:	6e 5f       	subi	r22, 0xFE	; 254
    10f8:	7f 4f       	sbci	r23, 0xFF	; 255
    10fa:	8f 4f       	sbci	r24, 0xFF	; 255
    10fc:	9f 4f       	sbci	r25, 0xFF	; 255
    10fe:	af 4f       	sbci	r26, 0xFF	; 255
    1100:	b1 e0       	ldi	r27, 0x01	; 1
    1102:	3e d0       	rcall	.+124    	; 0x1180 <__ultoa_invert+0x9c>
    1104:	b4 e0       	ldi	r27, 0x04	; 4
    1106:	3c d0       	rcall	.+120    	; 0x1180 <__ultoa_invert+0x9c>
    1108:	67 0f       	add	r22, r23
    110a:	78 1f       	adc	r23, r24
    110c:	89 1f       	adc	r24, r25
    110e:	9a 1f       	adc	r25, r26
    1110:	a1 1d       	adc	r26, r1
    1112:	68 0f       	add	r22, r24
    1114:	79 1f       	adc	r23, r25
    1116:	8a 1f       	adc	r24, r26
    1118:	91 1d       	adc	r25, r1
    111a:	a1 1d       	adc	r26, r1
    111c:	6a 0f       	add	r22, r26
    111e:	71 1d       	adc	r23, r1
    1120:	81 1d       	adc	r24, r1
    1122:	91 1d       	adc	r25, r1
    1124:	a1 1d       	adc	r26, r1
    1126:	20 d0       	rcall	.+64     	; 0x1168 <__ultoa_invert+0x84>
    1128:	09 f4       	brne	.+2      	; 0x112c <__ultoa_invert+0x48>
    112a:	68 94       	set
    112c:	3f 91       	pop	r19
    112e:	2a e0       	ldi	r18, 0x0A	; 10
    1130:	26 9f       	mul	r18, r22
    1132:	11 24       	eor	r1, r1
    1134:	30 19       	sub	r19, r0
    1136:	30 5d       	subi	r19, 0xD0	; 208
    1138:	31 93       	st	Z+, r19
    113a:	de f6       	brtc	.-74     	; 0x10f2 <__ultoa_invert+0xe>
    113c:	cf 01       	movw	r24, r30
    113e:	08 95       	ret
    1140:	46 2f       	mov	r20, r22
    1142:	47 70       	andi	r20, 0x07	; 7
    1144:	40 5d       	subi	r20, 0xD0	; 208
    1146:	41 93       	st	Z+, r20
    1148:	b3 e0       	ldi	r27, 0x03	; 3
    114a:	0f d0       	rcall	.+30     	; 0x116a <__ultoa_invert+0x86>
    114c:	c9 f7       	brne	.-14     	; 0x1140 <__ultoa_invert+0x5c>
    114e:	f6 cf       	rjmp	.-20     	; 0x113c <__ultoa_invert+0x58>
    1150:	46 2f       	mov	r20, r22
    1152:	4f 70       	andi	r20, 0x0F	; 15
    1154:	40 5d       	subi	r20, 0xD0	; 208
    1156:	4a 33       	cpi	r20, 0x3A	; 58
    1158:	18 f0       	brcs	.+6      	; 0x1160 <__ultoa_invert+0x7c>
    115a:	49 5d       	subi	r20, 0xD9	; 217
    115c:	31 fd       	sbrc	r19, 1
    115e:	40 52       	subi	r20, 0x20	; 32
    1160:	41 93       	st	Z+, r20
    1162:	02 d0       	rcall	.+4      	; 0x1168 <__ultoa_invert+0x84>
    1164:	a9 f7       	brne	.-22     	; 0x1150 <__ultoa_invert+0x6c>
    1166:	ea cf       	rjmp	.-44     	; 0x113c <__ultoa_invert+0x58>
    1168:	b4 e0       	ldi	r27, 0x04	; 4
    116a:	a6 95       	lsr	r26
    116c:	97 95       	ror	r25
    116e:	87 95       	ror	r24
    1170:	77 95       	ror	r23
    1172:	67 95       	ror	r22
    1174:	ba 95       	dec	r27
    1176:	c9 f7       	brne	.-14     	; 0x116a <__ultoa_invert+0x86>
    1178:	00 97       	sbiw	r24, 0x00	; 0
    117a:	61 05       	cpc	r22, r1
    117c:	71 05       	cpc	r23, r1
    117e:	08 95       	ret
    1180:	9b 01       	movw	r18, r22
    1182:	ac 01       	movw	r20, r24
    1184:	0a 2e       	mov	r0, r26
    1186:	06 94       	lsr	r0
    1188:	57 95       	ror	r21
    118a:	47 95       	ror	r20
    118c:	37 95       	ror	r19
    118e:	27 95       	ror	r18
    1190:	ba 95       	dec	r27
    1192:	c9 f7       	brne	.-14     	; 0x1186 <__ultoa_invert+0xa2>
    1194:	62 0f       	add	r22, r18
    1196:	73 1f       	adc	r23, r19
    1198:	84 1f       	adc	r24, r20
    119a:	95 1f       	adc	r25, r21
    119c:	a0 1d       	adc	r26, r0
    119e:	08 95       	ret

000011a0 <__prologue_saves__>:
    11a0:	2f 92       	push	r2
    11a2:	3f 92       	push	r3
    11a4:	4f 92       	push	r4
    11a6:	5f 92       	push	r5
    11a8:	6f 92       	push	r6
    11aa:	7f 92       	push	r7
    11ac:	8f 92       	push	r8
    11ae:	9f 92       	push	r9
    11b0:	af 92       	push	r10
    11b2:	bf 92       	push	r11
    11b4:	cf 92       	push	r12
    11b6:	df 92       	push	r13
    11b8:	ef 92       	push	r14
    11ba:	ff 92       	push	r15
    11bc:	0f 93       	push	r16
    11be:	1f 93       	push	r17
    11c0:	cf 93       	push	r28
    11c2:	df 93       	push	r29
    11c4:	cd b7       	in	r28, 0x3d	; 61
    11c6:	de b7       	in	r29, 0x3e	; 62
    11c8:	ca 1b       	sub	r28, r26
    11ca:	db 0b       	sbc	r29, r27
    11cc:	0f b6       	in	r0, 0x3f	; 63
    11ce:	f8 94       	cli
    11d0:	de bf       	out	0x3e, r29	; 62
    11d2:	0f be       	out	0x3f, r0	; 63
    11d4:	cd bf       	out	0x3d, r28	; 61
    11d6:	09 94       	ijmp

000011d8 <__epilogue_restores__>:
    11d8:	2a 88       	ldd	r2, Y+18	; 0x12
    11da:	39 88       	ldd	r3, Y+17	; 0x11
    11dc:	48 88       	ldd	r4, Y+16	; 0x10
    11de:	5f 84       	ldd	r5, Y+15	; 0x0f
    11e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    11e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    11e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    11e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    11e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    11ea:	b9 84       	ldd	r11, Y+9	; 0x09
    11ec:	c8 84       	ldd	r12, Y+8	; 0x08
    11ee:	df 80       	ldd	r13, Y+7	; 0x07
    11f0:	ee 80       	ldd	r14, Y+6	; 0x06
    11f2:	fd 80       	ldd	r15, Y+5	; 0x05
    11f4:	0c 81       	ldd	r16, Y+4	; 0x04
    11f6:	1b 81       	ldd	r17, Y+3	; 0x03
    11f8:	aa 81       	ldd	r26, Y+2	; 0x02
    11fa:	b9 81       	ldd	r27, Y+1	; 0x01
    11fc:	ce 0f       	add	r28, r30
    11fe:	d1 1d       	adc	r29, r1
    1200:	0f b6       	in	r0, 0x3f	; 63
    1202:	f8 94       	cli
    1204:	de bf       	out	0x3e, r29	; 62
    1206:	0f be       	out	0x3f, r0	; 63
    1208:	cd bf       	out	0x3d, r28	; 61
    120a:	ed 01       	movw	r28, r26
    120c:	08 95       	ret

0000120e <_exit>:
    120e:	f8 94       	cli

00001210 <__stop_program>:
    1210:	ff cf       	rjmp	.-2      	; 0x1210 <__stop_program>
