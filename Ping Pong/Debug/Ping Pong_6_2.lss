
Ping Pong_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000136  00800100  000014b6  0000154a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000114  00800236  00800236  00001680  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001680  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000148  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b12  00000000  00000000  00001824  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000877  00000000  00000000  00003336  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000fc8  00000000  00000000  00003bad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000348  00000000  00000000  00004b78  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000084b9  00000000  00000000  00004ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d1f  00000000  00000000  0000d379  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000178  00000000  00000000  0000e098  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000a16  00000000  00000000  0000e210  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5f c3       	rjmp	.+1726   	; 0x6c0 <__ctors_end>
       2:	00 00       	nop
       4:	78 c3       	rjmp	.+1776   	; 0x6f6 <__bad_interrupt>
       6:	00 00       	nop
       8:	76 c3       	rjmp	.+1772   	; 0x6f6 <__bad_interrupt>
       a:	00 00       	nop
       c:	74 c3       	rjmp	.+1768   	; 0x6f6 <__bad_interrupt>
       e:	00 00       	nop
      10:	72 c3       	rjmp	.+1764   	; 0x6f6 <__bad_interrupt>
      12:	00 00       	nop
      14:	70 c3       	rjmp	.+1760   	; 0x6f6 <__bad_interrupt>
      16:	00 00       	nop
      18:	6e c3       	rjmp	.+1756   	; 0x6f6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6c c3       	rjmp	.+1752   	; 0x6f6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6a c3       	rjmp	.+1748   	; 0x6f6 <__bad_interrupt>
      22:	00 00       	nop
      24:	68 c3       	rjmp	.+1744   	; 0x6f6 <__bad_interrupt>
      26:	00 00       	nop
      28:	66 c3       	rjmp	.+1740   	; 0x6f6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	64 c3       	rjmp	.+1736   	; 0x6f6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	62 c3       	rjmp	.+1732   	; 0x6f6 <__bad_interrupt>
      32:	00 00       	nop
      34:	60 c3       	rjmp	.+1728   	; 0x6f6 <__bad_interrupt>
      36:	00 00       	nop
      38:	5e c3       	rjmp	.+1724   	; 0x6f6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5c c3       	rjmp	.+1720   	; 0x6f6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5a c3       	rjmp	.+1716   	; 0x6f6 <__bad_interrupt>
      42:	00 00       	nop
      44:	58 c3       	rjmp	.+1712   	; 0x6f6 <__bad_interrupt>
      46:	00 00       	nop
      48:	56 c3       	rjmp	.+1708   	; 0x6f6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	54 c3       	rjmp	.+1704   	; 0x6f6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	52 c3       	rjmp	.+1700   	; 0x6f6 <__bad_interrupt>
      52:	00 00       	nop
      54:	50 c3       	rjmp	.+1696   	; 0x6f6 <__bad_interrupt>
      56:	00 00       	nop
      58:	4e c3       	rjmp	.+1692   	; 0x6f6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4c c3       	rjmp	.+1688   	; 0x6f6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4a c3       	rjmp	.+1684   	; 0x6f6 <__bad_interrupt>
      62:	00 00       	nop
      64:	48 c3       	rjmp	.+1680   	; 0x6f6 <__bad_interrupt>
      66:	00 00       	nop
      68:	46 c3       	rjmp	.+1676   	; 0x6f6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	44 c3       	rjmp	.+1672   	; 0x6f6 <__bad_interrupt>
	...

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font5>:
     1ec:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     1fc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     20c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     21c:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     22c:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     23c:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     24c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     25c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     26c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     27c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     28c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     29c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     2ac:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     2bc:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     2cc:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     2dc:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     2ec:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     2fc:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     30c:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     31c:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     32c:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     33c:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     34c:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     35c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     36c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     37c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     38c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     39c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     3ac:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     3bc:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

000003c7 <font8>:
	...
     3cf:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     3df:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     3ef:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     3ff:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     40f:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     41f:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     42f:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     43f:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     44f:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     45f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     46f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     47f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     48f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     49f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     4af:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     4bf:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     4cf:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     4df:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     4ef:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     4ff:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     50f:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     51f:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     52f:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     53f:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     54f:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     55f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     56f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     57f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     58f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     59f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     5af:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     5bf:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     5cf:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     5df:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     5ef:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     5ff:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     60f:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     61f:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     62f:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     63f:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     64f:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     65f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     66f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     67f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     68f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     69f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     6af:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

000006c0 <__ctors_end>:
     6c0:	11 24       	eor	r1, r1
     6c2:	1f be       	out	0x3f, r1	; 63
     6c4:	cf ef       	ldi	r28, 0xFF	; 255
     6c6:	d4 e0       	ldi	r29, 0x04	; 4
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	cd bf       	out	0x3d, r28	; 61

000006cc <__do_copy_data>:
     6cc:	12 e0       	ldi	r17, 0x02	; 2
     6ce:	a0 e0       	ldi	r26, 0x00	; 0
     6d0:	b1 e0       	ldi	r27, 0x01	; 1
     6d2:	e6 eb       	ldi	r30, 0xB6	; 182
     6d4:	f4 e1       	ldi	r31, 0x14	; 20
     6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__do_copy_data+0x10>
     6d8:	05 90       	lpm	r0, Z+
     6da:	0d 92       	st	X+, r0
     6dc:	a6 33       	cpi	r26, 0x36	; 54
     6de:	b1 07       	cpc	r27, r17
     6e0:	d9 f7       	brne	.-10     	; 0x6d8 <__do_copy_data+0xc>

000006e2 <__do_clear_bss>:
     6e2:	23 e0       	ldi	r18, 0x03	; 3
     6e4:	a6 e3       	ldi	r26, 0x36	; 54
     6e6:	b2 e0       	ldi	r27, 0x02	; 2
     6e8:	01 c0       	rjmp	.+2      	; 0x6ec <.do_clear_bss_start>

000006ea <.do_clear_bss_loop>:
     6ea:	1d 92       	st	X+, r1

000006ec <.do_clear_bss_start>:
     6ec:	aa 34       	cpi	r26, 0x4A	; 74
     6ee:	b2 07       	cpc	r27, r18
     6f0:	e1 f7       	brne	.-8      	; 0x6ea <.do_clear_bss_loop>
     6f2:	3d d2       	rcall	.+1146   	; 0xb6e <main>
     6f4:	de c6       	rjmp	.+3516   	; 0x14b2 <_exit>

000006f6 <__bad_interrupt>:
     6f6:	84 cc       	rjmp	.-1784   	; 0x0 <__vectors>

000006f8 <adc_init>:
	int ans = atan(x/y);
	if (abs(x)<30 && abs(y)<30){
		ans = 0;
	}
	return ans;
}
     6f8:	84 e0       	ldi	r24, 0x04	; 4
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	90 93 39 02 	sts	0x0239, r25
     700:	80 93 38 02 	sts	0x0238, r24
     704:	08 95       	ret

00000706 <adc_joystick_direction>:

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     706:	84 e0       	ldi	r24, 0x04	; 4
     708:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     70c:	85 e3       	ldi	r24, 0x35	; 53
     70e:	8a 95       	dec	r24
     710:	f1 f7       	brne	.-4      	; 0x70e <adc_joystick_direction+0x8>
     712:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     714:	e0 e0       	ldi	r30, 0x00	; 0
     716:	f4 e1       	ldi	r31, 0x14	; 20
     718:	40 81       	ld	r20, Z
     71a:	50 e0       	ldi	r21, 0x00	; 0
	}return ans;
}*/

int adc_joystick_direction(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
     71c:	4c 58       	subi	r20, 0x8C	; 140
     71e:	51 09       	sbc	r21, r1

volatile int adc_read(uint8_t channel){
	if((channel <= 4 )&&( channel > 0)){
		volatile uint8_t *p = ADC_OFFSET;
		//p[0] = channel;
		*p = channel + 3;//+3
     720:	85 e0       	ldi	r24, 0x05	; 5
     722:	80 83       	st	Z, r24
     724:	85 e3       	ldi	r24, 0x35	; 53
     726:	8a 95       	dec	r24
     728:	f1 f7       	brne	.-4      	; 0x726 <adc_joystick_direction+0x20>
     72a:	00 00       	nop
		_delay_us(160);
		//volatile uint8_t read = p[0];
		
		return *p;
     72c:	20 91 00 14 	lds	r18, 0x1400
     730:	30 e0       	ldi	r19, 0x00	; 0
}*/

int adc_joystick_direction(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
     732:	2c 58       	subi	r18, 0x8C	; 140
     734:	31 09       	sbc	r19, r1
	int ans = NEUTRAL;
	if (abs(x)<abs(y)){
     736:	ba 01       	movw	r22, r20
     738:	55 23       	and	r21, r21
     73a:	24 f4       	brge	.+8      	; 0x744 <adc_joystick_direction+0x3e>
     73c:	66 27       	eor	r22, r22
     73e:	77 27       	eor	r23, r23
     740:	64 1b       	sub	r22, r20
     742:	75 0b       	sbc	r23, r21
     744:	c9 01       	movw	r24, r18
     746:	33 23       	and	r19, r19
     748:	24 f4       	brge	.+8      	; 0x752 <adc_joystick_direction+0x4c>
     74a:	88 27       	eor	r24, r24
     74c:	99 27       	eor	r25, r25
     74e:	82 1b       	sub	r24, r18
     750:	93 0b       	sbc	r25, r19
     752:	68 17       	cp	r22, r24
     754:	79 07       	cpc	r23, r25
     756:	44 f4       	brge	.+16     	; 0x768 <adc_joystick_direction+0x62>
		if (y<0){
     758:	33 23       	and	r19, r19
     75a:	8c f0       	brlt	.+34     	; 0x77e <adc_joystick_direction+0x78>
			ans = DOWN;
		}else if(y>0){
     75c:	12 16       	cp	r1, r18
     75e:	13 06       	cpc	r1, r19
     760:	8c f0       	brlt	.+34     	; 0x784 <adc_joystick_direction+0x7e>

int adc_joystick_direction(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
	int ans = NEUTRAL;
     762:	84 e0       	ldi	r24, 0x04	; 4
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	19 c0       	rjmp	.+50     	; 0x79a <adc_joystick_direction+0x94>
		if (y<0){
			ans = DOWN;
		}else if(y>0){
			ans = UP;
		}
	}else if (abs(y)<abs(x)){
     768:	86 17       	cp	r24, r22
     76a:	97 07       	cpc	r25, r23
     76c:	74 f4       	brge	.+28     	; 0x78a <adc_joystick_direction+0x84>
		if (x<0){
     76e:	55 23       	and	r21, r21
     770:	7c f0       	brlt	.+30     	; 0x790 <adc_joystick_direction+0x8a>
			ans = LEFT;
		}else if(x>0){
     772:	14 16       	cp	r1, r20
     774:	15 06       	cpc	r1, r21
     776:	7c f0       	brlt	.+30     	; 0x796 <adc_joystick_direction+0x90>

int adc_joystick_direction(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
	int ans = NEUTRAL;
     778:	84 e0       	ldi	r24, 0x04	; 4
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	0e c0       	rjmp	.+28     	; 0x79a <adc_joystick_direction+0x94>
	if (abs(x)<abs(y)){
		if (y<0){
			ans = DOWN;
     77e:	83 e0       	ldi	r24, 0x03	; 3
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	0b c0       	rjmp	.+22     	; 0x79a <adc_joystick_direction+0x94>
		}else if(y>0){
			ans = UP;
     784:	82 e0       	ldi	r24, 0x02	; 2
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	08 c0       	rjmp	.+16     	; 0x79a <adc_joystick_direction+0x94>

int adc_joystick_direction(){
	int x = 0, y = 0;
	x = adc_read(1)-140;
	y = adc_read(2)-140;
	int ans = NEUTRAL;
     78a:	84 e0       	ldi	r24, 0x04	; 4
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	05 c0       	rjmp	.+10     	; 0x79a <adc_joystick_direction+0x94>
		}else if(y>0){
			ans = UP;
		}
	}else if (abs(y)<abs(x)){
		if (x<0){
			ans = LEFT;
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	02 c0       	rjmp	.+4      	; 0x79a <adc_joystick_direction+0x94>
		}else if(x>0){
			ans = RIGHT;
     796:	81 e0       	ldi	r24, 0x01	; 1
     798:	90 e0       	ldi	r25, 0x00	; 0
		}
	}if (abs(x)<30 && abs(y)<30){
     79a:	43 5e       	subi	r20, 0xE3	; 227
     79c:	5f 4f       	sbci	r21, 0xFF	; 255
     79e:	4b 33       	cpi	r20, 0x3B	; 59
     7a0:	51 05       	cpc	r21, r1
     7a2:	38 f4       	brcc	.+14     	; 0x7b2 <adc_joystick_direction+0xac>
     7a4:	23 5e       	subi	r18, 0xE3	; 227
     7a6:	3f 4f       	sbci	r19, 0xFF	; 255
     7a8:	2b 33       	cpi	r18, 0x3B	; 59
     7aa:	31 05       	cpc	r19, r1
     7ac:	10 f4       	brcc	.+4      	; 0x7b2 <adc_joystick_direction+0xac>
		ans = NEUTRAL;
     7ae:	84 e0       	ldi	r24, 0x04	; 4
     7b0:	90 e0       	ldi	r25, 0x00	; 0
	}
	return ans;
}
     7b2:	08 95       	ret

000007b4 <adc_joy_pos_changed>:

int adc_joy_pos_changed(){
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
	int ans = 0;
	int previous_joy_adc_direction = joy_adc_direction;
     7b8:	c0 91 38 02 	lds	r28, 0x0238
     7bc:	d0 91 39 02 	lds	r29, 0x0239
	joy_adc_direction = adc_joystick_direction();
     7c0:	a2 df       	rcall	.-188    	; 0x706 <adc_joystick_direction>
     7c2:	90 93 39 02 	sts	0x0239, r25
     7c6:	80 93 38 02 	sts	0x0238, r24
	/*printf("in adc joy pos changed \n \r");
	printf("previous joy adc %d \n \r", previous_joy_adc_direction);
	printf("joy adc direction %d \n \r", joy_adc_direction);*/
	
	if(previous_joy_adc_direction == joy_adc_direction || joy_adc_direction == LEFT || joy_adc_direction == RIGHT || joy_adc_direction == NEUTRAL){
     7ca:	c8 17       	cp	r28, r24
     7cc:	d9 07       	cpc	r29, r25
     7ce:	49 f0       	breq	.+18     	; 0x7e2 <adc_joy_pos_changed+0x2e>
     7d0:	82 30       	cpi	r24, 0x02	; 2
     7d2:	91 05       	cpc	r25, r1
     7d4:	48 f0       	brcs	.+18     	; 0x7e8 <adc_joy_pos_changed+0x34>
     7d6:	84 30       	cpi	r24, 0x04	; 4
     7d8:	91 05       	cpc	r25, r1
     7da:	41 f4       	brne	.+16     	; 0x7ec <adc_joy_pos_changed+0x38>
		ans = 0;
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	05 c0       	rjmp	.+10     	; 0x7ec <adc_joy_pos_changed+0x38>
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	02 c0       	rjmp	.+4      	; 0x7ec <adc_joy_pos_changed+0x38>
     7e8:	80 e0       	ldi	r24, 0x00	; 0
     7ea:	90 e0       	ldi	r25, 0x00	; 0
	else{
		ans = joy_adc_direction;
	}
	//printf("answer % d \n \r \n \r", ans);
	return ans;
}
     7ec:	df 91       	pop	r29
     7ee:	cf 91       	pop	r28
     7f0:	08 95       	ret

000007f2 <oled_columb_range_select>:
int joy_pos;


void oled_write_c(uint8_t data) {
	volatile uint8_t *adress = OLEDC_OFFSET;
	*adress = data;
     7f2:	91 e2       	ldi	r25, 0x21	; 33
     7f4:	90 93 00 10 	sts	0x1000, r25
	//oled_display_activity();
}

void oled_columb_range_select(uint8_t start, uint8_t end) {
	oled_write_c(OLED_COLUMB_SET);
	if (start < OLED_COLUMBS) {
     7f8:	88 23       	and	r24, r24
     7fa:	1c f0       	brlt	.+6      	; 0x802 <oled_columb_range_select+0x10>
int joy_pos;


void oled_write_c(uint8_t data) {
	volatile uint8_t *adress = OLEDC_OFFSET;
	*adress = data;
     7fc:	80 93 00 10 	sts	0x1000, r24
     800:	03 c0       	rjmp	.+6      	; 0x808 <oled_columb_range_select+0x16>
     802:	8f e7       	ldi	r24, 0x7F	; 127
     804:	80 93 00 10 	sts	0x1000, r24
		oled_write_c(start);
		} else {
		oled_write_c(OLED_COLUMBS - 1);
	}

	if (end < OLED_COLUMBS) {
     808:	66 23       	and	r22, r22
     80a:	1c f0       	brlt	.+6      	; 0x812 <oled_columb_range_select+0x20>
int joy_pos;


void oled_write_c(uint8_t data) {
	volatile uint8_t *adress = OLEDC_OFFSET;
	*adress = data;
     80c:	60 93 00 10 	sts	0x1000, r22
     810:	08 95       	ret
     812:	8f e7       	ldi	r24, 0x7F	; 127
     814:	80 93 00 10 	sts	0x1000, r24
     818:	08 95       	ret

0000081a <oled_page_select>:
     81a:	92 e2       	ldi	r25, 0x22	; 34
     81c:	90 93 00 10 	sts	0x1000, r25
	}
}

void oled_page_select(uint8_t page) {
	oled_write_c(OLED_PAGE_SET);
	if (page < OLED_PAGES) {
     820:	88 30       	cpi	r24, 0x08	; 8
     822:	28 f4       	brcc	.+10     	; 0x82e <oled_page_select+0x14>
int joy_pos;


void oled_write_c(uint8_t data) {
	volatile uint8_t *adress = OLEDC_OFFSET;
	*adress = data;
     824:	e0 e0       	ldi	r30, 0x00	; 0
     826:	f0 e1       	ldi	r31, 0x10	; 16
     828:	80 83       	st	Z, r24
     82a:	80 83       	st	Z, r24
     82c:	08 95       	ret
     82e:	e0 e0       	ldi	r30, 0x00	; 0
     830:	f0 e1       	ldi	r31, 0x10	; 16
     832:	87 e0       	ldi	r24, 0x07	; 7
     834:	80 83       	st	Z, r24
     836:	80 83       	st	Z, r24
     838:	08 95       	ret

0000083a <oled_clear_page>:
		oled_write_c(OLED_PAGES - 1);
	}
}

void oled_clear_page(uint8_t page) {
	if (page < OLED_PAGES) {
     83a:	88 30       	cpi	r24, 0x08	; 8
     83c:	60 f4       	brcc	.+24     	; 0x856 <oled_clear_page+0x1c>
		oled_page_select(page);
     83e:	ed df       	rcall	.-38     	; 0x81a <oled_page_select>
		oled_columb_range_select(0, OLED_COLUMBS - 1);
     840:	6f e7       	ldi	r22, 0x7F	; 127
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	d6 df       	rcall	.-84     	; 0x7f2 <oled_columb_range_select>
     846:	80 e8       	ldi	r24, 0x80	; 128
     848:	90 e0       	ldi	r25, 0x00	; 0
	*adress = data;
}

void oled_write_data(uint8_t data) {
	volatile uint8_t *adress = OLEDD_OFFSET;
	*adress = data;
     84a:	e0 e0       	ldi	r30, 0x00	; 0
     84c:	f2 e1       	ldi	r31, 0x12	; 18
     84e:	10 82       	st	Z, r1
     850:	01 97       	sbiw	r24, 0x01	; 1

void oled_clear_page(uint8_t page) {
	if (page < OLED_PAGES) {
		oled_page_select(page);
		oled_columb_range_select(0, OLED_COLUMBS - 1);
		for (int i = 0; i < OLED_COLUMBS; i++) {
     852:	00 97       	sbiw	r24, 0x00	; 0
     854:	e1 f7       	brne	.-8      	; 0x84e <oled_clear_page+0x14>
     856:	08 95       	ret

00000858 <oled_clear_screen>:
			oled_write_data(0x00);
		}
	}
}

void oled_clear_screen() {
     858:	cf 93       	push	r28
     85a:	c0 e0       	ldi	r28, 0x00	; 0
	for (int i = 0; i < OLED_PAGES; i++) {
		oled_clear_page(i);
     85c:	8c 2f       	mov	r24, r28
     85e:	ed df       	rcall	.-38     	; 0x83a <oled_clear_page>
     860:	cf 5f       	subi	r28, 0xFF	; 255
		}
	}
}

void oled_clear_screen() {
	for (int i = 0; i < OLED_PAGES; i++) {
     862:	c8 30       	cpi	r28, 0x08	; 8
     864:	d9 f7       	brne	.-10     	; 0x85c <oled_clear_screen+0x4>
		oled_clear_page(i);
	}
}
     866:	cf 91       	pop	r28
     868:	08 95       	ret

0000086a <oled_init>:
int joy_pos;


void oled_write_c(uint8_t data) {
	volatile uint8_t *adress = OLEDC_OFFSET;
	*adress = data;
     86a:	e0 e0       	ldi	r30, 0x00	; 0
     86c:	f0 e1       	ldi	r31, 0x10	; 16
     86e:	8e ea       	ldi	r24, 0xAE	; 174
     870:	80 83       	st	Z, r24
     872:	81 ea       	ldi	r24, 0xA1	; 161
     874:	80 83       	st	Z, r24
     876:	8a ed       	ldi	r24, 0xDA	; 218
     878:	80 83       	st	Z, r24
     87a:	82 e1       	ldi	r24, 0x12	; 18
     87c:	80 83       	st	Z, r24
     87e:	88 ec       	ldi	r24, 0xC8	; 200
     880:	80 83       	st	Z, r24
     882:	88 ea       	ldi	r24, 0xA8	; 168
     884:	80 83       	st	Z, r24
     886:	8f e3       	ldi	r24, 0x3F	; 63
     888:	80 83       	st	Z, r24
     88a:	85 ed       	ldi	r24, 0xD5	; 213
     88c:	80 83       	st	Z, r24
     88e:	80 e8       	ldi	r24, 0x80	; 128
     890:	80 83       	st	Z, r24
     892:	81 e8       	ldi	r24, 0x81	; 129
     894:	80 83       	st	Z, r24
     896:	80 e5       	ldi	r24, 0x50	; 80
     898:	80 83       	st	Z, r24
     89a:	89 ed       	ldi	r24, 0xD9	; 217
     89c:	80 83       	st	Z, r24
     89e:	81 e2       	ldi	r24, 0x21	; 33
     8a0:	80 83       	st	Z, r24
     8a2:	80 e2       	ldi	r24, 0x20	; 32
     8a4:	80 83       	st	Z, r24
     8a6:	82 e0       	ldi	r24, 0x02	; 2
     8a8:	80 83       	st	Z, r24
     8aa:	8b ed       	ldi	r24, 0xDB	; 219
     8ac:	80 83       	st	Z, r24
     8ae:	80 e3       	ldi	r24, 0x30	; 48
     8b0:	80 83       	st	Z, r24
     8b2:	8d ea       	ldi	r24, 0xAD	; 173
     8b4:	80 83       	st	Z, r24
     8b6:	10 82       	st	Z, r1
     8b8:	84 ea       	ldi	r24, 0xA4	; 164
     8ba:	80 83       	st	Z, r24
     8bc:	86 ea       	ldi	r24, 0xA6	; 166
     8be:	80 83       	st	Z, r24
     8c0:	8f ea       	ldi	r24, 0xAF	; 175
     8c2:	80 83       	st	Z, r24
	oled_write_c(0xad);	//master configuration
	oled_write_c(0x00);
	oled_write_c(0xa4);	//out follows RAM content
	oled_write_c(0xa6);	//set normal display
	oled_write_c(0xaf);	//display on
	oled_clear_screen();
     8c4:	c9 df       	rcall	.-110    	; 0x858 <oled_clear_screen>
	//current_activity = &oled_main;
	joy_pos = 0;
     8c6:	10 92 3f 03 	sts	0x033F, r1
     8ca:	10 92 3e 03 	sts	0x033E, r1
	//oled_display_activity();
}
     8ce:	08 95       	ret

000008d0 <oled_print_char_of_size>:
}

void oled_print_char_of_size(char letter, uint8_t size) {
	uint8_t char_length = 0;
	unsigned char *letter_bitmap;
	if (size == FONT_SIZE_SMALL) {
     8d0:	62 30       	cpi	r22, 0x02	; 2
     8d2:	41 f4       	brne	.+16     	; 0x8e4 <oled_print_char_of_size+0x14>
		char_length = 4;
		letter_bitmap = font4[letter - ' '];
     8d4:	94 e0       	ldi	r25, 0x04	; 4
     8d6:	89 02       	muls	r24, r25
     8d8:	a0 01       	movw	r20, r0
     8da:	11 24       	eor	r1, r1
     8dc:	40 51       	subi	r20, 0x10	; 16
     8de:	50 40       	sbci	r21, 0x00	; 0

void oled_print_char_of_size(char letter, uint8_t size) {
	uint8_t char_length = 0;
	unsigned char *letter_bitmap;
	if (size == FONT_SIZE_SMALL) {
		char_length = 4;
     8e0:	24 e0       	ldi	r18, 0x04	; 4
     8e2:	25 c0       	rjmp	.+74     	; 0x92e <oled_print_char_of_size+0x5e>
		letter_bitmap = font4[letter - ' '];
		} else if (size == FONT_SIZE_MEDIUM) {
     8e4:	61 30       	cpi	r22, 0x01	; 1
     8e6:	89 f4       	brne	.+34     	; 0x90a <oled_print_char_of_size+0x3a>
		char_length = 5;
		letter_bitmap = font5[letter - ' '];
     8e8:	48 2f       	mov	r20, r24
     8ea:	55 27       	eor	r21, r21
     8ec:	47 fd       	sbrc	r20, 7
     8ee:	50 95       	com	r21
     8f0:	40 52       	subi	r20, 0x20	; 32
     8f2:	51 09       	sbc	r21, r1
     8f4:	ca 01       	movw	r24, r20
     8f6:	88 0f       	add	r24, r24
     8f8:	99 1f       	adc	r25, r25
     8fa:	88 0f       	add	r24, r24
     8fc:	99 1f       	adc	r25, r25
     8fe:	48 0f       	add	r20, r24
     900:	59 1f       	adc	r21, r25
     902:	44 51       	subi	r20, 0x14	; 20
     904:	5e 4f       	sbci	r21, 0xFE	; 254
	unsigned char *letter_bitmap;
	if (size == FONT_SIZE_SMALL) {
		char_length = 4;
		letter_bitmap = font4[letter - ' '];
		} else if (size == FONT_SIZE_MEDIUM) {
		char_length = 5;
     906:	25 e0       	ldi	r18, 0x05	; 5
     908:	12 c0       	rjmp	.+36     	; 0x92e <oled_print_char_of_size+0x5e>
		letter_bitmap = font5[letter - ' '];
		} else {
		char_length = 8;
		letter_bitmap = font8[letter - ' '];
     90a:	98 e0       	ldi	r25, 0x08	; 8
     90c:	89 02       	muls	r24, r25
     90e:	a0 01       	movw	r20, r0
     910:	11 24       	eor	r1, r1
     912:	49 53       	subi	r20, 0x39	; 57
     914:	5d 4f       	sbci	r21, 0xFD	; 253
		letter_bitmap = font4[letter - ' '];
		} else if (size == FONT_SIZE_MEDIUM) {
		char_length = 5;
		letter_bitmap = font5[letter - ' '];
		} else {
		char_length = 8;
     916:	28 e0       	ldi	r18, 0x08	; 8
     918:	0a c0       	rjmp	.+20     	; 0x92e <oled_print_char_of_size+0x5e>
     91a:	fa 01       	movw	r30, r20
     91c:	e8 0f       	add	r30, r24
     91e:	f9 1f       	adc	r31, r25
		letter_bitmap = font8[letter - ' '];
	}
	for (int i = 0; i < char_length; i++) {
      oled_write_data(pgm_read_byte(&(letter_bitmap[i])));
     920:	e4 91       	lpm	r30, Z
	*adress = data;
}

void oled_write_data(uint8_t data) {
	volatile uint8_t *adress = OLEDD_OFFSET;
	*adress = data;
     922:	ec 93       	st	X, r30
		letter_bitmap = font5[letter - ' '];
		} else {
		char_length = 8;
		letter_bitmap = font8[letter - ' '];
	}
	for (int i = 0; i < char_length; i++) {
     924:	01 96       	adiw	r24, 0x01	; 1
     926:	82 17       	cp	r24, r18
     928:	93 07       	cpc	r25, r19
     92a:	bc f3       	brlt	.-18     	; 0x91a <oled_print_char_of_size+0x4a>
     92c:	08 95       	ret
     92e:	30 e0       	ldi	r19, 0x00	; 0
     930:	80 e0       	ldi	r24, 0x00	; 0
     932:	90 e0       	ldi	r25, 0x00	; 0
	*adress = data;
}

void oled_write_data(uint8_t data) {
	volatile uint8_t *adress = OLEDD_OFFSET;
	*adress = data;
     934:	a0 e0       	ldi	r26, 0x00	; 0
     936:	b2 e1       	ldi	r27, 0x12	; 18
     938:	f0 cf       	rjmp	.-32     	; 0x91a <oled_print_char_of_size+0x4a>

0000093a <oled_print_char_of_size_inverted>:
}

void oled_print_char_of_size_inverted(char letter, uint8_t size) {
	uint8_t char_length = 0;
	unsigned char *letter_bitmap;
	if (size == FONT_SIZE_SMALL) {
     93a:	62 30       	cpi	r22, 0x02	; 2
     93c:	41 f4       	brne	.+16     	; 0x94e <oled_print_char_of_size_inverted+0x14>
		char_length = 4;
		letter_bitmap = font4[letter - ' '];
     93e:	94 e0       	ldi	r25, 0x04	; 4
     940:	89 02       	muls	r24, r25
     942:	a0 01       	movw	r20, r0
     944:	11 24       	eor	r1, r1
     946:	40 51       	subi	r20, 0x10	; 16
     948:	50 40       	sbci	r21, 0x00	; 0

void oled_print_char_of_size_inverted(char letter, uint8_t size) {
	uint8_t char_length = 0;
	unsigned char *letter_bitmap;
	if (size == FONT_SIZE_SMALL) {
		char_length = 4;
     94a:	24 e0       	ldi	r18, 0x04	; 4
     94c:	26 c0       	rjmp	.+76     	; 0x99a <oled_print_char_of_size_inverted+0x60>
		letter_bitmap = font4[letter - ' '];
		} else if (size == FONT_SIZE_MEDIUM) {
     94e:	61 30       	cpi	r22, 0x01	; 1
     950:	89 f4       	brne	.+34     	; 0x974 <oled_print_char_of_size_inverted+0x3a>
		char_length = 5;
		letter_bitmap = font5[letter - ' '];
     952:	48 2f       	mov	r20, r24
     954:	55 27       	eor	r21, r21
     956:	47 fd       	sbrc	r20, 7
     958:	50 95       	com	r21
     95a:	40 52       	subi	r20, 0x20	; 32
     95c:	51 09       	sbc	r21, r1
     95e:	ca 01       	movw	r24, r20
     960:	88 0f       	add	r24, r24
     962:	99 1f       	adc	r25, r25
     964:	88 0f       	add	r24, r24
     966:	99 1f       	adc	r25, r25
     968:	48 0f       	add	r20, r24
     96a:	59 1f       	adc	r21, r25
     96c:	44 51       	subi	r20, 0x14	; 20
     96e:	5e 4f       	sbci	r21, 0xFE	; 254
	unsigned char *letter_bitmap;
	if (size == FONT_SIZE_SMALL) {
		char_length = 4;
		letter_bitmap = font4[letter - ' '];
		} else if (size == FONT_SIZE_MEDIUM) {
		char_length = 5;
     970:	25 e0       	ldi	r18, 0x05	; 5
     972:	13 c0       	rjmp	.+38     	; 0x99a <oled_print_char_of_size_inverted+0x60>
		letter_bitmap = font5[letter - ' '];
		} else {
		char_length = 8;
		letter_bitmap = font8[letter - ' '];
     974:	98 e0       	ldi	r25, 0x08	; 8
     976:	89 02       	muls	r24, r25
     978:	a0 01       	movw	r20, r0
     97a:	11 24       	eor	r1, r1
     97c:	49 53       	subi	r20, 0x39	; 57
     97e:	5d 4f       	sbci	r21, 0xFD	; 253
		letter_bitmap = font4[letter - ' '];
		} else if (size == FONT_SIZE_MEDIUM) {
		char_length = 5;
		letter_bitmap = font5[letter - ' '];
		} else {
		char_length = 8;
     980:	28 e0       	ldi	r18, 0x08	; 8
     982:	0b c0       	rjmp	.+22     	; 0x99a <oled_print_char_of_size_inverted+0x60>
     984:	fa 01       	movw	r30, r20
     986:	e8 0f       	add	r30, r24
     988:	f9 1f       	adc	r31, r25
		letter_bitmap = font8[letter - ' '];
	}
	for (int i = 0; i < char_length; i++) {
      oled_write_data(~pgm_read_byte(&(letter_bitmap[i])));
     98a:	e4 91       	lpm	r30, Z
     98c:	e0 95       	com	r30
	*adress = data;
}

void oled_write_data(uint8_t data) {
	volatile uint8_t *adress = OLEDD_OFFSET;
	*adress = data;
     98e:	ec 93       	st	X, r30
		letter_bitmap = font5[letter - ' '];
		} else {
		char_length = 8;
		letter_bitmap = font8[letter - ' '];
	}
	for (int i = 0; i < char_length; i++) {
     990:	01 96       	adiw	r24, 0x01	; 1
     992:	82 17       	cp	r24, r18
     994:	93 07       	cpc	r25, r19
     996:	b4 f3       	brlt	.-20     	; 0x984 <oled_print_char_of_size_inverted+0x4a>
     998:	08 95       	ret
     99a:	30 e0       	ldi	r19, 0x00	; 0
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	90 e0       	ldi	r25, 0x00	; 0
	*adress = data;
}

void oled_write_data(uint8_t data) {
	volatile uint8_t *adress = OLEDD_OFFSET;
	*adress = data;
     9a0:	a0 e0       	ldi	r26, 0x00	; 0
     9a2:	b2 e1       	ldi	r27, 0x12	; 18
     9a4:	ef cf       	rjmp	.-34     	; 0x984 <oled_print_char_of_size_inverted+0x4a>

000009a6 <oled_print_char>:

uint8_t printf_page = 0;
uint8_t printf_size = 0;

uint8_t oled_print_char(char letter) {
	if (letter == '\n') {
     9a6:	8a 30       	cpi	r24, 0x0A	; 10
     9a8:	51 f4       	brne	.+20     	; 0x9be <oled_print_char+0x18>
		printf_page += 1;
     9aa:	80 91 37 02 	lds	r24, 0x0237
     9ae:	8f 5f       	subi	r24, 0xFF	; 255
     9b0:	80 93 37 02 	sts	0x0237, r24
		oled_page_select(printf_page);
     9b4:	32 df       	rcall	.-412    	; 0x81a <oled_page_select>
		oled_columb_range_select(0, OLED_COLUMBS);
     9b6:	60 e8       	ldi	r22, 0x80	; 128
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	1b df       	rcall	.-458    	; 0x7f2 <oled_columb_range_select>
     9bc:	03 c0       	rjmp	.+6      	; 0x9c4 <oled_print_char+0x1e>
		} else {
		oled_print_char_of_size(letter, printf_size);
     9be:	60 91 36 02 	lds	r22, 0x0236
     9c2:	86 df       	rcall	.-244    	; 0x8d0 <oled_print_char_of_size>
		uint8_t columb_adder = 0;
	}
	return 0;
}
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	08 95       	ret

000009c8 <oled_print_char_inverted>:

uint8_t oled_print_char_inverted(char letter) {
	if (letter == '\n') {
     9c8:	8a 30       	cpi	r24, 0x0A	; 10
     9ca:	51 f4       	brne	.+20     	; 0x9e0 <oled_print_char_inverted+0x18>
		printf_page += 1;
     9cc:	80 91 37 02 	lds	r24, 0x0237
     9d0:	8f 5f       	subi	r24, 0xFF	; 255
     9d2:	80 93 37 02 	sts	0x0237, r24
		oled_page_select(printf_page);
     9d6:	21 df       	rcall	.-446    	; 0x81a <oled_page_select>
		oled_columb_range_select(0, OLED_COLUMBS);
     9d8:	60 e8       	ldi	r22, 0x80	; 128
     9da:	80 e0       	ldi	r24, 0x00	; 0
     9dc:	0a df       	rcall	.-492    	; 0x7f2 <oled_columb_range_select>
     9de:	03 c0       	rjmp	.+6      	; 0x9e6 <oled_print_char_inverted+0x1e>
	} else {
		oled_print_char_of_size_inverted(letter, printf_size);
     9e0:	60 91 36 02 	lds	r22, 0x0236
     9e4:	aa df       	rcall	.-172    	; 0x93a <oled_print_char_of_size_inverted>
		uint8_t columb_adder = 0;
	}
	return 0;
}
     9e6:	80 e0       	ldi	r24, 0x00	; 0
     9e8:	08 95       	ret

000009ea <oled_printf>:

void oled_printf(char text[]){
     9ea:	ef 92       	push	r14
     9ec:	ff 92       	push	r15
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
	int lenght = strlen(text);
     9f6:	fc 01       	movw	r30, r24
     9f8:	01 90       	ld	r0, Z+
     9fa:	00 20       	and	r0, r0
     9fc:	e9 f7       	brne	.-6      	; 0x9f8 <oled_printf+0xe>
     9fe:	31 97       	sbiw	r30, 0x01	; 1
     a00:	7f 01       	movw	r14, r30
     a02:	e8 1a       	sub	r14, r24
     a04:	f9 0a       	sbc	r15, r25
	//printf("size =  %d \r\n", lenght);
	for (int c = 0; c<lenght; c++){
     a06:	1e 14       	cp	r1, r14
     a08:	1f 04       	cpc	r1, r15
     a0a:	5c f4       	brge	.+22     	; 0xa22 <oled_printf+0x38>
     a0c:	8c 01       	movw	r16, r24
     a0e:	c0 e0       	ldi	r28, 0x00	; 0
     a10:	d0 e0       	ldi	r29, 0x00	; 0
		//printf("letter =  %d \r\n", c);
		oled_print_char(text[c]);
     a12:	f8 01       	movw	r30, r16
     a14:	81 91       	ld	r24, Z+
     a16:	8f 01       	movw	r16, r30
     a18:	c6 df       	rcall	.-116    	; 0x9a6 <oled_print_char>
}

void oled_printf(char text[]){
	int lenght = strlen(text);
	//printf("size =  %d \r\n", lenght);
	for (int c = 0; c<lenght; c++){
     a1a:	21 96       	adiw	r28, 0x01	; 1
     a1c:	ec 16       	cp	r14, r28
     a1e:	fd 06       	cpc	r15, r29
     a20:	c1 f7       	brne	.-16     	; 0xa12 <oled_printf+0x28>
		//printf("letter =  %d \r\n", c);
		oled_print_char(text[c]);
	}
}
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	ff 90       	pop	r15
     a2c:	ef 90       	pop	r14
     a2e:	08 95       	ret

00000a30 <oled_printf_inverted>:

void oled_printf_inverted(char text[]){
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
	int lenght = strlen(text);
     a3c:	fc 01       	movw	r30, r24
     a3e:	01 90       	ld	r0, Z+
     a40:	00 20       	and	r0, r0
     a42:	e9 f7       	brne	.-6      	; 0xa3e <oled_printf_inverted+0xe>
     a44:	31 97       	sbiw	r30, 0x01	; 1
     a46:	7f 01       	movw	r14, r30
     a48:	e8 1a       	sub	r14, r24
     a4a:	f9 0a       	sbc	r15, r25
	//printf("size =  %d \r\n", lenght);
	for (int c = 0; c<lenght; c++){
     a4c:	1e 14       	cp	r1, r14
     a4e:	1f 04       	cpc	r1, r15
     a50:	5c f4       	brge	.+22     	; 0xa68 <oled_printf_inverted+0x38>
     a52:	8c 01       	movw	r16, r24
     a54:	c0 e0       	ldi	r28, 0x00	; 0
     a56:	d0 e0       	ldi	r29, 0x00	; 0
		//printf("letter =  %d \r\n", c);
		oled_print_char_inverted(text[c]);
     a58:	f8 01       	movw	r30, r16
     a5a:	81 91       	ld	r24, Z+
     a5c:	8f 01       	movw	r16, r30
     a5e:	b4 df       	rcall	.-152    	; 0x9c8 <oled_print_char_inverted>
}

void oled_printf_inverted(char text[]){
	int lenght = strlen(text);
	//printf("size =  %d \r\n", lenght);
	for (int c = 0; c<lenght; c++){
     a60:	21 96       	adiw	r28, 0x01	; 1
     a62:	ec 16       	cp	r14, r28
     a64:	fd 06       	cpc	r15, r29
     a66:	c1 f7       	brne	.-16     	; 0xa58 <oled_printf_inverted+0x28>
		//printf("letter =  %d \r\n", c);
		oled_print_char_inverted(text[c]);
	}
}
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	1f 91       	pop	r17
     a6e:	0f 91       	pop	r16
     a70:	ff 90       	pop	r15
     a72:	ef 90       	pop	r14
     a74:	08 95       	ret

00000a76 <oled_display_activity>:

void oled_display_activity(){
	oled_clear_screen();
     a76:	f0 de       	rcall	.-544    	; 0x858 <oled_clear_screen>
		if(joy_pos == i)
			oled_printf_inverted(current_activity->oled_string[i]);
		else
			oled_printf(current_activity->oled_string[i]);
	}*/
	oled_page_select(1);
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	cf de       	rcall	.-610    	; 0x81a <oled_page_select>
	if(joy_pos == 0)
     a7c:	80 91 3e 03 	lds	r24, 0x033E
     a80:	90 91 3f 03 	lds	r25, 0x033F
     a84:	89 2b       	or	r24, r25
     a86:	21 f4       	brne	.+8      	; 0xa90 <oled_display_activity+0x1a>
		oled_printf_inverted("Spring \n");
     a88:	86 e0       	ldi	r24, 0x06	; 6
     a8a:	91 e0       	ldi	r25, 0x01	; 1
     a8c:	d1 df       	rcall	.-94     	; 0xa30 <oled_printf_inverted>
     a8e:	03 c0       	rjmp	.+6      	; 0xa96 <oled_display_activity+0x20>
	else
		oled_printf("Spring \n");
     a90:	86 e0       	ldi	r24, 0x06	; 6
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	aa df       	rcall	.-172    	; 0x9ea <oled_printf>
	
	oled_page_select(2);
     a96:	82 e0       	ldi	r24, 0x02	; 2
     a98:	c0 de       	rcall	.-640    	; 0x81a <oled_page_select>
	if(joy_pos == 1)
     a9a:	80 91 3e 03 	lds	r24, 0x033E
     a9e:	90 91 3f 03 	lds	r25, 0x033F
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	21 f4       	brne	.+8      	; 0xaae <oled_display_activity+0x38>
		oled_printf_inverted("Summer \n");
     aa6:	8f e0       	ldi	r24, 0x0F	; 15
     aa8:	91 e0       	ldi	r25, 0x01	; 1
     aaa:	c2 df       	rcall	.-124    	; 0xa30 <oled_printf_inverted>
     aac:	03 c0       	rjmp	.+6      	; 0xab4 <oled_display_activity+0x3e>
	else
		oled_printf("Summer \n");
     aae:	8f e0       	ldi	r24, 0x0F	; 15
     ab0:	91 e0       	ldi	r25, 0x01	; 1
     ab2:	9b df       	rcall	.-202    	; 0x9ea <oled_printf>
	
	oled_page_select(3);
     ab4:	83 e0       	ldi	r24, 0x03	; 3
     ab6:	b1 de       	rcall	.-670    	; 0x81a <oled_page_select>
	if(joy_pos == 2)
     ab8:	80 91 3e 03 	lds	r24, 0x033E
     abc:	90 91 3f 03 	lds	r25, 0x033F
     ac0:	02 97       	sbiw	r24, 0x02	; 2
     ac2:	21 f4       	brne	.+8      	; 0xacc <oled_display_activity+0x56>
		oled_printf_inverted("Return \n");
     ac4:	88 e1       	ldi	r24, 0x18	; 24
     ac6:	91 e0       	ldi	r25, 0x01	; 1
     ac8:	b3 cf       	rjmp	.-154    	; 0xa30 <oled_printf_inverted>
     aca:	08 95       	ret
	else
		oled_printf("Return \n");
     acc:	88 e1       	ldi	r24, 0x18	; 24
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	8c cf       	rjmp	.-232    	; 0x9ea <oled_printf>
     ad2:	08 95       	ret

00000ad4 <oled_actualise_joy_pos>:
}

void oled_actualise_joy_pos(int joy_direction)
{
	
	if(joy_direction == UP)
     ad4:	82 30       	cpi	r24, 0x02	; 2
     ad6:	91 05       	cpc	r25, r1
     ad8:	99 f4       	brne	.+38     	; 0xb00 <oled_actualise_joy_pos+0x2c>
		if (joy_pos==0){
     ada:	80 91 3e 03 	lds	r24, 0x033E
     ade:	90 91 3f 03 	lds	r25, 0x033F
     ae2:	00 97       	sbiw	r24, 0x00	; 0
     ae4:	39 f4       	brne	.+14     	; 0xaf4 <oled_actualise_joy_pos+0x20>
			joy_pos=2;
     ae6:	82 e0       	ldi	r24, 0x02	; 2
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	90 93 3f 03 	sts	0x033F, r25
     aee:	80 93 3e 03 	sts	0x033E, r24
     af2:	08 95       	ret
		}else{
			joy_pos = (joy_pos - 1);
     af4:	01 97       	sbiw	r24, 0x01	; 1
     af6:	90 93 3f 03 	sts	0x033F, r25
     afa:	80 93 3e 03 	sts	0x033E, r24
     afe:	08 95       	ret
		}
	else if(joy_direction == DOWN)
     b00:	03 97       	sbiw	r24, 0x03	; 3
     b02:	a1 f4       	brne	.+40     	; 0xb2c <oled_actualise_joy_pos+0x58>
		if (joy_pos==2){
     b04:	80 91 3e 03 	lds	r24, 0x033E
     b08:	90 91 3f 03 	lds	r25, 0x033F
     b0c:	82 30       	cpi	r24, 0x02	; 2
     b0e:	91 05       	cpc	r25, r1
     b10:	29 f4       	brne	.+10     	; 0xb1c <oled_actualise_joy_pos+0x48>
			joy_pos=0;
     b12:	10 92 3f 03 	sts	0x033F, r1
     b16:	10 92 3e 03 	sts	0x033E, r1
     b1a:	08 95       	ret
		}else{
			joy_pos = (joy_pos + 1)%3;
     b1c:	01 96       	adiw	r24, 0x01	; 1
     b1e:	63 e0       	ldi	r22, 0x03	; 3
     b20:	70 e0       	ldi	r23, 0x00	; 0
     b22:	5d d0       	rcall	.+186    	; 0xbde <__divmodhi4>
     b24:	90 93 3f 03 	sts	0x033F, r25
     b28:	80 93 3e 03 	sts	0x033E, r24
     b2c:	08 95       	ret

00000b2e <oled_get_joy_pos>:

}

int oled_get_joy_pos(){
	return joy_pos;
     b2e:	80 91 3e 03 	lds	r24, 0x033E
     b32:	90 91 3f 03 	lds	r25, 0x033F
     b36:	08 95       	ret

00000b38 <USART_Transmit>:

uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char*) BASE_ADDRESS;
	uint8_t ret_val = ext_mem[addr];
	return ret_val;
}
     b38:	5d 9b       	sbis	0x0b, 5	; 11
     b3a:	fe cf       	rjmp	.-4      	; 0xb38 <USART_Transmit>
     b3c:	8c b9       	out	0x0c, r24	; 12
     b3e:	08 95       	ret

00000b40 <USART_Receive>:
     b40:	5f 99       	sbic	0x0b, 7	; 11
     b42:	fe cf       	rjmp	.-4      	; 0xb40 <USART_Receive>
     b44:	8c b1       	in	r24, 0x0c	; 12
     b46:	08 95       	ret

00000b48 <USART_Init>:
     b48:	90 bd       	out	0x20, r25	; 32
     b4a:	89 b9       	out	0x09, r24	; 9
     b4c:	88 e9       	ldi	r24, 0x98	; 152
     b4e:	8a b9       	out	0x0a, r24	; 10
     b50:	8e e8       	ldi	r24, 0x8E	; 142
     b52:	80 bd       	out	0x20, r24	; 32
     b54:	60 ea       	ldi	r22, 0xA0	; 160
     b56:	75 e0       	ldi	r23, 0x05	; 5
     b58:	8c e9       	ldi	r24, 0x9C	; 156
     b5a:	95 e0       	ldi	r25, 0x05	; 5
     b5c:	67 c0       	rjmp	.+206    	; 0xc2c <fdevopen>
     b5e:	08 95       	ret

00000b60 <xmem_init>:
     b60:	85 b7       	in	r24, 0x35	; 53
     b62:	80 68       	ori	r24, 0x80	; 128
     b64:	85 bf       	out	0x35, r24	; 53
     b66:	80 b7       	in	r24, 0x30	; 48
     b68:	80 62       	ori	r24, 0x20	; 32
     b6a:	80 bf       	out	0x30, r24	; 48
     b6c:	08 95       	ret

00000b6e <main>:


int main(void){
	
	USART_Init(MYUBRR);
     b6e:	8f e1       	ldi	r24, 0x1F	; 31
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	ea df       	rcall	.-44     	; 0xb48 <USART_Init>
	xmem_init();
     b74:	f5 df       	rcall	.-22     	; 0xb60 <xmem_init>
	uint8_t data = 5;
	DDRB &= ~(0b0111);
     b76:	87 b3       	in	r24, 0x17	; 23
     b78:	88 7f       	andi	r24, 0xF8	; 248
     b7a:	87 bb       	out	0x17, r24	; 23
	//SRAM_test();
	
	int left_s = 0, right_s = 0, x = 0, y = 0;
	int temp_value = NEUTRAL;
	oled_init();
     b7c:	76 de       	rcall	.-788    	; 0x86a <oled_init>
	adc_init();
     b7e:	bc dd       	rcall	.-1160   	; 0x6f8 <adc_init>
	oled_display_activity();	
     b80:	7a df       	rcall	.-268    	; 0xa76 <oled_display_activity>
		//printf("while \n \r");
		//printf("return of adc joy changed %d \n \r", adc_joy_pos_changed());
		if(temp_value = adc_joy_pos_changed())
		{
			
			printf("temp value %d \n \r", temp_value);
     b82:	06 e0       	ldi	r16, 0x06	; 6
     b84:	12 e0       	ldi	r17, 0x02	; 2
		*/
		pin = (PINB & 0b0100)>>2;
		//printf("pin  %d \n \r", pin);
		
		if(pin == 0)
			printf("string number %d selected \n \r", oled_get_joy_pos());
     b86:	0f 2e       	mov	r0, r31
     b88:	f8 e1       	ldi	r31, 0x18	; 24
     b8a:	ef 2e       	mov	r14, r31
     b8c:	f2 e0       	ldi	r31, 0x02	; 2
     b8e:	ff 2e       	mov	r15, r31
     b90:	f0 2d       	mov	r31, r0
		//temp_value = adc_joy_pos_changed();
		//printf("temp value %d \n \r", temp_value);
		//_delay_ms(2000);
		//printf("while \n \r");
		//printf("return of adc joy changed %d \n \r", adc_joy_pos_changed());
		if(temp_value = adc_joy_pos_changed())
     b92:	10 de       	rcall	.-992    	; 0x7b4 <adc_joy_pos_changed>
     b94:	ec 01       	movw	r28, r24
     b96:	00 97       	sbiw	r24, 0x00	; 0
     b98:	a9 f0       	breq	.+42     	; 0xbc4 <main+0x56>
		{
			
			printf("temp value %d \n \r", temp_value);
     b9a:	df 93       	push	r29
     b9c:	8f 93       	push	r24
     b9e:	1f 93       	push	r17
     ba0:	0f 93       	push	r16
     ba2:	8e d0       	rcall	.+284    	; 0xcc0 <printf>
			oled_actualise_joy_pos(temp_value);
     ba4:	ce 01       	movw	r24, r28
     ba6:	96 df       	rcall	.-212    	; 0xad4 <oled_actualise_joy_pos>
			oled_display_activity();
     ba8:	66 df       	rcall	.-308    	; 0xa76 <oled_display_activity>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     baa:	9f ef       	ldi	r25, 0xFF	; 255
     bac:	2f ef       	ldi	r18, 0xFF	; 255
     bae:	85 e0       	ldi	r24, 0x05	; 5
     bb0:	91 50       	subi	r25, 0x01	; 1
     bb2:	20 40       	sbci	r18, 0x00	; 0
     bb4:	80 40       	sbci	r24, 0x00	; 0
     bb6:	e1 f7       	brne	.-8      	; 0xbb0 <main+0x42>
     bb8:	00 c0       	rjmp	.+0      	; 0xbba <main+0x4c>
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <main+0x4e>
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	0f 90       	pop	r0
		printf("value PINB %d \n \r", PINB);
		*/
		pin = (PINB & 0b0100)>>2;
		//printf("pin  %d \n \r", pin);
		
		if(pin == 0)
     bc4:	b2 99       	sbic	0x16, 2	; 22
     bc6:	e5 cf       	rjmp	.-54     	; 0xb92 <main+0x24>
			printf("string number %d selected \n \r", oled_get_joy_pos());
     bc8:	b2 df       	rcall	.-156    	; 0xb2e <oled_get_joy_pos>
     bca:	9f 93       	push	r25
     bcc:	8f 93       	push	r24
     bce:	ff 92       	push	r15
     bd0:	ef 92       	push	r14
     bd2:	76 d0       	rcall	.+236    	; 0xcc0 <printf>
     bd4:	0f 90       	pop	r0
     bd6:	0f 90       	pop	r0
     bd8:	0f 90       	pop	r0
     bda:	0f 90       	pop	r0
     bdc:	da cf       	rjmp	.-76     	; 0xb92 <main+0x24>

00000bde <__divmodhi4>:
     bde:	97 fb       	bst	r25, 7
     be0:	07 2e       	mov	r0, r23
     be2:	16 f4       	brtc	.+4      	; 0xbe8 <__divmodhi4+0xa>
     be4:	00 94       	com	r0
     be6:	06 d0       	rcall	.+12     	; 0xbf4 <__divmodhi4_neg1>
     be8:	77 fd       	sbrc	r23, 7
     bea:	08 d0       	rcall	.+16     	; 0xbfc <__divmodhi4_neg2>
     bec:	0b d0       	rcall	.+22     	; 0xc04 <__udivmodhi4>
     bee:	07 fc       	sbrc	r0, 7
     bf0:	05 d0       	rcall	.+10     	; 0xbfc <__divmodhi4_neg2>
     bf2:	3e f4       	brtc	.+14     	; 0xc02 <__divmodhi4_exit>

00000bf4 <__divmodhi4_neg1>:
     bf4:	90 95       	com	r25
     bf6:	81 95       	neg	r24
     bf8:	9f 4f       	sbci	r25, 0xFF	; 255
     bfa:	08 95       	ret

00000bfc <__divmodhi4_neg2>:
     bfc:	70 95       	com	r23
     bfe:	61 95       	neg	r22
     c00:	7f 4f       	sbci	r23, 0xFF	; 255

00000c02 <__divmodhi4_exit>:
     c02:	08 95       	ret

00000c04 <__udivmodhi4>:
     c04:	aa 1b       	sub	r26, r26
     c06:	bb 1b       	sub	r27, r27
     c08:	51 e1       	ldi	r21, 0x11	; 17
     c0a:	07 c0       	rjmp	.+14     	; 0xc1a <__udivmodhi4_ep>

00000c0c <__udivmodhi4_loop>:
     c0c:	aa 1f       	adc	r26, r26
     c0e:	bb 1f       	adc	r27, r27
     c10:	a6 17       	cp	r26, r22
     c12:	b7 07       	cpc	r27, r23
     c14:	10 f0       	brcs	.+4      	; 0xc1a <__udivmodhi4_ep>
     c16:	a6 1b       	sub	r26, r22
     c18:	b7 0b       	sbc	r27, r23

00000c1a <__udivmodhi4_ep>:
     c1a:	88 1f       	adc	r24, r24
     c1c:	99 1f       	adc	r25, r25
     c1e:	5a 95       	dec	r21
     c20:	a9 f7       	brne	.-22     	; 0xc0c <__udivmodhi4_loop>
     c22:	80 95       	com	r24
     c24:	90 95       	com	r25
     c26:	bc 01       	movw	r22, r24
     c28:	cd 01       	movw	r24, r26
     c2a:	08 95       	ret

00000c2c <fdevopen>:
     c2c:	0f 93       	push	r16
     c2e:	1f 93       	push	r17
     c30:	cf 93       	push	r28
     c32:	df 93       	push	r29
     c34:	ec 01       	movw	r28, r24
     c36:	8b 01       	movw	r16, r22
     c38:	00 97       	sbiw	r24, 0x00	; 0
     c3a:	31 f4       	brne	.+12     	; 0xc48 <fdevopen+0x1c>
     c3c:	61 15       	cp	r22, r1
     c3e:	71 05       	cpc	r23, r1
     c40:	19 f4       	brne	.+6      	; 0xc48 <fdevopen+0x1c>
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	37 c0       	rjmp	.+110    	; 0xcb6 <fdevopen+0x8a>
     c48:	6e e0       	ldi	r22, 0x0E	; 14
     c4a:	70 e0       	ldi	r23, 0x00	; 0
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	0b d2       	rcall	.+1046   	; 0x1068 <calloc>
     c52:	fc 01       	movw	r30, r24
     c54:	00 97       	sbiw	r24, 0x00	; 0
     c56:	a9 f3       	breq	.-22     	; 0xc42 <fdevopen+0x16>
     c58:	80 e8       	ldi	r24, 0x80	; 128
     c5a:	83 83       	std	Z+3, r24	; 0x03
     c5c:	01 15       	cp	r16, r1
     c5e:	11 05       	cpc	r17, r1
     c60:	71 f0       	breq	.+28     	; 0xc7e <fdevopen+0x52>
     c62:	13 87       	std	Z+11, r17	; 0x0b
     c64:	02 87       	std	Z+10, r16	; 0x0a
     c66:	81 e8       	ldi	r24, 0x81	; 129
     c68:	83 83       	std	Z+3, r24	; 0x03
     c6a:	80 91 40 03 	lds	r24, 0x0340
     c6e:	90 91 41 03 	lds	r25, 0x0341
     c72:	89 2b       	or	r24, r25
     c74:	21 f4       	brne	.+8      	; 0xc7e <fdevopen+0x52>
     c76:	f0 93 41 03 	sts	0x0341, r31
     c7a:	e0 93 40 03 	sts	0x0340, r30
     c7e:	20 97       	sbiw	r28, 0x00	; 0
     c80:	c9 f0       	breq	.+50     	; 0xcb4 <fdevopen+0x88>
     c82:	d1 87       	std	Z+9, r29	; 0x09
     c84:	c0 87       	std	Z+8, r28	; 0x08
     c86:	83 81       	ldd	r24, Z+3	; 0x03
     c88:	82 60       	ori	r24, 0x02	; 2
     c8a:	83 83       	std	Z+3, r24	; 0x03
     c8c:	80 91 42 03 	lds	r24, 0x0342
     c90:	90 91 43 03 	lds	r25, 0x0343
     c94:	89 2b       	or	r24, r25
     c96:	71 f4       	brne	.+28     	; 0xcb4 <fdevopen+0x88>
     c98:	f0 93 43 03 	sts	0x0343, r31
     c9c:	e0 93 42 03 	sts	0x0342, r30
     ca0:	80 91 44 03 	lds	r24, 0x0344
     ca4:	90 91 45 03 	lds	r25, 0x0345
     ca8:	89 2b       	or	r24, r25
     caa:	21 f4       	brne	.+8      	; 0xcb4 <fdevopen+0x88>
     cac:	f0 93 45 03 	sts	0x0345, r31
     cb0:	e0 93 44 03 	sts	0x0344, r30
     cb4:	cf 01       	movw	r24, r30
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	1f 91       	pop	r17
     cbc:	0f 91       	pop	r16
     cbe:	08 95       	ret

00000cc0 <printf>:
     cc0:	a0 e0       	ldi	r26, 0x00	; 0
     cc2:	b0 e0       	ldi	r27, 0x00	; 0
     cc4:	e5 e6       	ldi	r30, 0x65	; 101
     cc6:	f6 e0       	ldi	r31, 0x06	; 6
     cc8:	cd c3       	rjmp	.+1946   	; 0x1464 <__prologue_saves__+0x20>
     cca:	fe 01       	movw	r30, r28
     ccc:	35 96       	adiw	r30, 0x05	; 5
     cce:	61 91       	ld	r22, Z+
     cd0:	71 91       	ld	r23, Z+
     cd2:	af 01       	movw	r20, r30
     cd4:	80 91 42 03 	lds	r24, 0x0342
     cd8:	90 91 43 03 	lds	r25, 0x0343
     cdc:	02 d0       	rcall	.+4      	; 0xce2 <vfprintf>
     cde:	e2 e0       	ldi	r30, 0x02	; 2
     ce0:	dd c3       	rjmp	.+1978   	; 0x149c <__epilogue_restores__+0x20>

00000ce2 <vfprintf>:
     ce2:	ac e0       	ldi	r26, 0x0C	; 12
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e6 e7       	ldi	r30, 0x76	; 118
     ce8:	f6 e0       	ldi	r31, 0x06	; 6
     cea:	ac c3       	rjmp	.+1880   	; 0x1444 <__prologue_saves__>
     cec:	7c 01       	movw	r14, r24
     cee:	6b 01       	movw	r12, r22
     cf0:	8a 01       	movw	r16, r20
     cf2:	fc 01       	movw	r30, r24
     cf4:	17 82       	std	Z+7, r1	; 0x07
     cf6:	16 82       	std	Z+6, r1	; 0x06
     cf8:	83 81       	ldd	r24, Z+3	; 0x03
     cfa:	81 ff       	sbrs	r24, 1
     cfc:	b0 c1       	rjmp	.+864    	; 0x105e <vfprintf+0x37c>
     cfe:	ce 01       	movw	r24, r28
     d00:	01 96       	adiw	r24, 0x01	; 1
     d02:	4c 01       	movw	r8, r24
     d04:	f7 01       	movw	r30, r14
     d06:	93 81       	ldd	r25, Z+3	; 0x03
     d08:	f6 01       	movw	r30, r12
     d0a:	93 fd       	sbrc	r25, 3
     d0c:	85 91       	lpm	r24, Z+
     d0e:	93 ff       	sbrs	r25, 3
     d10:	81 91       	ld	r24, Z+
     d12:	6f 01       	movw	r12, r30
     d14:	88 23       	and	r24, r24
     d16:	09 f4       	brne	.+2      	; 0xd1a <vfprintf+0x38>
     d18:	9e c1       	rjmp	.+828    	; 0x1056 <vfprintf+0x374>
     d1a:	85 32       	cpi	r24, 0x25	; 37
     d1c:	39 f4       	brne	.+14     	; 0xd2c <vfprintf+0x4a>
     d1e:	93 fd       	sbrc	r25, 3
     d20:	85 91       	lpm	r24, Z+
     d22:	93 ff       	sbrs	r25, 3
     d24:	81 91       	ld	r24, Z+
     d26:	6f 01       	movw	r12, r30
     d28:	85 32       	cpi	r24, 0x25	; 37
     d2a:	21 f4       	brne	.+8      	; 0xd34 <vfprintf+0x52>
     d2c:	b7 01       	movw	r22, r14
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	f9 d2       	rcall	.+1522   	; 0x1324 <fputc>
     d32:	e8 cf       	rjmp	.-48     	; 0xd04 <vfprintf+0x22>
     d34:	51 2c       	mov	r5, r1
     d36:	31 2c       	mov	r3, r1
     d38:	20 e0       	ldi	r18, 0x00	; 0
     d3a:	20 32       	cpi	r18, 0x20	; 32
     d3c:	a0 f4       	brcc	.+40     	; 0xd66 <vfprintf+0x84>
     d3e:	8b 32       	cpi	r24, 0x2B	; 43
     d40:	69 f0       	breq	.+26     	; 0xd5c <vfprintf+0x7a>
     d42:	30 f4       	brcc	.+12     	; 0xd50 <vfprintf+0x6e>
     d44:	80 32       	cpi	r24, 0x20	; 32
     d46:	59 f0       	breq	.+22     	; 0xd5e <vfprintf+0x7c>
     d48:	83 32       	cpi	r24, 0x23	; 35
     d4a:	69 f4       	brne	.+26     	; 0xd66 <vfprintf+0x84>
     d4c:	20 61       	ori	r18, 0x10	; 16
     d4e:	2c c0       	rjmp	.+88     	; 0xda8 <vfprintf+0xc6>
     d50:	8d 32       	cpi	r24, 0x2D	; 45
     d52:	39 f0       	breq	.+14     	; 0xd62 <vfprintf+0x80>
     d54:	80 33       	cpi	r24, 0x30	; 48
     d56:	39 f4       	brne	.+14     	; 0xd66 <vfprintf+0x84>
     d58:	21 60       	ori	r18, 0x01	; 1
     d5a:	26 c0       	rjmp	.+76     	; 0xda8 <vfprintf+0xc6>
     d5c:	22 60       	ori	r18, 0x02	; 2
     d5e:	24 60       	ori	r18, 0x04	; 4
     d60:	23 c0       	rjmp	.+70     	; 0xda8 <vfprintf+0xc6>
     d62:	28 60       	ori	r18, 0x08	; 8
     d64:	21 c0       	rjmp	.+66     	; 0xda8 <vfprintf+0xc6>
     d66:	27 fd       	sbrc	r18, 7
     d68:	27 c0       	rjmp	.+78     	; 0xdb8 <vfprintf+0xd6>
     d6a:	30 ed       	ldi	r19, 0xD0	; 208
     d6c:	38 0f       	add	r19, r24
     d6e:	3a 30       	cpi	r19, 0x0A	; 10
     d70:	78 f4       	brcc	.+30     	; 0xd90 <vfprintf+0xae>
     d72:	26 ff       	sbrs	r18, 6
     d74:	06 c0       	rjmp	.+12     	; 0xd82 <vfprintf+0xa0>
     d76:	fa e0       	ldi	r31, 0x0A	; 10
     d78:	5f 9e       	mul	r5, r31
     d7a:	30 0d       	add	r19, r0
     d7c:	11 24       	eor	r1, r1
     d7e:	53 2e       	mov	r5, r19
     d80:	13 c0       	rjmp	.+38     	; 0xda8 <vfprintf+0xc6>
     d82:	8a e0       	ldi	r24, 0x0A	; 10
     d84:	38 9e       	mul	r3, r24
     d86:	30 0d       	add	r19, r0
     d88:	11 24       	eor	r1, r1
     d8a:	33 2e       	mov	r3, r19
     d8c:	20 62       	ori	r18, 0x20	; 32
     d8e:	0c c0       	rjmp	.+24     	; 0xda8 <vfprintf+0xc6>
     d90:	8e 32       	cpi	r24, 0x2E	; 46
     d92:	21 f4       	brne	.+8      	; 0xd9c <vfprintf+0xba>
     d94:	26 fd       	sbrc	r18, 6
     d96:	5f c1       	rjmp	.+702    	; 0x1056 <vfprintf+0x374>
     d98:	20 64       	ori	r18, 0x40	; 64
     d9a:	06 c0       	rjmp	.+12     	; 0xda8 <vfprintf+0xc6>
     d9c:	8c 36       	cpi	r24, 0x6C	; 108
     d9e:	11 f4       	brne	.+4      	; 0xda4 <vfprintf+0xc2>
     da0:	20 68       	ori	r18, 0x80	; 128
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <vfprintf+0xc6>
     da4:	88 36       	cpi	r24, 0x68	; 104
     da6:	41 f4       	brne	.+16     	; 0xdb8 <vfprintf+0xd6>
     da8:	f6 01       	movw	r30, r12
     daa:	93 fd       	sbrc	r25, 3
     dac:	85 91       	lpm	r24, Z+
     dae:	93 ff       	sbrs	r25, 3
     db0:	81 91       	ld	r24, Z+
     db2:	6f 01       	movw	r12, r30
     db4:	81 11       	cpse	r24, r1
     db6:	c1 cf       	rjmp	.-126    	; 0xd3a <vfprintf+0x58>
     db8:	98 2f       	mov	r25, r24
     dba:	9f 7d       	andi	r25, 0xDF	; 223
     dbc:	95 54       	subi	r25, 0x45	; 69
     dbe:	93 30       	cpi	r25, 0x03	; 3
     dc0:	28 f4       	brcc	.+10     	; 0xdcc <vfprintf+0xea>
     dc2:	0c 5f       	subi	r16, 0xFC	; 252
     dc4:	1f 4f       	sbci	r17, 0xFF	; 255
     dc6:	ff e3       	ldi	r31, 0x3F	; 63
     dc8:	f9 83       	std	Y+1, r31	; 0x01
     dca:	0d c0       	rjmp	.+26     	; 0xde6 <vfprintf+0x104>
     dcc:	83 36       	cpi	r24, 0x63	; 99
     dce:	31 f0       	breq	.+12     	; 0xddc <vfprintf+0xfa>
     dd0:	83 37       	cpi	r24, 0x73	; 115
     dd2:	71 f0       	breq	.+28     	; 0xdf0 <vfprintf+0x10e>
     dd4:	83 35       	cpi	r24, 0x53	; 83
     dd6:	09 f0       	breq	.+2      	; 0xdda <vfprintf+0xf8>
     dd8:	57 c0       	rjmp	.+174    	; 0xe88 <vfprintf+0x1a6>
     dda:	21 c0       	rjmp	.+66     	; 0xe1e <vfprintf+0x13c>
     ddc:	f8 01       	movw	r30, r16
     dde:	80 81       	ld	r24, Z
     de0:	89 83       	std	Y+1, r24	; 0x01
     de2:	0e 5f       	subi	r16, 0xFE	; 254
     de4:	1f 4f       	sbci	r17, 0xFF	; 255
     de6:	44 24       	eor	r4, r4
     de8:	43 94       	inc	r4
     dea:	51 2c       	mov	r5, r1
     dec:	54 01       	movw	r10, r8
     dee:	14 c0       	rjmp	.+40     	; 0xe18 <vfprintf+0x136>
     df0:	38 01       	movw	r6, r16
     df2:	f2 e0       	ldi	r31, 0x02	; 2
     df4:	6f 0e       	add	r6, r31
     df6:	71 1c       	adc	r7, r1
     df8:	f8 01       	movw	r30, r16
     dfa:	a0 80       	ld	r10, Z
     dfc:	b1 80       	ldd	r11, Z+1	; 0x01
     dfe:	26 ff       	sbrs	r18, 6
     e00:	03 c0       	rjmp	.+6      	; 0xe08 <vfprintf+0x126>
     e02:	65 2d       	mov	r22, r5
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <vfprintf+0x12a>
     e08:	6f ef       	ldi	r22, 0xFF	; 255
     e0a:	7f ef       	ldi	r23, 0xFF	; 255
     e0c:	c5 01       	movw	r24, r10
     e0e:	2c 87       	std	Y+12, r18	; 0x0c
     e10:	7e d2       	rcall	.+1276   	; 0x130e <strnlen>
     e12:	2c 01       	movw	r4, r24
     e14:	83 01       	movw	r16, r6
     e16:	2c 85       	ldd	r18, Y+12	; 0x0c
     e18:	2f 77       	andi	r18, 0x7F	; 127
     e1a:	22 2e       	mov	r2, r18
     e1c:	16 c0       	rjmp	.+44     	; 0xe4a <vfprintf+0x168>
     e1e:	38 01       	movw	r6, r16
     e20:	f2 e0       	ldi	r31, 0x02	; 2
     e22:	6f 0e       	add	r6, r31
     e24:	71 1c       	adc	r7, r1
     e26:	f8 01       	movw	r30, r16
     e28:	a0 80       	ld	r10, Z
     e2a:	b1 80       	ldd	r11, Z+1	; 0x01
     e2c:	26 ff       	sbrs	r18, 6
     e2e:	03 c0       	rjmp	.+6      	; 0xe36 <vfprintf+0x154>
     e30:	65 2d       	mov	r22, r5
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <vfprintf+0x158>
     e36:	6f ef       	ldi	r22, 0xFF	; 255
     e38:	7f ef       	ldi	r23, 0xFF	; 255
     e3a:	c5 01       	movw	r24, r10
     e3c:	2c 87       	std	Y+12, r18	; 0x0c
     e3e:	55 d2       	rcall	.+1194   	; 0x12ea <strnlen_P>
     e40:	2c 01       	movw	r4, r24
     e42:	2c 85       	ldd	r18, Y+12	; 0x0c
     e44:	20 68       	ori	r18, 0x80	; 128
     e46:	22 2e       	mov	r2, r18
     e48:	83 01       	movw	r16, r6
     e4a:	23 fc       	sbrc	r2, 3
     e4c:	19 c0       	rjmp	.+50     	; 0xe80 <vfprintf+0x19e>
     e4e:	83 2d       	mov	r24, r3
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	48 16       	cp	r4, r24
     e54:	59 06       	cpc	r5, r25
     e56:	a0 f4       	brcc	.+40     	; 0xe80 <vfprintf+0x19e>
     e58:	b7 01       	movw	r22, r14
     e5a:	80 e2       	ldi	r24, 0x20	; 32
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	62 d2       	rcall	.+1220   	; 0x1324 <fputc>
     e60:	3a 94       	dec	r3
     e62:	f5 cf       	rjmp	.-22     	; 0xe4e <vfprintf+0x16c>
     e64:	f5 01       	movw	r30, r10
     e66:	27 fc       	sbrc	r2, 7
     e68:	85 91       	lpm	r24, Z+
     e6a:	27 fe       	sbrs	r2, 7
     e6c:	81 91       	ld	r24, Z+
     e6e:	5f 01       	movw	r10, r30
     e70:	b7 01       	movw	r22, r14
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	57 d2       	rcall	.+1198   	; 0x1324 <fputc>
     e76:	31 10       	cpse	r3, r1
     e78:	3a 94       	dec	r3
     e7a:	f1 e0       	ldi	r31, 0x01	; 1
     e7c:	4f 1a       	sub	r4, r31
     e7e:	51 08       	sbc	r5, r1
     e80:	41 14       	cp	r4, r1
     e82:	51 04       	cpc	r5, r1
     e84:	79 f7       	brne	.-34     	; 0xe64 <vfprintf+0x182>
     e86:	de c0       	rjmp	.+444    	; 0x1044 <vfprintf+0x362>
     e88:	84 36       	cpi	r24, 0x64	; 100
     e8a:	11 f0       	breq	.+4      	; 0xe90 <vfprintf+0x1ae>
     e8c:	89 36       	cpi	r24, 0x69	; 105
     e8e:	31 f5       	brne	.+76     	; 0xedc <vfprintf+0x1fa>
     e90:	f8 01       	movw	r30, r16
     e92:	27 ff       	sbrs	r18, 7
     e94:	07 c0       	rjmp	.+14     	; 0xea4 <vfprintf+0x1c2>
     e96:	60 81       	ld	r22, Z
     e98:	71 81       	ldd	r23, Z+1	; 0x01
     e9a:	82 81       	ldd	r24, Z+2	; 0x02
     e9c:	93 81       	ldd	r25, Z+3	; 0x03
     e9e:	0c 5f       	subi	r16, 0xFC	; 252
     ea0:	1f 4f       	sbci	r17, 0xFF	; 255
     ea2:	08 c0       	rjmp	.+16     	; 0xeb4 <vfprintf+0x1d2>
     ea4:	60 81       	ld	r22, Z
     ea6:	71 81       	ldd	r23, Z+1	; 0x01
     ea8:	88 27       	eor	r24, r24
     eaa:	77 fd       	sbrc	r23, 7
     eac:	80 95       	com	r24
     eae:	98 2f       	mov	r25, r24
     eb0:	0e 5f       	subi	r16, 0xFE	; 254
     eb2:	1f 4f       	sbci	r17, 0xFF	; 255
     eb4:	2f 76       	andi	r18, 0x6F	; 111
     eb6:	b2 2e       	mov	r11, r18
     eb8:	97 ff       	sbrs	r25, 7
     eba:	09 c0       	rjmp	.+18     	; 0xece <vfprintf+0x1ec>
     ebc:	90 95       	com	r25
     ebe:	80 95       	com	r24
     ec0:	70 95       	com	r23
     ec2:	61 95       	neg	r22
     ec4:	7f 4f       	sbci	r23, 0xFF	; 255
     ec6:	8f 4f       	sbci	r24, 0xFF	; 255
     ec8:	9f 4f       	sbci	r25, 0xFF	; 255
     eca:	20 68       	ori	r18, 0x80	; 128
     ecc:	b2 2e       	mov	r11, r18
     ece:	2a e0       	ldi	r18, 0x0A	; 10
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	a4 01       	movw	r20, r8
     ed4:	59 d2       	rcall	.+1202   	; 0x1388 <__ultoa_invert>
     ed6:	a8 2e       	mov	r10, r24
     ed8:	a8 18       	sub	r10, r8
     eda:	43 c0       	rjmp	.+134    	; 0xf62 <vfprintf+0x280>
     edc:	85 37       	cpi	r24, 0x75	; 117
     ede:	29 f4       	brne	.+10     	; 0xeea <vfprintf+0x208>
     ee0:	2f 7e       	andi	r18, 0xEF	; 239
     ee2:	b2 2e       	mov	r11, r18
     ee4:	2a e0       	ldi	r18, 0x0A	; 10
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	25 c0       	rjmp	.+74     	; 0xf34 <vfprintf+0x252>
     eea:	f2 2f       	mov	r31, r18
     eec:	f9 7f       	andi	r31, 0xF9	; 249
     eee:	bf 2e       	mov	r11, r31
     ef0:	8f 36       	cpi	r24, 0x6F	; 111
     ef2:	c1 f0       	breq	.+48     	; 0xf24 <vfprintf+0x242>
     ef4:	18 f4       	brcc	.+6      	; 0xefc <vfprintf+0x21a>
     ef6:	88 35       	cpi	r24, 0x58	; 88
     ef8:	79 f0       	breq	.+30     	; 0xf18 <vfprintf+0x236>
     efa:	ad c0       	rjmp	.+346    	; 0x1056 <vfprintf+0x374>
     efc:	80 37       	cpi	r24, 0x70	; 112
     efe:	19 f0       	breq	.+6      	; 0xf06 <vfprintf+0x224>
     f00:	88 37       	cpi	r24, 0x78	; 120
     f02:	21 f0       	breq	.+8      	; 0xf0c <vfprintf+0x22a>
     f04:	a8 c0       	rjmp	.+336    	; 0x1056 <vfprintf+0x374>
     f06:	2f 2f       	mov	r18, r31
     f08:	20 61       	ori	r18, 0x10	; 16
     f0a:	b2 2e       	mov	r11, r18
     f0c:	b4 fe       	sbrs	r11, 4
     f0e:	0d c0       	rjmp	.+26     	; 0xf2a <vfprintf+0x248>
     f10:	8b 2d       	mov	r24, r11
     f12:	84 60       	ori	r24, 0x04	; 4
     f14:	b8 2e       	mov	r11, r24
     f16:	09 c0       	rjmp	.+18     	; 0xf2a <vfprintf+0x248>
     f18:	24 ff       	sbrs	r18, 4
     f1a:	0a c0       	rjmp	.+20     	; 0xf30 <vfprintf+0x24e>
     f1c:	9f 2f       	mov	r25, r31
     f1e:	96 60       	ori	r25, 0x06	; 6
     f20:	b9 2e       	mov	r11, r25
     f22:	06 c0       	rjmp	.+12     	; 0xf30 <vfprintf+0x24e>
     f24:	28 e0       	ldi	r18, 0x08	; 8
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <vfprintf+0x252>
     f2a:	20 e1       	ldi	r18, 0x10	; 16
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <vfprintf+0x252>
     f30:	20 e1       	ldi	r18, 0x10	; 16
     f32:	32 e0       	ldi	r19, 0x02	; 2
     f34:	f8 01       	movw	r30, r16
     f36:	b7 fe       	sbrs	r11, 7
     f38:	07 c0       	rjmp	.+14     	; 0xf48 <vfprintf+0x266>
     f3a:	60 81       	ld	r22, Z
     f3c:	71 81       	ldd	r23, Z+1	; 0x01
     f3e:	82 81       	ldd	r24, Z+2	; 0x02
     f40:	93 81       	ldd	r25, Z+3	; 0x03
     f42:	0c 5f       	subi	r16, 0xFC	; 252
     f44:	1f 4f       	sbci	r17, 0xFF	; 255
     f46:	06 c0       	rjmp	.+12     	; 0xf54 <vfprintf+0x272>
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	0e 5f       	subi	r16, 0xFE	; 254
     f52:	1f 4f       	sbci	r17, 0xFF	; 255
     f54:	a4 01       	movw	r20, r8
     f56:	18 d2       	rcall	.+1072   	; 0x1388 <__ultoa_invert>
     f58:	a8 2e       	mov	r10, r24
     f5a:	a8 18       	sub	r10, r8
     f5c:	fb 2d       	mov	r31, r11
     f5e:	ff 77       	andi	r31, 0x7F	; 127
     f60:	bf 2e       	mov	r11, r31
     f62:	b6 fe       	sbrs	r11, 6
     f64:	0b c0       	rjmp	.+22     	; 0xf7c <vfprintf+0x29a>
     f66:	2b 2d       	mov	r18, r11
     f68:	2e 7f       	andi	r18, 0xFE	; 254
     f6a:	a5 14       	cp	r10, r5
     f6c:	50 f4       	brcc	.+20     	; 0xf82 <vfprintf+0x2a0>
     f6e:	b4 fe       	sbrs	r11, 4
     f70:	0a c0       	rjmp	.+20     	; 0xf86 <vfprintf+0x2a4>
     f72:	b2 fc       	sbrc	r11, 2
     f74:	08 c0       	rjmp	.+16     	; 0xf86 <vfprintf+0x2a4>
     f76:	2b 2d       	mov	r18, r11
     f78:	2e 7e       	andi	r18, 0xEE	; 238
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <vfprintf+0x2a4>
     f7c:	7a 2c       	mov	r7, r10
     f7e:	2b 2d       	mov	r18, r11
     f80:	03 c0       	rjmp	.+6      	; 0xf88 <vfprintf+0x2a6>
     f82:	7a 2c       	mov	r7, r10
     f84:	01 c0       	rjmp	.+2      	; 0xf88 <vfprintf+0x2a6>
     f86:	75 2c       	mov	r7, r5
     f88:	24 ff       	sbrs	r18, 4
     f8a:	0d c0       	rjmp	.+26     	; 0xfa6 <vfprintf+0x2c4>
     f8c:	fe 01       	movw	r30, r28
     f8e:	ea 0d       	add	r30, r10
     f90:	f1 1d       	adc	r31, r1
     f92:	80 81       	ld	r24, Z
     f94:	80 33       	cpi	r24, 0x30	; 48
     f96:	11 f4       	brne	.+4      	; 0xf9c <vfprintf+0x2ba>
     f98:	29 7e       	andi	r18, 0xE9	; 233
     f9a:	09 c0       	rjmp	.+18     	; 0xfae <vfprintf+0x2cc>
     f9c:	22 ff       	sbrs	r18, 2
     f9e:	06 c0       	rjmp	.+12     	; 0xfac <vfprintf+0x2ca>
     fa0:	73 94       	inc	r7
     fa2:	73 94       	inc	r7
     fa4:	04 c0       	rjmp	.+8      	; 0xfae <vfprintf+0x2cc>
     fa6:	82 2f       	mov	r24, r18
     fa8:	86 78       	andi	r24, 0x86	; 134
     faa:	09 f0       	breq	.+2      	; 0xfae <vfprintf+0x2cc>
     fac:	73 94       	inc	r7
     fae:	23 fd       	sbrc	r18, 3
     fb0:	12 c0       	rjmp	.+36     	; 0xfd6 <vfprintf+0x2f4>
     fb2:	20 ff       	sbrs	r18, 0
     fb4:	06 c0       	rjmp	.+12     	; 0xfc2 <vfprintf+0x2e0>
     fb6:	5a 2c       	mov	r5, r10
     fb8:	73 14       	cp	r7, r3
     fba:	18 f4       	brcc	.+6      	; 0xfc2 <vfprintf+0x2e0>
     fbc:	53 0c       	add	r5, r3
     fbe:	57 18       	sub	r5, r7
     fc0:	73 2c       	mov	r7, r3
     fc2:	73 14       	cp	r7, r3
     fc4:	60 f4       	brcc	.+24     	; 0xfde <vfprintf+0x2fc>
     fc6:	b7 01       	movw	r22, r14
     fc8:	80 e2       	ldi	r24, 0x20	; 32
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	2c 87       	std	Y+12, r18	; 0x0c
     fce:	aa d1       	rcall	.+852    	; 0x1324 <fputc>
     fd0:	73 94       	inc	r7
     fd2:	2c 85       	ldd	r18, Y+12	; 0x0c
     fd4:	f6 cf       	rjmp	.-20     	; 0xfc2 <vfprintf+0x2e0>
     fd6:	73 14       	cp	r7, r3
     fd8:	10 f4       	brcc	.+4      	; 0xfde <vfprintf+0x2fc>
     fda:	37 18       	sub	r3, r7
     fdc:	01 c0       	rjmp	.+2      	; 0xfe0 <vfprintf+0x2fe>
     fde:	31 2c       	mov	r3, r1
     fe0:	24 ff       	sbrs	r18, 4
     fe2:	11 c0       	rjmp	.+34     	; 0x1006 <vfprintf+0x324>
     fe4:	b7 01       	movw	r22, r14
     fe6:	80 e3       	ldi	r24, 0x30	; 48
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	2c 87       	std	Y+12, r18	; 0x0c
     fec:	9b d1       	rcall	.+822    	; 0x1324 <fputc>
     fee:	2c 85       	ldd	r18, Y+12	; 0x0c
     ff0:	22 ff       	sbrs	r18, 2
     ff2:	16 c0       	rjmp	.+44     	; 0x1020 <vfprintf+0x33e>
     ff4:	21 ff       	sbrs	r18, 1
     ff6:	03 c0       	rjmp	.+6      	; 0xffe <vfprintf+0x31c>
     ff8:	88 e5       	ldi	r24, 0x58	; 88
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <vfprintf+0x320>
     ffe:	88 e7       	ldi	r24, 0x78	; 120
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	b7 01       	movw	r22, r14
    1004:	0c c0       	rjmp	.+24     	; 0x101e <vfprintf+0x33c>
    1006:	82 2f       	mov	r24, r18
    1008:	86 78       	andi	r24, 0x86	; 134
    100a:	51 f0       	breq	.+20     	; 0x1020 <vfprintf+0x33e>
    100c:	21 fd       	sbrc	r18, 1
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <vfprintf+0x332>
    1010:	80 e2       	ldi	r24, 0x20	; 32
    1012:	01 c0       	rjmp	.+2      	; 0x1016 <vfprintf+0x334>
    1014:	8b e2       	ldi	r24, 0x2B	; 43
    1016:	27 fd       	sbrc	r18, 7
    1018:	8d e2       	ldi	r24, 0x2D	; 45
    101a:	b7 01       	movw	r22, r14
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	82 d1       	rcall	.+772    	; 0x1324 <fputc>
    1020:	a5 14       	cp	r10, r5
    1022:	30 f4       	brcc	.+12     	; 0x1030 <vfprintf+0x34e>
    1024:	b7 01       	movw	r22, r14
    1026:	80 e3       	ldi	r24, 0x30	; 48
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	7c d1       	rcall	.+760    	; 0x1324 <fputc>
    102c:	5a 94       	dec	r5
    102e:	f8 cf       	rjmp	.-16     	; 0x1020 <vfprintf+0x33e>
    1030:	aa 94       	dec	r10
    1032:	f4 01       	movw	r30, r8
    1034:	ea 0d       	add	r30, r10
    1036:	f1 1d       	adc	r31, r1
    1038:	80 81       	ld	r24, Z
    103a:	b7 01       	movw	r22, r14
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	72 d1       	rcall	.+740    	; 0x1324 <fputc>
    1040:	a1 10       	cpse	r10, r1
    1042:	f6 cf       	rjmp	.-20     	; 0x1030 <vfprintf+0x34e>
    1044:	33 20       	and	r3, r3
    1046:	09 f4       	brne	.+2      	; 0x104a <vfprintf+0x368>
    1048:	5d ce       	rjmp	.-838    	; 0xd04 <vfprintf+0x22>
    104a:	b7 01       	movw	r22, r14
    104c:	80 e2       	ldi	r24, 0x20	; 32
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	69 d1       	rcall	.+722    	; 0x1324 <fputc>
    1052:	3a 94       	dec	r3
    1054:	f7 cf       	rjmp	.-18     	; 0x1044 <vfprintf+0x362>
    1056:	f7 01       	movw	r30, r14
    1058:	86 81       	ldd	r24, Z+6	; 0x06
    105a:	97 81       	ldd	r25, Z+7	; 0x07
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <vfprintf+0x380>
    105e:	8f ef       	ldi	r24, 0xFF	; 255
    1060:	9f ef       	ldi	r25, 0xFF	; 255
    1062:	2c 96       	adiw	r28, 0x0c	; 12
    1064:	e2 e1       	ldi	r30, 0x12	; 18
    1066:	0a c2       	rjmp	.+1044   	; 0x147c <__epilogue_restores__>

00001068 <calloc>:
    1068:	0f 93       	push	r16
    106a:	1f 93       	push	r17
    106c:	cf 93       	push	r28
    106e:	df 93       	push	r29
    1070:	86 9f       	mul	r24, r22
    1072:	80 01       	movw	r16, r0
    1074:	87 9f       	mul	r24, r23
    1076:	10 0d       	add	r17, r0
    1078:	96 9f       	mul	r25, r22
    107a:	10 0d       	add	r17, r0
    107c:	11 24       	eor	r1, r1
    107e:	c8 01       	movw	r24, r16
    1080:	0d d0       	rcall	.+26     	; 0x109c <malloc>
    1082:	ec 01       	movw	r28, r24
    1084:	00 97       	sbiw	r24, 0x00	; 0
    1086:	21 f0       	breq	.+8      	; 0x1090 <calloc+0x28>
    1088:	a8 01       	movw	r20, r16
    108a:	60 e0       	ldi	r22, 0x00	; 0
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	38 d1       	rcall	.+624    	; 0x1300 <memset>
    1090:	ce 01       	movw	r24, r28
    1092:	df 91       	pop	r29
    1094:	cf 91       	pop	r28
    1096:	1f 91       	pop	r17
    1098:	0f 91       	pop	r16
    109a:	08 95       	ret

0000109c <malloc>:
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	82 30       	cpi	r24, 0x02	; 2
    10a2:	91 05       	cpc	r25, r1
    10a4:	10 f4       	brcc	.+4      	; 0x10aa <malloc+0xe>
    10a6:	82 e0       	ldi	r24, 0x02	; 2
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	e0 91 48 03 	lds	r30, 0x0348
    10ae:	f0 91 49 03 	lds	r31, 0x0349
    10b2:	20 e0       	ldi	r18, 0x00	; 0
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	a0 e0       	ldi	r26, 0x00	; 0
    10b8:	b0 e0       	ldi	r27, 0x00	; 0
    10ba:	30 97       	sbiw	r30, 0x00	; 0
    10bc:	39 f1       	breq	.+78     	; 0x110c <malloc+0x70>
    10be:	40 81       	ld	r20, Z
    10c0:	51 81       	ldd	r21, Z+1	; 0x01
    10c2:	48 17       	cp	r20, r24
    10c4:	59 07       	cpc	r21, r25
    10c6:	b8 f0       	brcs	.+46     	; 0x10f6 <malloc+0x5a>
    10c8:	48 17       	cp	r20, r24
    10ca:	59 07       	cpc	r21, r25
    10cc:	71 f4       	brne	.+28     	; 0x10ea <malloc+0x4e>
    10ce:	82 81       	ldd	r24, Z+2	; 0x02
    10d0:	93 81       	ldd	r25, Z+3	; 0x03
    10d2:	10 97       	sbiw	r26, 0x00	; 0
    10d4:	29 f0       	breq	.+10     	; 0x10e0 <malloc+0x44>
    10d6:	13 96       	adiw	r26, 0x03	; 3
    10d8:	9c 93       	st	X, r25
    10da:	8e 93       	st	-X, r24
    10dc:	12 97       	sbiw	r26, 0x02	; 2
    10de:	2c c0       	rjmp	.+88     	; 0x1138 <malloc+0x9c>
    10e0:	90 93 49 03 	sts	0x0349, r25
    10e4:	80 93 48 03 	sts	0x0348, r24
    10e8:	27 c0       	rjmp	.+78     	; 0x1138 <malloc+0x9c>
    10ea:	21 15       	cp	r18, r1
    10ec:	31 05       	cpc	r19, r1
    10ee:	31 f0       	breq	.+12     	; 0x10fc <malloc+0x60>
    10f0:	42 17       	cp	r20, r18
    10f2:	53 07       	cpc	r21, r19
    10f4:	18 f0       	brcs	.+6      	; 0x10fc <malloc+0x60>
    10f6:	a9 01       	movw	r20, r18
    10f8:	db 01       	movw	r26, r22
    10fa:	01 c0       	rjmp	.+2      	; 0x10fe <malloc+0x62>
    10fc:	ef 01       	movw	r28, r30
    10fe:	9a 01       	movw	r18, r20
    1100:	bd 01       	movw	r22, r26
    1102:	df 01       	movw	r26, r30
    1104:	02 80       	ldd	r0, Z+2	; 0x02
    1106:	f3 81       	ldd	r31, Z+3	; 0x03
    1108:	e0 2d       	mov	r30, r0
    110a:	d7 cf       	rjmp	.-82     	; 0x10ba <malloc+0x1e>
    110c:	21 15       	cp	r18, r1
    110e:	31 05       	cpc	r19, r1
    1110:	f9 f0       	breq	.+62     	; 0x1150 <malloc+0xb4>
    1112:	28 1b       	sub	r18, r24
    1114:	39 0b       	sbc	r19, r25
    1116:	24 30       	cpi	r18, 0x04	; 4
    1118:	31 05       	cpc	r19, r1
    111a:	80 f4       	brcc	.+32     	; 0x113c <malloc+0xa0>
    111c:	8a 81       	ldd	r24, Y+2	; 0x02
    111e:	9b 81       	ldd	r25, Y+3	; 0x03
    1120:	61 15       	cp	r22, r1
    1122:	71 05       	cpc	r23, r1
    1124:	21 f0       	breq	.+8      	; 0x112e <malloc+0x92>
    1126:	fb 01       	movw	r30, r22
    1128:	93 83       	std	Z+3, r25	; 0x03
    112a:	82 83       	std	Z+2, r24	; 0x02
    112c:	04 c0       	rjmp	.+8      	; 0x1136 <malloc+0x9a>
    112e:	90 93 49 03 	sts	0x0349, r25
    1132:	80 93 48 03 	sts	0x0348, r24
    1136:	fe 01       	movw	r30, r28
    1138:	32 96       	adiw	r30, 0x02	; 2
    113a:	44 c0       	rjmp	.+136    	; 0x11c4 <malloc+0x128>
    113c:	fe 01       	movw	r30, r28
    113e:	e2 0f       	add	r30, r18
    1140:	f3 1f       	adc	r31, r19
    1142:	81 93       	st	Z+, r24
    1144:	91 93       	st	Z+, r25
    1146:	22 50       	subi	r18, 0x02	; 2
    1148:	31 09       	sbc	r19, r1
    114a:	39 83       	std	Y+1, r19	; 0x01
    114c:	28 83       	st	Y, r18
    114e:	3a c0       	rjmp	.+116    	; 0x11c4 <malloc+0x128>
    1150:	20 91 46 03 	lds	r18, 0x0346
    1154:	30 91 47 03 	lds	r19, 0x0347
    1158:	23 2b       	or	r18, r19
    115a:	41 f4       	brne	.+16     	; 0x116c <malloc+0xd0>
    115c:	20 91 02 01 	lds	r18, 0x0102
    1160:	30 91 03 01 	lds	r19, 0x0103
    1164:	30 93 47 03 	sts	0x0347, r19
    1168:	20 93 46 03 	sts	0x0346, r18
    116c:	20 91 00 01 	lds	r18, 0x0100
    1170:	30 91 01 01 	lds	r19, 0x0101
    1174:	21 15       	cp	r18, r1
    1176:	31 05       	cpc	r19, r1
    1178:	41 f4       	brne	.+16     	; 0x118a <malloc+0xee>
    117a:	2d b7       	in	r18, 0x3d	; 61
    117c:	3e b7       	in	r19, 0x3e	; 62
    117e:	40 91 04 01 	lds	r20, 0x0104
    1182:	50 91 05 01 	lds	r21, 0x0105
    1186:	24 1b       	sub	r18, r20
    1188:	35 0b       	sbc	r19, r21
    118a:	e0 91 46 03 	lds	r30, 0x0346
    118e:	f0 91 47 03 	lds	r31, 0x0347
    1192:	e2 17       	cp	r30, r18
    1194:	f3 07       	cpc	r31, r19
    1196:	a0 f4       	brcc	.+40     	; 0x11c0 <malloc+0x124>
    1198:	2e 1b       	sub	r18, r30
    119a:	3f 0b       	sbc	r19, r31
    119c:	28 17       	cp	r18, r24
    119e:	39 07       	cpc	r19, r25
    11a0:	78 f0       	brcs	.+30     	; 0x11c0 <malloc+0x124>
    11a2:	ac 01       	movw	r20, r24
    11a4:	4e 5f       	subi	r20, 0xFE	; 254
    11a6:	5f 4f       	sbci	r21, 0xFF	; 255
    11a8:	24 17       	cp	r18, r20
    11aa:	35 07       	cpc	r19, r21
    11ac:	48 f0       	brcs	.+18     	; 0x11c0 <malloc+0x124>
    11ae:	4e 0f       	add	r20, r30
    11b0:	5f 1f       	adc	r21, r31
    11b2:	50 93 47 03 	sts	0x0347, r21
    11b6:	40 93 46 03 	sts	0x0346, r20
    11ba:	81 93       	st	Z+, r24
    11bc:	91 93       	st	Z+, r25
    11be:	02 c0       	rjmp	.+4      	; 0x11c4 <malloc+0x128>
    11c0:	e0 e0       	ldi	r30, 0x00	; 0
    11c2:	f0 e0       	ldi	r31, 0x00	; 0
    11c4:	cf 01       	movw	r24, r30
    11c6:	df 91       	pop	r29
    11c8:	cf 91       	pop	r28
    11ca:	08 95       	ret

000011cc <free>:
    11cc:	cf 93       	push	r28
    11ce:	df 93       	push	r29
    11d0:	00 97       	sbiw	r24, 0x00	; 0
    11d2:	09 f4       	brne	.+2      	; 0x11d6 <free+0xa>
    11d4:	87 c0       	rjmp	.+270    	; 0x12e4 <free+0x118>
    11d6:	fc 01       	movw	r30, r24
    11d8:	32 97       	sbiw	r30, 0x02	; 2
    11da:	13 82       	std	Z+3, r1	; 0x03
    11dc:	12 82       	std	Z+2, r1	; 0x02
    11de:	c0 91 48 03 	lds	r28, 0x0348
    11e2:	d0 91 49 03 	lds	r29, 0x0349
    11e6:	20 97       	sbiw	r28, 0x00	; 0
    11e8:	81 f4       	brne	.+32     	; 0x120a <free+0x3e>
    11ea:	20 81       	ld	r18, Z
    11ec:	31 81       	ldd	r19, Z+1	; 0x01
    11ee:	28 0f       	add	r18, r24
    11f0:	39 1f       	adc	r19, r25
    11f2:	80 91 46 03 	lds	r24, 0x0346
    11f6:	90 91 47 03 	lds	r25, 0x0347
    11fa:	82 17       	cp	r24, r18
    11fc:	93 07       	cpc	r25, r19
    11fe:	79 f5       	brne	.+94     	; 0x125e <free+0x92>
    1200:	f0 93 47 03 	sts	0x0347, r31
    1204:	e0 93 46 03 	sts	0x0346, r30
    1208:	6d c0       	rjmp	.+218    	; 0x12e4 <free+0x118>
    120a:	de 01       	movw	r26, r28
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	ae 17       	cp	r26, r30
    1212:	bf 07       	cpc	r27, r31
    1214:	50 f4       	brcc	.+20     	; 0x122a <free+0x5e>
    1216:	12 96       	adiw	r26, 0x02	; 2
    1218:	4d 91       	ld	r20, X+
    121a:	5c 91       	ld	r21, X
    121c:	13 97       	sbiw	r26, 0x03	; 3
    121e:	9d 01       	movw	r18, r26
    1220:	41 15       	cp	r20, r1
    1222:	51 05       	cpc	r21, r1
    1224:	09 f1       	breq	.+66     	; 0x1268 <free+0x9c>
    1226:	da 01       	movw	r26, r20
    1228:	f3 cf       	rjmp	.-26     	; 0x1210 <free+0x44>
    122a:	b3 83       	std	Z+3, r27	; 0x03
    122c:	a2 83       	std	Z+2, r26	; 0x02
    122e:	40 81       	ld	r20, Z
    1230:	51 81       	ldd	r21, Z+1	; 0x01
    1232:	84 0f       	add	r24, r20
    1234:	95 1f       	adc	r25, r21
    1236:	8a 17       	cp	r24, r26
    1238:	9b 07       	cpc	r25, r27
    123a:	71 f4       	brne	.+28     	; 0x1258 <free+0x8c>
    123c:	8d 91       	ld	r24, X+
    123e:	9c 91       	ld	r25, X
    1240:	11 97       	sbiw	r26, 0x01	; 1
    1242:	84 0f       	add	r24, r20
    1244:	95 1f       	adc	r25, r21
    1246:	02 96       	adiw	r24, 0x02	; 2
    1248:	91 83       	std	Z+1, r25	; 0x01
    124a:	80 83       	st	Z, r24
    124c:	12 96       	adiw	r26, 0x02	; 2
    124e:	8d 91       	ld	r24, X+
    1250:	9c 91       	ld	r25, X
    1252:	13 97       	sbiw	r26, 0x03	; 3
    1254:	93 83       	std	Z+3, r25	; 0x03
    1256:	82 83       	std	Z+2, r24	; 0x02
    1258:	21 15       	cp	r18, r1
    125a:	31 05       	cpc	r19, r1
    125c:	29 f4       	brne	.+10     	; 0x1268 <free+0x9c>
    125e:	f0 93 49 03 	sts	0x0349, r31
    1262:	e0 93 48 03 	sts	0x0348, r30
    1266:	3e c0       	rjmp	.+124    	; 0x12e4 <free+0x118>
    1268:	d9 01       	movw	r26, r18
    126a:	13 96       	adiw	r26, 0x03	; 3
    126c:	fc 93       	st	X, r31
    126e:	ee 93       	st	-X, r30
    1270:	12 97       	sbiw	r26, 0x02	; 2
    1272:	4d 91       	ld	r20, X+
    1274:	5d 91       	ld	r21, X+
    1276:	a4 0f       	add	r26, r20
    1278:	b5 1f       	adc	r27, r21
    127a:	ea 17       	cp	r30, r26
    127c:	fb 07       	cpc	r31, r27
    127e:	79 f4       	brne	.+30     	; 0x129e <free+0xd2>
    1280:	80 81       	ld	r24, Z
    1282:	91 81       	ldd	r25, Z+1	; 0x01
    1284:	84 0f       	add	r24, r20
    1286:	95 1f       	adc	r25, r21
    1288:	02 96       	adiw	r24, 0x02	; 2
    128a:	d9 01       	movw	r26, r18
    128c:	11 96       	adiw	r26, 0x01	; 1
    128e:	9c 93       	st	X, r25
    1290:	8e 93       	st	-X, r24
    1292:	82 81       	ldd	r24, Z+2	; 0x02
    1294:	93 81       	ldd	r25, Z+3	; 0x03
    1296:	13 96       	adiw	r26, 0x03	; 3
    1298:	9c 93       	st	X, r25
    129a:	8e 93       	st	-X, r24
    129c:	12 97       	sbiw	r26, 0x02	; 2
    129e:	e0 e0       	ldi	r30, 0x00	; 0
    12a0:	f0 e0       	ldi	r31, 0x00	; 0
    12a2:	8a 81       	ldd	r24, Y+2	; 0x02
    12a4:	9b 81       	ldd	r25, Y+3	; 0x03
    12a6:	00 97       	sbiw	r24, 0x00	; 0
    12a8:	19 f0       	breq	.+6      	; 0x12b0 <free+0xe4>
    12aa:	fe 01       	movw	r30, r28
    12ac:	ec 01       	movw	r28, r24
    12ae:	f9 cf       	rjmp	.-14     	; 0x12a2 <free+0xd6>
    12b0:	ce 01       	movw	r24, r28
    12b2:	02 96       	adiw	r24, 0x02	; 2
    12b4:	28 81       	ld	r18, Y
    12b6:	39 81       	ldd	r19, Y+1	; 0x01
    12b8:	82 0f       	add	r24, r18
    12ba:	93 1f       	adc	r25, r19
    12bc:	20 91 46 03 	lds	r18, 0x0346
    12c0:	30 91 47 03 	lds	r19, 0x0347
    12c4:	28 17       	cp	r18, r24
    12c6:	39 07       	cpc	r19, r25
    12c8:	69 f4       	brne	.+26     	; 0x12e4 <free+0x118>
    12ca:	30 97       	sbiw	r30, 0x00	; 0
    12cc:	29 f4       	brne	.+10     	; 0x12d8 <free+0x10c>
    12ce:	10 92 49 03 	sts	0x0349, r1
    12d2:	10 92 48 03 	sts	0x0348, r1
    12d6:	02 c0       	rjmp	.+4      	; 0x12dc <free+0x110>
    12d8:	13 82       	std	Z+3, r1	; 0x03
    12da:	12 82       	std	Z+2, r1	; 0x02
    12dc:	d0 93 47 03 	sts	0x0347, r29
    12e0:	c0 93 46 03 	sts	0x0346, r28
    12e4:	df 91       	pop	r29
    12e6:	cf 91       	pop	r28
    12e8:	08 95       	ret

000012ea <strnlen_P>:
    12ea:	fc 01       	movw	r30, r24
    12ec:	05 90       	lpm	r0, Z+
    12ee:	61 50       	subi	r22, 0x01	; 1
    12f0:	70 40       	sbci	r23, 0x00	; 0
    12f2:	01 10       	cpse	r0, r1
    12f4:	d8 f7       	brcc	.-10     	; 0x12ec <strnlen_P+0x2>
    12f6:	80 95       	com	r24
    12f8:	90 95       	com	r25
    12fa:	8e 0f       	add	r24, r30
    12fc:	9f 1f       	adc	r25, r31
    12fe:	08 95       	ret

00001300 <memset>:
    1300:	dc 01       	movw	r26, r24
    1302:	01 c0       	rjmp	.+2      	; 0x1306 <memset+0x6>
    1304:	6d 93       	st	X+, r22
    1306:	41 50       	subi	r20, 0x01	; 1
    1308:	50 40       	sbci	r21, 0x00	; 0
    130a:	e0 f7       	brcc	.-8      	; 0x1304 <memset+0x4>
    130c:	08 95       	ret

0000130e <strnlen>:
    130e:	fc 01       	movw	r30, r24
    1310:	61 50       	subi	r22, 0x01	; 1
    1312:	70 40       	sbci	r23, 0x00	; 0
    1314:	01 90       	ld	r0, Z+
    1316:	01 10       	cpse	r0, r1
    1318:	d8 f7       	brcc	.-10     	; 0x1310 <strnlen+0x2>
    131a:	80 95       	com	r24
    131c:	90 95       	com	r25
    131e:	8e 0f       	add	r24, r30
    1320:	9f 1f       	adc	r25, r31
    1322:	08 95       	ret

00001324 <fputc>:
    1324:	0f 93       	push	r16
    1326:	1f 93       	push	r17
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
    132c:	18 2f       	mov	r17, r24
    132e:	09 2f       	mov	r16, r25
    1330:	eb 01       	movw	r28, r22
    1332:	8b 81       	ldd	r24, Y+3	; 0x03
    1334:	81 fd       	sbrc	r24, 1
    1336:	03 c0       	rjmp	.+6      	; 0x133e <fputc+0x1a>
    1338:	8f ef       	ldi	r24, 0xFF	; 255
    133a:	9f ef       	ldi	r25, 0xFF	; 255
    133c:	20 c0       	rjmp	.+64     	; 0x137e <fputc+0x5a>
    133e:	82 ff       	sbrs	r24, 2
    1340:	10 c0       	rjmp	.+32     	; 0x1362 <fputc+0x3e>
    1342:	4e 81       	ldd	r20, Y+6	; 0x06
    1344:	5f 81       	ldd	r21, Y+7	; 0x07
    1346:	2c 81       	ldd	r18, Y+4	; 0x04
    1348:	3d 81       	ldd	r19, Y+5	; 0x05
    134a:	42 17       	cp	r20, r18
    134c:	53 07       	cpc	r21, r19
    134e:	7c f4       	brge	.+30     	; 0x136e <fputc+0x4a>
    1350:	e8 81       	ld	r30, Y
    1352:	f9 81       	ldd	r31, Y+1	; 0x01
    1354:	9f 01       	movw	r18, r30
    1356:	2f 5f       	subi	r18, 0xFF	; 255
    1358:	3f 4f       	sbci	r19, 0xFF	; 255
    135a:	39 83       	std	Y+1, r19	; 0x01
    135c:	28 83       	st	Y, r18
    135e:	10 83       	st	Z, r17
    1360:	06 c0       	rjmp	.+12     	; 0x136e <fputc+0x4a>
    1362:	e8 85       	ldd	r30, Y+8	; 0x08
    1364:	f9 85       	ldd	r31, Y+9	; 0x09
    1366:	81 2f       	mov	r24, r17
    1368:	09 95       	icall
    136a:	89 2b       	or	r24, r25
    136c:	29 f7       	brne	.-54     	; 0x1338 <fputc+0x14>
    136e:	2e 81       	ldd	r18, Y+6	; 0x06
    1370:	3f 81       	ldd	r19, Y+7	; 0x07
    1372:	2f 5f       	subi	r18, 0xFF	; 255
    1374:	3f 4f       	sbci	r19, 0xFF	; 255
    1376:	3f 83       	std	Y+7, r19	; 0x07
    1378:	2e 83       	std	Y+6, r18	; 0x06
    137a:	81 2f       	mov	r24, r17
    137c:	90 2f       	mov	r25, r16
    137e:	df 91       	pop	r29
    1380:	cf 91       	pop	r28
    1382:	1f 91       	pop	r17
    1384:	0f 91       	pop	r16
    1386:	08 95       	ret

00001388 <__ultoa_invert>:
    1388:	fa 01       	movw	r30, r20
    138a:	aa 27       	eor	r26, r26
    138c:	28 30       	cpi	r18, 0x08	; 8
    138e:	51 f1       	breq	.+84     	; 0x13e4 <__ultoa_invert+0x5c>
    1390:	20 31       	cpi	r18, 0x10	; 16
    1392:	81 f1       	breq	.+96     	; 0x13f4 <__ultoa_invert+0x6c>
    1394:	e8 94       	clt
    1396:	6f 93       	push	r22
    1398:	6e 7f       	andi	r22, 0xFE	; 254
    139a:	6e 5f       	subi	r22, 0xFE	; 254
    139c:	7f 4f       	sbci	r23, 0xFF	; 255
    139e:	8f 4f       	sbci	r24, 0xFF	; 255
    13a0:	9f 4f       	sbci	r25, 0xFF	; 255
    13a2:	af 4f       	sbci	r26, 0xFF	; 255
    13a4:	b1 e0       	ldi	r27, 0x01	; 1
    13a6:	3e d0       	rcall	.+124    	; 0x1424 <__ultoa_invert+0x9c>
    13a8:	b4 e0       	ldi	r27, 0x04	; 4
    13aa:	3c d0       	rcall	.+120    	; 0x1424 <__ultoa_invert+0x9c>
    13ac:	67 0f       	add	r22, r23
    13ae:	78 1f       	adc	r23, r24
    13b0:	89 1f       	adc	r24, r25
    13b2:	9a 1f       	adc	r25, r26
    13b4:	a1 1d       	adc	r26, r1
    13b6:	68 0f       	add	r22, r24
    13b8:	79 1f       	adc	r23, r25
    13ba:	8a 1f       	adc	r24, r26
    13bc:	91 1d       	adc	r25, r1
    13be:	a1 1d       	adc	r26, r1
    13c0:	6a 0f       	add	r22, r26
    13c2:	71 1d       	adc	r23, r1
    13c4:	81 1d       	adc	r24, r1
    13c6:	91 1d       	adc	r25, r1
    13c8:	a1 1d       	adc	r26, r1
    13ca:	20 d0       	rcall	.+64     	; 0x140c <__ultoa_invert+0x84>
    13cc:	09 f4       	brne	.+2      	; 0x13d0 <__ultoa_invert+0x48>
    13ce:	68 94       	set
    13d0:	3f 91       	pop	r19
    13d2:	2a e0       	ldi	r18, 0x0A	; 10
    13d4:	26 9f       	mul	r18, r22
    13d6:	11 24       	eor	r1, r1
    13d8:	30 19       	sub	r19, r0
    13da:	30 5d       	subi	r19, 0xD0	; 208
    13dc:	31 93       	st	Z+, r19
    13de:	de f6       	brtc	.-74     	; 0x1396 <__ultoa_invert+0xe>
    13e0:	cf 01       	movw	r24, r30
    13e2:	08 95       	ret
    13e4:	46 2f       	mov	r20, r22
    13e6:	47 70       	andi	r20, 0x07	; 7
    13e8:	40 5d       	subi	r20, 0xD0	; 208
    13ea:	41 93       	st	Z+, r20
    13ec:	b3 e0       	ldi	r27, 0x03	; 3
    13ee:	0f d0       	rcall	.+30     	; 0x140e <__ultoa_invert+0x86>
    13f0:	c9 f7       	brne	.-14     	; 0x13e4 <__ultoa_invert+0x5c>
    13f2:	f6 cf       	rjmp	.-20     	; 0x13e0 <__ultoa_invert+0x58>
    13f4:	46 2f       	mov	r20, r22
    13f6:	4f 70       	andi	r20, 0x0F	; 15
    13f8:	40 5d       	subi	r20, 0xD0	; 208
    13fa:	4a 33       	cpi	r20, 0x3A	; 58
    13fc:	18 f0       	brcs	.+6      	; 0x1404 <__ultoa_invert+0x7c>
    13fe:	49 5d       	subi	r20, 0xD9	; 217
    1400:	31 fd       	sbrc	r19, 1
    1402:	40 52       	subi	r20, 0x20	; 32
    1404:	41 93       	st	Z+, r20
    1406:	02 d0       	rcall	.+4      	; 0x140c <__ultoa_invert+0x84>
    1408:	a9 f7       	brne	.-22     	; 0x13f4 <__ultoa_invert+0x6c>
    140a:	ea cf       	rjmp	.-44     	; 0x13e0 <__ultoa_invert+0x58>
    140c:	b4 e0       	ldi	r27, 0x04	; 4
    140e:	a6 95       	lsr	r26
    1410:	97 95       	ror	r25
    1412:	87 95       	ror	r24
    1414:	77 95       	ror	r23
    1416:	67 95       	ror	r22
    1418:	ba 95       	dec	r27
    141a:	c9 f7       	brne	.-14     	; 0x140e <__ultoa_invert+0x86>
    141c:	00 97       	sbiw	r24, 0x00	; 0
    141e:	61 05       	cpc	r22, r1
    1420:	71 05       	cpc	r23, r1
    1422:	08 95       	ret
    1424:	9b 01       	movw	r18, r22
    1426:	ac 01       	movw	r20, r24
    1428:	0a 2e       	mov	r0, r26
    142a:	06 94       	lsr	r0
    142c:	57 95       	ror	r21
    142e:	47 95       	ror	r20
    1430:	37 95       	ror	r19
    1432:	27 95       	ror	r18
    1434:	ba 95       	dec	r27
    1436:	c9 f7       	brne	.-14     	; 0x142a <__ultoa_invert+0xa2>
    1438:	62 0f       	add	r22, r18
    143a:	73 1f       	adc	r23, r19
    143c:	84 1f       	adc	r24, r20
    143e:	95 1f       	adc	r25, r21
    1440:	a0 1d       	adc	r26, r0
    1442:	08 95       	ret

00001444 <__prologue_saves__>:
    1444:	2f 92       	push	r2
    1446:	3f 92       	push	r3
    1448:	4f 92       	push	r4
    144a:	5f 92       	push	r5
    144c:	6f 92       	push	r6
    144e:	7f 92       	push	r7
    1450:	8f 92       	push	r8
    1452:	9f 92       	push	r9
    1454:	af 92       	push	r10
    1456:	bf 92       	push	r11
    1458:	cf 92       	push	r12
    145a:	df 92       	push	r13
    145c:	ef 92       	push	r14
    145e:	ff 92       	push	r15
    1460:	0f 93       	push	r16
    1462:	1f 93       	push	r17
    1464:	cf 93       	push	r28
    1466:	df 93       	push	r29
    1468:	cd b7       	in	r28, 0x3d	; 61
    146a:	de b7       	in	r29, 0x3e	; 62
    146c:	ca 1b       	sub	r28, r26
    146e:	db 0b       	sbc	r29, r27
    1470:	0f b6       	in	r0, 0x3f	; 63
    1472:	f8 94       	cli
    1474:	de bf       	out	0x3e, r29	; 62
    1476:	0f be       	out	0x3f, r0	; 63
    1478:	cd bf       	out	0x3d, r28	; 61
    147a:	09 94       	ijmp

0000147c <__epilogue_restores__>:
    147c:	2a 88       	ldd	r2, Y+18	; 0x12
    147e:	39 88       	ldd	r3, Y+17	; 0x11
    1480:	48 88       	ldd	r4, Y+16	; 0x10
    1482:	5f 84       	ldd	r5, Y+15	; 0x0f
    1484:	6e 84       	ldd	r6, Y+14	; 0x0e
    1486:	7d 84       	ldd	r7, Y+13	; 0x0d
    1488:	8c 84       	ldd	r8, Y+12	; 0x0c
    148a:	9b 84       	ldd	r9, Y+11	; 0x0b
    148c:	aa 84       	ldd	r10, Y+10	; 0x0a
    148e:	b9 84       	ldd	r11, Y+9	; 0x09
    1490:	c8 84       	ldd	r12, Y+8	; 0x08
    1492:	df 80       	ldd	r13, Y+7	; 0x07
    1494:	ee 80       	ldd	r14, Y+6	; 0x06
    1496:	fd 80       	ldd	r15, Y+5	; 0x05
    1498:	0c 81       	ldd	r16, Y+4	; 0x04
    149a:	1b 81       	ldd	r17, Y+3	; 0x03
    149c:	aa 81       	ldd	r26, Y+2	; 0x02
    149e:	b9 81       	ldd	r27, Y+1	; 0x01
    14a0:	ce 0f       	add	r28, r30
    14a2:	d1 1d       	adc	r29, r1
    14a4:	0f b6       	in	r0, 0x3f	; 63
    14a6:	f8 94       	cli
    14a8:	de bf       	out	0x3e, r29	; 62
    14aa:	0f be       	out	0x3f, r0	; 63
    14ac:	cd bf       	out	0x3d, r28	; 61
    14ae:	ed 01       	movw	r28, r26
    14b0:	08 95       	ret

000014b2 <_exit>:
    14b2:	f8 94       	cli

000014b4 <__stop_program>:
    14b4:	ff cf       	rjmp	.-2      	; 0x14b4 <__stop_program>
